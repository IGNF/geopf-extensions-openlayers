{"version":3,"file":"GpfExtOlControlList.js","mappings":"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","sources":["webpack://geopf-extensions-openlayers/./node_modules/loglevel/lib/loglevel.js","webpack://geopf-extensions-openlayers/webpack/bootstrap","webpack://geopf-extensions-openlayers/webpack/runtime/compat get default export","webpack://geopf-extensions-openlayers/webpack/runtime/define property getters","webpack://geopf-extensions-openlayers/webpack/runtime/hasOwnProperty shorthand","webpack://geopf-extensions-openlayers/./src/packages/Utils/PanelManager.js","webpack://geopf-extensions-openlayers/./src/packages/Controls/Widget.js","webpack://geopf-extensions-openlayers/external assign \"ol.control.Control\"","webpack://geopf-extensions-openlayers/./src/packages/Controls/Utils/CheckDsfr.js","webpack://geopf-extensions-openlayers/./src/packages/Controls/Control.js","webpack://geopf-extensions-openlayers/external assign \"ol.Map\"","webpack://geopf-extensions-openlayers/./src/packages/Utils/LoggerByDefault.js","webpack://geopf-extensions-openlayers/./src/packages/Utils/Helper.js","webpack://geopf-extensions-openlayers/./src/packages/Utils/SelectorID.js","webpack://geopf-extensions-openlayers/./src/packages/Utils/Draggable.js","webpack://geopf-extensions-openlayers/external assign \"ol.interaction\"","webpack://geopf-extensions-openlayers/./src/packages/Controls/Utils/Interactions.js","webpack://geopf-extensions-openlayers/./src/packages/Controls/ControlList/ControlListDOM.js","webpack://geopf-extensions-openlayers/./src/packages/Controls/ControlList/ControlList.js"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const exceptions = [\"GPoverviewMap\", \"GPfullScreen\"];\n\nfunction getSameSideOpenedPanel (position, openedPanelID) {\n    // on ajoute aux exceptions le panel qui vient d'être ouvert\n    var exceptionPanel = [...exceptions, openedPanelID];\n    var controlPanels = [];\n    if (position && position.includes(\"left\")) {\n        var bottomLeft = document.getElementById(\"position-container-bottom-left\");\n        var topLeft = document.getElementById(\"position-container-top-left\");\n        controlPanels = [...bottomLeft.children, ...topLeft.children];\n    }\n    if (position && position.includes(\"right\")) {\n        var bottomRight = document.getElementById(\"position-container-bottom-right\");\n        var topRight = document.getElementById(\"position-container-top-right\");\n        controlPanels = [...bottomRight.children, ...topRight.children];\n    }\n    // on ne ferme que les panles déjà ouverts qui ne sont pas exceptions\n    return controlPanels.filter(p => {\n        var panelID = p.id.match(/(\\w+)-[0-9]+/)[1];\n        var isException = exceptionPanel.includes(panelID);\n        var isOpened = p.getElementsByTagName(\"button\")[0].getAttribute(\"aria-pressed\");\n        if (isOpened === \"true\" && !isException) {\n            return p;\n        }\n    });\n}\n\nvar PanelManager = function (position, openedPanelID) {\n    var openedPanel = getSameSideOpenedPanel(position, openedPanelID);\n    if (openedPanel.length > 0) {\n        openedPanel[0].getElementsByTagName(\"button\")[0].click();\n    }\n};\n\nexport default PanelManager;\n","import PanelManager from \"../Utils/PanelManager\";\n// Mixin pour ajouter des méthodes communes à tous les widgets.\n\n// voir fichiers DOM  et assign\n// modifier snippets.\nvar Widget = {\n    /**\n     * This method is called when a widget opens a panel\n     * It calls the panelManager to automatically close other panels\n     */\n    onPanelOpen : function () {\n        // On récupère l'id du widget à partir de l'id du DOM de la forme GPwidgetName-1876465465\n        PanelManager(this.options.position, this.element.id.match(/(\\w+)-[0-9]+/)[1]);\n    }\n};\n\nexport default Widget;","const __WEBPACK_NAMESPACE_OBJECT__ = ol.control.Control;","var checkDsfr = function () {\n    // HACK: check si le styl dsfr est chargé via la variable blue-france-sun-113-625\n    var style = getComputedStyle(document.documentElement);\n    var color = style.getPropertyValue(\"--blue-france-sun-113-625\");\n    if (color === \"\") {\n        return false;\n    }\n    return true;\n};\n\nexport default checkDsfr;\n\n","import Control from \"ol/control/Control\";\nimport checkDsfr from \"./Utils/CheckDsfr\";\n\nclass ControlExtended extends Control {\n\n    constructor (options) {\n        options = options || {};\n        super({\n            element : options.element,\n            target : options.target,\n            render : options.render\n        });\n        // Can the control appear in the ControlList control\n        if (options && options.listable) {\n            this.listable = true;\n        } else {\n            this.listable = false;\n        }\n        // Set the control desctiption\n        if (options && options.description) {\n            this.description = options.description;\n        } else {\n            this.description = \"\";\n        }\n    }\n\n    setPosition (pos) {\n        if (this.getMap()) {\n            var instance = new PositionFactory(this);\n            instance.set(pos);\n        }\n    }\n\n    updatePosition (pos) {\n        if (this.getMap()) {\n            var instance = new PositionFactory(this);\n            instance.update(pos);\n        }\n    }\n\n};\n\nexport default ControlExtended;\n\n/**\n * gestion des anchors\n */\nconst ANCHORS = [\n    \"top-left\",\n    \"top-right\",\n    \"bottom-left\",\n    \"bottom-right\"\n];\n\n/**\n * Position\n * @private\n */\nclass PositionFactory {\n\n    /**\n     * constructor\n     * @param {*} caller - ...\n     */\n    constructor (caller) {\n        this.caller = caller;\n        this.container = null;\n\n        this.#createContainer(\"top-left\");\n        this.#createContainer(\"top-right\");\n        this.#createContainer(\"bottom-left\");\n        this.#createContainer(\"bottom-right\");\n\n        return this;\n    }\n\n    /**\n     * ...\n     * @param {*} name  - ...\n     * @returns {Boolean} ...\n     */\n    #existContainer (name) {\n        var div = this.container.children[\"position-container-\" + name];\n        if (div) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * ...\n     * @param {*} name - ...\n     * @private\n     */\n    #createContainer (name) {\n        this.container = this.caller.getMap().getOverlayContainerStopEvent();\n\n        if (this.#existContainer(name)) {\n            return;\n        }\n        // INFO\n        // positionner les classes position-container-[left|right|top|bottom]\n        // ex. { position:relative; height:50px; width:100%; }\n        var div = document.createElement(\"div\");\n        div.id = \"position-container-\" + name;\n        div.className = \"position position-container-\" + name ;\n\n        this.container.appendChild(div);\n    }\n\n    /**\n     * ...\n     * @param {*} pos - ...\n     * @param {*} update - ...\n     * @todo fonctionnement à tester !\n     */\n    #setAnchor (pos, update) {\n        var self = this;\n        const position = (pos) => {\n            var element = self.container.children[\"position-container-\" + pos];\n            return element.children.length;\n        };\n        const sizeW = (pos) => {\n            var element = self.container.children[\"position-container-\" + pos];\n            var width = element.offsetWidth;\n            return width;\n        };\n        const sizeH = (pos) => {\n            var element = self.container.children[\"position-container-\" + pos];\n            var height = element.offsetHeight;\n            if (update) {\n                if (pos.includes(\"top\")) {\n                    height = 0;\n                }\n                // on recalcule la position en hauteur\n                for (let index = 0; index < element.children.length; index++) {\n                    const id = element.children[index].id;\n                    if (id === self.caller.element.id) {\n                        height = (pos.includes(\"bottom\")) ? height - self.caller.element.offsetHeight : height * (-1);\n                        break;\n                    }\n                    height -= element.children[index].offsetHeight;\n                }\n            }\n            return height;\n        };\n        const clear = (element) => {\n            element.style.top = \"unset\";\n            element.style.bottom = \"unset\";\n            element.style.left = \"unset\";\n            element.style.right = \"unset\";\n        };\n\n        // on supprime le style de positionnement (top, left...)\n        // car on souhaite une nouvelle position\n        clear(this.caller.element);\n        this.caller.element.style.position = \"unset\"; // div.GPwidget\n\n        // on recherche les panneaux (panel) :\n        // * panel de formulaire\n        // * panel de resultats (?)\n        var panels = Array.from(this.caller.element.getElementsByClassName(\"GPpanel\"));\n        if (panels.length === 0) {\n            return;\n        }\n        var offset = 0;\n        panels.forEach((panel) => {\n            // INFO\n            // on va eviter de modifier les panneaux de resultats\n            // car leurs positions sont souvent relative aux panneaux\n            // des formulaires\n            if (panel.nodeName.toLowerCase() !== \"dialog\") {\n                return;\n            }\n            clear(panel);\n            // on modifie le positionnement du menu (dialog ou div : panel)\n            // en fonction du bouton\n            // ex. bouton : bottom-left, menu : bottom:0px; left:50px\n            switch (pos.toLowerCase()) {\n                case \"top-left\":\n                    if (checkDsfr()) {\n                        panel.style.top = \"0px\";\n                    } else {\n                        panel.style.top = position(pos) ? sizeH(pos) + \"px\" : \"0px\";\n                    }\n                    panel.style.left = sizeW(pos) + offset + \"px\";\n                    break;\n                case \"bottom-left\":\n                    if (checkDsfr()) {\n                        panel.style.top = \"0px\";\n                    } else {\n                        panel.style.bottom = position(pos) ? sizeH(pos) + \"px\" : \"0px\";\n                    }\n                    panel.style.left = sizeW(pos) + offset + \"px\";\n                    break;\n                case \"top-right\":\n                    if (checkDsfr()) {\n                        panel.style.top = \"0px\";\n                    } else {\n                        panel.style.top = position(pos) ? sizeH(pos) + \"px\" : \"0px\";\n                    }\n                    panel.style.right = sizeW(pos) + offset + \"px\";\n                    break;\n                case \"bottom-right\":\n                    if (checkDsfr()) {\n                        panel.style.top = \"0px\";\n                    } else {\n                        panel.style.bottom = position(pos) ? sizeH(pos) + \"px\" : \"0px\";\n                    }\n                    panel.style.right = sizeW(pos) + offset + \"px\";\n                    break;\n                default:\n                    break;\n            }\n            offset += panel.offsetWidth;\n        });\n    }\n\n    /**\n     * ...\n     * @param {*} pos - ...\n     * @public\n     */\n    set (pos) {\n        if (!ANCHORS.includes(pos.toLowerCase())) {\n            return;\n        }\n        // positionnement de l'element\n        this.#setAnchor(pos, false);\n\n        if (pos.includes(\"bottom\")) {\n            this.container.children[\"position-container-\" + pos].prepend(this.caller.element);\n        } else {\n            this.container.children[\"position-container-\" + pos].appendChild(this.caller.element);\n        }\n    }\n\n    /**\n     * ...\n     * @param {*} pos - ...\n     * @public\n     */\n    update (pos) {\n        if (!ANCHORS.includes(pos.toLowerCase())) {\n            return;\n        }\n        // positionnement de l'element\n        // mais, il faut prendre en compte la position !\n        this.#setAnchor(pos, true);\n    }\n\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = ol.Map;","import * as Log from \"loglevel\";\n\n/**\n * @module LoggerByDefault\n * @alias module:~utils/Logger\n * @description\n * ...\n *\n * @example\n * import Logger from \"gpf-ext-ol/utils/LoggerByDefault\"\n * ou \n * import {Logger} from \"gpf-ext-ol\n * \n * Logger.getLogger();\n * Logger.disableAll();\n * Logger.enableAll();\n */\nvar LoggerByDefault = {\n    /**\n     * creation d'un logger statique\n     *\n     * @function getLogger\n     * @param {String} [name=\"default\"] - the logger name\n     * @returns {Object} logger\n     */\n    getLogger : function (name) {\n        // on définit process si non défini dans l'environnement\n        if (typeof process === \"undefined\") {\n            var process = {};\n            process.env = {\n                VERBOSE : false\n            };\n        }\n        (process.env.VERBOSE) ? Log.enableAll() : Log.disableAll();\n        var logname = name || \"default\";\n        return Log.getLogger(logname);\n    },\n    /**\n     * desactive tous les loggers\n     * @function disableAll\n     */\n    disableAll : function () {\n        var loggers = Log.getLoggers();\n        for (const key in loggers) {\n            if (Object.hasOwnProperty.call(loggers, key)) {\n                const logger = loggers[key];\n                logger.disableAll();\n            }\n        }\n    },\n    /**\n     * active tous les loggers\n     * @function enableAll\n     */\n    enableAll : function () {\n        var loggers = Log.getLoggers();\n        for (const key in loggers) {\n            if (Object.hasOwnProperty.call(loggers, key)) {\n                const logger = loggers[key];\n                logger.enableAll();\n            }\n        }\n    }\n};\n\nexport default LoggerByDefault;\n\n// Expose Export as ol.control.Catalog (for a build bundle)\nif (window.Gp) {\n    window.Gp.Logger = LoggerByDefault;\n}\n","/**\n* @module Helper\n* @alias module:~utils/HelperUtils\n* @description\n* ...\n*\n* @example\n* import HelperUtils from \"gpf-ext-ol/utils/HelperUtils\"\n* ou \n* import {HelperUtils} from \"gpf-ext-ol\n* \n* HelperUtils.detectSupport();\n* HelperUtils.assign();\n* HelperUtils.mergeParams();\n*/\nvar Helper = {\n\n    /**\n     * this method is called by the constructor.\n     * this information is useful to switch to touch mode.\n     * Detection : test for desktop or tactile\n     *\n     * @function detectSupport\n     * @returns {Boolean} isDesktop - true for desktop userAgent, false for mobile\n     */\n    detectSupport : function () {\n        var isDesktop = true;\n        var userAgent = window.navigator.userAgent.toLowerCase();\n\n        if (userAgent.indexOf(\"iphone\") !== -1 ||\n            userAgent.indexOf(\"ipod\") !== -1 ||\n            userAgent.indexOf(\"ipad\") !== -1 ||\n            userAgent.indexOf(\"android\") !== -1 ||\n            userAgent.indexOf(\"mobile\") !== -1 ||\n            userAgent.indexOf(\"blackberry\") !== -1 ||\n            userAgent.indexOf(\"tablet\") !== -1 ||\n            userAgent.indexOf(\"phone\") !== -1 ||\n            userAgent.indexOf(\"touch\") !== -1) {\n            isDesktop = false;\n        }\n\n        if (userAgent.indexOf(\"msie\") !== -1 ||\n            userAgent.indexOf(\"trident\") !== -1) {\n            isDesktop = true;\n        }\n\n        return isDesktop;\n    },\n\n    /**\n     *  Copies all source object members to dest\n     *\n     * @function assign\n     * @param {Object} dest - destination object where properties and method will be copied\n     * @param {Object} source - source object from which properties and method will be copied\n     * @returns {Object} dest\n     */\n    assign : function (dest, source) {\n        dest = dest || {};\n        for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                dest[prop] = source[prop];\n            }\n        }\n        return dest;\n    },\n\n    /**\n     * Merge two objects parameters (deeper than assign)\n     *\n     * @function mergeParams\n     * @param {Object} dest     - destination object where properties and method will be merge\n     * @param {Object} source   - source object from which properties and method will be merge\n     * @param {Boolean} replace - replace destination value by source if exists or not (true by default)\n     */\n    mergeParams : function (dest, source, replace) {\n        if (typeof dest === \"undefined\" || typeof source === \"undefined\") {\n            return;\n        }\n        if (typeof replace === \"undefined\") {\n            replace = true;\n        }\n        for (var param in source) {\n            if (source.hasOwnProperty(param)) {\n                if (typeof source[param] === \"object\") {\n                    if (dest.hasOwnProperty(param)) {\n                        this.mergeParams(dest[param], source[param], replace);\n                    } else {\n                        dest[param] = source[param];\n                    }\n                } else {\n                    if (dest.hasOwnProperty(param)) {\n                        if (replace) {\n                            dest[param] = source[param];\n                        }\n                    } else {\n                        dest[param] = source[param];\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default Helper;\n","/**\n * @module SelectorID\n * @alias module:~utils/SelectorID\n * @private\n * @description\n * formalisme d'un tag ID :\n * -> NAME(_ORDER)-1460636385836\n *\n * @example\n * Ex.\n *   GProutePoints-1460636385836\n *   GProutePoint_10-1460636385836\n */\nvar SelectorID = {\n\n    /**\n     * Construction d'un identifiant statique basé sur le timestamp,\n     * et qui s'incremente de +1 à chaque appel\n     * @function generate\n     */\n    generate : (function () {\n        var timestamp = Math.floor(Date.now());\n        return function () {\n            return timestamp++;\n        };\n    })(),\n\n    /**\n     * nom du tag\n     * @function name\n     * @param {String} id - the id\n     * @returns {String} index\n     */\n    name : function (id) {\n        var name = null;\n\n        var i = id.lastIndexOf(\"-\");\n        if (i === -1) {\n            name = id;\n        } else {\n            name = id.substring(0, i);\n        }\n\n        return name;\n    },\n\n    /**\n     * numero d'identifiant du tag\n     *\n     * @function index\n     * @param {String} id - the id\n     * @returns {String} index\n     */\n    index : function (id) {\n        var index = null;\n\n        var name = this.name(id);\n        // if (name !== id) {\n        var i = name.lastIndexOf(\"_\");\n        if (i !== -1) {\n            index = name.substring(i + 1);\n        }\n        // }\n\n        return index;\n    },\n\n    /**\n     * uuid du tag\n     *\n     * @function uuid\n     * @param {String} id - the id\n     * @returns {String} uuid\n     */\n    uuid : function (id) {\n        var uuid = null;\n\n        var i = id.lastIndexOf(\"-\");\n        if (i !== -1) {\n            uuid = parseInt(id.substring(i + 1), 10);\n        }\n\n        return uuid;\n    }\n\n};\n\nexport default SelectorID;\n","import Logger from \"./LoggerByDefault\";\n\nvar logger = Logger.getLogger(\"draggable\");\n\n/**\n * @module Draggable\n * @alias module:~utils/Draggable\n * @fixme conflit entre la position et le mode draggable\n * @private\n * @description\n * ...\n *\n * @example\n * dragElement();\n */\nvar Draggable = {\n    /**\n    * A draggable HTML element with JavaScript and CSS.\n    *\n    * @function dragElement\n    * @param {HTMLElement} element - element\n    * @param {HTMLElement} header - header (optional)\n    * @param {HTMLElement} container - container (optional)\n    * @see https://gist.github.com/stephanbogner/75de4e84687ae6065fb0a4d81917543e\n    * @see https://stackoverflow.com/questions/48097791/how-to-keep-a-draggable-element-from-being-moved-outside-a-boundary\n    * @example\n    *   // CSS :\n    *       // #element { position: absolute; }\n    *   // HTML :\n    *       // <div id=\"container\">\n    *       //   <div id=\"element\">\n    *       //     <div id=\"header\"/>\n    *       //      <div/> ...\n    *       //     </div>\n    *       //   </div>\n    *       // </div>\n    *   // JS :\n    *       var element = document.getElementById(\"element\");\n    *       Draggable.dragElement(element, header, container);\n    */\n    dragElement : function (element, header, container) {\n        // Adapted from https://www.w3schools.com/howto/howto_js_draggable.asp\n        let dragStartMouseX = 0, dragStartMouseY = 0, diffX = 0, diffY = 0, positionX = 0, positionY = 0;\n        if (header) {\n            header.addEventListener(\"mousedown\", dragMouseDown, true);\n        } else {\n            element.addEventListener(\"mousedown\", dragMouseDown, true);\n        }\n        var rect;\n        var viewport = {\n            bottom : 0,\n            left : 0,\n            right : 0,\n            top : 0,\n        };\n\n        function dragMouseDown (e) {\n            e = e || window.event;\n            e.preventDefault();\n\n            dragStartMouseX = e.clientX;\n            dragStartMouseY = e.clientY;\n\n            rect = element.getBoundingClientRect();\n            const viewPortRect = container.getBoundingClientRect();\n            viewport = {\n                bottom : viewPortRect.bottom,\n                left : viewPortRect.left,\n                right : viewPortRect.right,\n                top : viewPortRect.top,\n            };\n\n            document.addEventListener(\"mouseup\", closeDragElement, true);\n            document.addEventListener(\"mousemove\", elementDrag, true);\n        }\n\n        function closeDragElement () {\n            /* stop moving when mouse button is released: */\n            positionX -= diffX;\n            positionY -= diffY;\n            document.removeEventListener(\"mouseup\", closeDragElement, true);\n            document.removeEventListener(\"mousemove\", elementDrag, true);\n        }\n\n        function elementDrag (e) {\n            e = e || window.event;\n            // e.preventDefault();\n            let currentMouseX = e.clientX;\n            let currentMouseY = e.clientY;\n\n            let oldDiffX = diffX;\n            let oldDiffY = diffY;\n\n            diffX = dragStartMouseX - currentMouseX;\n            diffY = dragStartMouseY - currentMouseY;\n\n            var newLeft = rect.left - diffX;\n            var newTop = rect.top - diffY;\n\n            if (newLeft < viewport.left\n                || newTop < viewport.top\n                || newLeft + rect.width > viewport.right\n                || newTop + rect.height > viewport.bottom\n            ) {\n                // the element will hit the boundary, do nothing...\n                diffX = oldDiffX;\n                diffY = oldDiffY;\n            } else {\n                // set the element's new position:\n                let newX = positionX - diffX;\n                let newY = positionY - diffY;\n                element.style.transform = \"translate(\" + newX + \"px,\" + newY + \"px)\";\n            }\n        }\n    }\n};\n\nexport default Draggable;\n","const __WEBPACK_NAMESPACE_OBJECT__ = ol.interaction;","// import OpenLayers\nimport Control from \"ol/control/Control\";\nimport {\n    Select as SelectInteraction,\n    Modify as ModifyInteraction,\n    Draw as DrawInteraction\n} from \"ol/interaction\";\n// import local\nimport Logger from \"../../Utils/LoggerByDefault\";\nimport Utils from \"../../Utils/Helper\";\n\nvar logger = Logger.getLogger(\"interactions\");\n\n/**\n * @description\n * Pourquoi et comment l'utiliser ?\n * Cette classe permet de gérer les interactions entre chaque extension.\n * Une extension qui active une interaction avec la carte, doit desactiver\n * les autres interactions issues d'autre extensions.\n * La désactivation d'une interaction s'accompagne d'actions telles que\n * le nettoyage des dessins, l'état du composant graphique, ...\n *\n * Ex\n * // desactive toutes les interactions avec l'opération par defaut : clean\n * Interactions.unset(map);\n * // desactive les interactions sauf celles de Drawing. On execute des\n * // operations particulieres : status, collapse et message\n * Interactions.unset(map, {\n *    current : \"Drawing\",\n *    status : false,\n *    collapse : true,\n *    messsage : [\"WARNING\", \"Ceci est un avertissement !\"]\n * });\n *\n * Dans le code de l'extension, il faut placer des informations dans l'interaction :\n * interaction.setProperties({\n *     name : \"Drawing\",\n *     source : this\n * });\n */\nvar Interactions = {\n\n    /**\n     * Liste des extensions qui utilisent le mécanisme des interactions\n     */\n    _extensions : [\n        \"Measures\",\n        \"ElevationPath\",\n        \"Drawing\"\n    ],\n\n    /**\n     * Options par defaut\n     * - current : ex. \"Drawing\"\n     *       c'est l'extension qui demande la desactivation des autres interactions.\n     *       Par defaut, toutes les interactions sont desactivées.\n     * - clean :\n     *       c'est la suppression des interactions, des dessins de la carte,\n     *       ainsi que la reinitialisation de l'état graphique.\n     *       Les extensions doivent implementer la méthode 'clean()'.\n     *       Par defaut, tous les dessins sont supprimés\n     */\n    _options : {\n        current : null,\n        clean : null\n    },\n\n    /**\n     * Permet de desactive les interactions (Draw) de la carte pour les extensions,\n     * sauf l'interaction courrante (si elle est renseignée avec l'option 'current').\n     * Il est possible d'ajouter des fonctionnalités via les options.\n     * Par defaut, l'option 'clean' est renseignée...\n     *\n     * @param {Object} map - the map\n     * @param {Object} options - options\n     */\n    unset : function (map, options) {\n        logger.trace(\"unset()\");\n\n        var opts = {};\n        Utils.mergeParams(opts, this._options);\n        Utils.mergeParams(opts, options);\n\n        var interactions = map.getInteractions().getArray();\n        for (var i = 0; i < interactions.length; i++) {\n            if (interactions[i].getActive() &&\n                (interactions[i] instanceof DrawInteraction ||\n                    interactions[i] instanceof SelectInteraction ||\n                    interactions[i] instanceof ModifyInteraction)) {\n                var prop = interactions[i].getProperties();\n                var name = prop.name;\n                if (typeof name !== \"undefined\" && this._extensions.indexOf(name) > -1) {\n                    // doit on desactiver l'interaction courrante ?\n                    if (opts.current && opts.current === name) {\n                        continue;\n                    }\n                    interactions[i].setActive(false);\n                    // instance de l'extension\n                    var source = prop.source;\n                    if (typeof source !== \"undefined\" && source instanceof Control) {\n                        // opérations sur le composant graphique\n                        for (var action in opts) {\n                            if (opts.hasOwnProperty(action)) {\n                                if (action === \"current\") {\n                                    continue;\n                                }\n                                if (typeof source[action] === \"function\") {\n                                    var args = Array.isArray(opts[action]) ? opts[action] : [opts[action]];\n                                    source[action].apply(source, args);\n                                }\n                            }\n                        }\n                    }\n                } else {\n                    interactions[i].setActive(false);\n                }\n            }\n        }\n    }\n};\n\nexport default Interactions;\n","import checkDsfr from \"../Utils/CheckDsfr\";\n\nvar ControlListDOM = {\n\n    /**\n    * Add uuid to the tag ID\n    * @param {String} id - id selector\n    * @returns {String} uid - id selector with an unique id\n    */\n    _addUID : function (id) {\n        var uid = (this._uid) ? id + \"-\" + this._uid : id;\n        return uid;\n    },\n\n    /**\n     * Main container (DOM)\n     *\n     * @returns {HTMLElement} DOM element\n     */\n    _createMainContainerElement : function () {\n        var container = document.createElement(\"div\");\n        container.id = this._addUID(\"GPcontrolList\");\n        container.className = \"GPwidget gpf-widget gpf-widget-button gpf-mobile-fullscreen\";\n        return container;\n    },\n\n    // ################################################################### //\n    // ################# Methods to display Main Panel ################### //\n    // ################################################################### //\n\n    /**\n     * Show control\n     * see event !\n     *\n     * @returns {HTMLElement} DOM element\n     */\n    _createShowControlListPictoElement : function () {\n        // contexte d'execution\n        var context = this;\n\n        var button = document.createElement(\"button\");\n        // INFO: Ajout d'une SPAN pour enlever des marges de 6px dans CHROMIUM (?!)\n        var span = document.createElement(\"span\");\n        button.appendChild(span);\n        button.id = this._addUID(\"GPshowControlListPicto\");\n        button.className = \"GPshowOpen GPshowAdvancedToolPicto GPshowControlListPicto gpf-btn gpf-btn--tertiary gpf-btn-icon gpf-btn-icon-controllist fr-btn fr-btn--tertiary\";\n        button.setAttribute(\"aria-label\", \"Tous mes outils\");\n        button.setAttribute(\"tabindex\", \"0\");\n        button.setAttribute(\"aria-pressed\", false);\n        button.setAttribute(\"type\", \"button\");\n\n        // gestionnaire d'evenement :\n        // on ouvre le menu\n        if (button.addEventListener) {\n            button.addEventListener(\"click\", function (e) {\n                var status = (e.target.ariaPressed === \"true\");\n                e.target.setAttribute(\"aria-pressed\", !status);\n                context.onShowControlListPanelClick(e);\n            });\n        } else if (button.attachEvent) {\n            button.attachEvent(\"onclick\", function (e) {\n                var status = (e.target.ariaPressed === \"true\");\n                e.target.setAttribute(\"aria-pressed\", !status);\n                context.onShowControlListPanelClick(e);\n            });\n        }\n\n        return button;\n    },\n\n\n    // ################################################################### //\n    // ################## Methods to display Inputs Panel ################ //\n    // ################################################################### //\n\n    /**\n     * Create Container Panel\n     * @returns {HTMLElement} DOM element\n     */\n    _createControlListPanelElement : function () {\n        var dialog = document.createElement(\"dialog\");\n        dialog.id = this._addUID(\"GPcontrolListPanel\");\n        dialog.className = \"GPpanel gpf-panel fr-modal\";\n\n        return dialog;\n    },\n\n    _createControlListPanelDivElement : function () {\n        var div = document.createElement(\"div\");\n        div.className = \"gpf-panel__body fr-modal__body\";\n        return div;\n    },\n\n    /**\n     * Create Header Panel\n     *\n     * @returns {HTMLElement} DOM element\n     */\n    _createControlListPanelHeaderElement : function () {\n        var self = this;\n\n        var container = document.createElement(\"div\");\n        container.className = \"GPpanelHeader gpf-panel__header fr-modal__header\";\n\n        var div = document.createElement(\"div\");\n        div.className = \"GPpanelTitle gpf-panel__title fr-modal__title fr-pt-4w\";\n        div.innerHTML = \"Mes outils\";\n        container.appendChild(div);\n\n        var divClose = document.createElement(\"button\");\n        divClose.id = this._addUID(\"GPcontrolListPanelClose\");\n        divClose.className = \"GPpanelClose GPcontrolListPanelClose gpf-btn gpf-btn-icon-close fr-btn--close fr-btn fr-btn--tertiary-no-outline fr-m-1w\";\n        divClose.title = \"Fermer le panneau\";\n\n        // Link panel close / visibility checkbox\n        if (divClose.addEventListener) {\n            divClose.addEventListener(\"click\", function () {\n                document.getElementById(self._addUID(\"GPshowControlListPicto\")).click();\n            }, false);\n        } else if (divClose.attachEvent) {\n            divClose.attachEvent(\"onclick\", function () {\n                document.getElementById(self._addUID(\"GPshowControlListPicto\")).click();\n            });\n        }\n\n        var span = document.createElement(\"span\");\n        span.className = \"GPelementHidden gpf-visible\"; // afficher en dsfr\n        span.innerText = \"Fermer\";\n\n        divClose.appendChild(span);\n\n        container.appendChild(divClose);\n\n        return container;\n    },\n\n    /**\n     * Create Content Panel\n     *\n     * @returns {HTMLElement} DOM element\n     */\n    _createControlListPanelContentElement : function () {\n        var container = document.createElement(\"div\");\n        container.className = \"gpf-panel__content fr-modal__content\";\n        return container;\n    },\n\n    /**\n     * Create Footer Panel\n     *\n     * @param {HTMLElement} controlCatalogelement - DOM element\n     * @returns {HTMLElement} DOM element\n     */\n    _createControlListPanelFooterElement : function (controlCatalogelement) {\n        var container = document.createElement(\"div\");\n        container.className = \"GPpanelFooter gpf-panel__footer fr-modal__footer\";\n        var addToolsBtn = document.createElement(\"button\");\n        addToolsBtn.classList.add(\"gpf-btn\", \"gpf-btn--tertiary\", \"fr-btn\", \"fr-btn--tertiary\");\n        addToolsBtn.innerText = \"+ Ajouter plus d'outils\";\n        addToolsBtn.addEventListener(\"click\", function () {\n            controlCatalogelement.click();\n        });\n        container.appendChild(addToolsBtn);\n        return container;\n    },\n\n    /**\n     * Create div for control\n     *\n     * @param {ol.Control} control control to add in the panel\n     * @returns {HTMLElement} DOM element\n     */\n    _createControlListPanelControl : function (control) {\n        let controlContainer;\n        try {\n            controlContainer = control.getContainer();\n        } catch (e) {\n            controlContainer = control.container;\n        }\n        var container = document.createElement(\"div\");\n        var btn = controlContainer.querySelector(\".GPshowOpen\").cloneNode();\n        btn.id = btn.id + \"-controllist\";\n        btn.classList.add(\"inside-control-list\");\n        container.appendChild(btn);\n        var divText = document.createElement(\"div\");\n        var spanTitle = document.createElement(\"span\");\n        divText.appendChild(spanTitle);\n        if (controlContainer.querySelector(\".GPshowOpen\").ariaLabel) {\n            spanTitle.innerText = controlContainer.querySelector(\".GPshowOpen\").ariaLabel;\n        } else if (controlContainer.querySelector(\".GPpanelTitle\")) {\n            spanTitle.innerText = controlContainer.querySelector(\".GPpanelTitle\").innerText;\n        } else if (controlContainer.querySelector(\"[class^='gpf-btn-header-']\")) {\n            spanTitle.innerText = controlContainer.querySelector(\"[class^='gpf-btn-header-']\").title;\n        }\n        if (control.description) {\n            var spanDescription = document.createElement(\"span\");\n            spanDescription.innerText = control.description;\n            divText.appendChild(spanDescription);\n        }\n        container.appendChild(divText);\n\n        container.addEventListener(\"click\", function () {\n            controlContainer.querySelector(\".GPshowOpen\").click();\n        });\n        return container;\n    },\n\n};\n\nexport default ControlListDOM;\n","// import CSS\nimport \"../../CSS/Controls/ControlList/GPFcontrolList.css\";\n// import OpenLayers\nimport Widget from \"../Widget\";\nimport Control from \"../Control\";\nimport Map from \"ol/Map\";\n// import local\nimport Logger from \"../../Utils/LoggerByDefault\";\nimport Utils from \"../../Utils/Helper\";\nimport SelectorID from \"../../Utils/SelectorID\";\nimport Draggable from \"../../Utils/Draggable\";\nimport Interactions from \"../Utils/Interactions\";\n// import local with ol dependencies\nimport checkDsfr from \"../Utils/CheckDsfr\";\n\n// DOM\nimport ControlListDOM from \"./ControlListDOM\";\n\nvar logger = Logger.getLogger(\"controlList\");\n/**\n * @typedef {Object} ControlListOptions\n * @property {boolean} [collapsed=true] - Définit si le widget est replié au chargement.\n * @property {boolean} [draggable=false] - Permet de déplacer le panneau du widget.\n * @property {string} [position] - Position CSS du widget sur la carte.\n * @property {string|number} [id] - Identifiant unique du widget.\n * @property {HTMLElement} [controlCatalogElement] - Élément DOM à afficher en pied de panneau (ex : bouton catalogue).\n * @property {boolean} [gutter] - Ajoute ou retire l’espace autour du panneau.\n */\n\n/**\n * @classdesc\n *\n * ControlList Control.\n *\n * @alias ol.control.ControlList\n * @module ControlList\n * \n */\nclass ControlList extends Control {\n\n    /**\n     * @constructor\n     * @param {ControlListOptions} options - ControlList control options\n     */\n    constructor (options) {\n        options = options || {};\n\n        // call ol.control.Control constructor\n        super(options);\n\n        if (!(this instanceof ControlList)) {\n            throw new TypeError(\"ERROR CLASS_CONSTRUCTOR\");\n        }\n\n        if (options.controlCatalogElement) {\n            this.controlCatalogElement = options.controlCatalogElement;\n        } else {\n            this.controlCatalogElement = null;\n        }\n\n        /**\n         * Nom de la classe (heritage)\n         * @private\n         */\n        this.CLASSNAME = \"ControlList\";\n\n        // initialisation du composant\n        this.initialize(options);\n        // // Widget main DOM container\n        this._container = this._initContainer();\n\n        // ajout du container\n        (this.element) ? this.element.appendChild(this._container) : this.element = this._container;\n\n        return this;\n    }\n\n    /**\n     * Overwrite OpenLayers setMap method\n     *\n     * @param {Map} map - Map.\n     */\n    setMap (map) {\n        if (map) {\n            // mode \"draggable\"\n            if (this.draggable) {\n                Draggable.dragElement(\n                    this._ControlListPanelContainer,\n                    this._ControlListPanelHeaderContainer,\n                    map.getTargetElement()\n                );\n            }\n\n            // mode \"collapsed\"\n            if (!this.collapsed) {\n                this._pictoControlListButton.setAttribute(\"aria-pressed\", true);\n            }\n        }\n\n        // on appelle la méthode setMap originale d'OpenLayers\n        super.setMap(map);\n\n        // position\n        if (this.options.position) {\n            this.setPosition(this.options.position);\n        }\n    }\n\n    // ################################################################### //\n    // ##################### public methods ############################## //\n    // ################################################################### //\n\n    /**\n     * Returns true if widget is collapsed (minimized), false otherwise\n     *\n     * @returns {Boolean} collapsed - true if widget is collapsed\n     */\n    getCollapsed () {\n        return this.collapsed;\n    }\n\n    /**\n     * Collapse or display widget main container\n     *\n     * @param {Boolean} collapsed - True to collapse widget, False to display it\n     */\n    setCollapsed (collapsed) {\n        if (collapsed === undefined) {\n            logger.log(\"[ERROR] ControlList:setCollapsed - missing collapsed parameter\");\n            return;\n        }\n        if ((collapsed && this.collapsed) || (!collapsed && !this.collapsed)) {\n            return;\n        }\n        if (collapsed) {\n            document.getElementById(\"GPcontrolListPanelClose-\" + this._uid).click();\n        } else {\n            this._pictoIsoButton.click();\n        }\n        this.collapsed = collapsed;\n    }\n\n    /**\n     * Get container\n     *\n     * @returns {HTMLElement} container\n     */\n    getContainer () {\n        return this._container;\n    }\n\n    /**\n     * Clean UI : reinit control\n     */\n    clean () {\n        this._clearIsoInputs();\n        // INFO\n        // le comportement est surchargé, ceci supprime la couche !?\n        // cf. _createIsoPanelFormPointElement()\n        this._originPoint.clearResults();\n        document.getElementById(\"GPlocationPoint_1-\" + this._uid).style.cssText = \"\";\n        document.getElementById(\"GPlocationOriginCoords_1-\" + this._uid).value = \"\";\n        document.getElementById(\"GPlocationOrigin_1-\" + this._uid).value = \"\";\n        document.getElementById(\"GPlocationPoint_1-\" + this._uid).style.cssText = \"\";\n        document.getElementById(\"GPlocationOriginPointer_1-\" + this._uid).checked = false;\n        document.getElementById(\"GPlocationOrigin_1-\" + this._uid).className = \"GPlocationOriginVisible gpf-visible\";\n        document.getElementById(\"GPlocationOriginCoords_1-\" + this._uid).className = \"GPlocationOriginHidden gpf-hidden\";\n        this._currentIsoResults = null;\n        this.setLayer();\n    }\n\n    // ################################################################### //\n    // ##################### init component ############################## //\n    // ################################################################### //\n\n    /**\n     * Initialize control (called by constructor)\n     *\n     * @param {Object} options - constructor options\n     * @private\n     */\n    initialize (options) {\n        // collapsed\n        if (options.collapsed === \"true\") {\n            options.collapsed = true;\n        }\n        if (options.collapsed === \"false\") {\n            options.collapsed = false;\n        }\n\n        // set default options\n        this.options = {\n            collapsed : true,\n            draggable : false,\n        };\n\n        // merge with user options\n        Utils.assign(this.options, options);\n\n        /** \n         * @type {Boolean} \n         * specify if control is collapsed (true) or not (false) */\n        this.collapsed = this.options.collapsed;\n\n        /** \n         * @type {Boolean} \n         * specify if control is draggable (true) or not (false) */\n        this.draggable = this.options.draggable;\n\n        /**\n         * @private\n         * identifiant du contrôle : \n         * utile pour suffixer les identifiants CSS \n         * (pour gérer le cas où il y en a plusieurs dans la même page) */\n        this._uid = this.options.id || SelectorID.generate();\n    }\n\n    // ################################################################### //\n    // ######################## DOM initialize ########################### //\n    // ################################################################### //\n\n    /**\n     * initialize component container (DOM)\n     * @returns {HTMLElement} DOM element\n     *\n     * @private\n     */\n    _initContainer () {\n        // creation du container principal\n        var container = this._createMainContainerElement();\n\n        var picto = this._pictoControlListButton = this._createShowControlListPictoElement();\n        container.appendChild(picto);\n\n        // panneau\n        var panel = this._ControlListPanelContainer = this._createControlListPanelElement();\n        var panelDiv = this._createControlListPanelDivElement();\n        panel.appendChild(panelDiv);\n\n        // header\n        var header = this._ControlListPanelHeaderContainer = this._createControlListPanelHeaderElement();\n        panelDiv.appendChild(header);\n\n        // content\n        var content = this._ControlListPanelContentContainer = this._createControlListPanelContentElement();\n        panelDiv.appendChild(content);\n\n        if (this.controlCatalogElement) {\n            // footer\n            var footer = this._createControlListPanelFooterElement(this.controlCatalogElement);\n            panelDiv.appendChild(footer);\n        }\n\n        container.appendChild(panel);\n        return container;\n    }\n\n    // ################################################################### //\n    // ####################### handlers events to dom #################### //\n    // ################################################################### //\n\n    /**\n     * this method is called by event 'click' on 'GPshowControlListPicto' picto\n     * (cf. this._createShowControlListPictoElement),\n     *\n     * @param { Event } e évènement associé au clic\n     * @private\n     */\n    onShowControlListPanelClick (e) {\n        if (e.target.ariaPressed === \"true\") {\n            this.onPanelOpen();\n        }\n        var map = this.getMap();\n        // on supprime toutes les interactions\n        Interactions.unset(map);\n        var opened = this._pictoControlListButton.ariaPressed;\n        this.collapsed = !(opened === \"true\");\n        // on génère nous même l'evenement OpenLayers de changement de propriété\n        // (utiliser ol.control.ControlList.on(\"change:collapsed\", function ) pour s'abonner à cet évènement)\n        this.dispatchEvent(\"change:collapsed\");\n        // on recalcule la position\n        if (this.options.position && !this.collapsed) {\n            this.updatePosition(this.options.position);\n        }\n        if (!this.collapsed) {\n            const controls = this.getMap().getControls().getArray();\n            controls.forEach(control => {\n                if (control.listable) {\n                    let element = this._createControlListPanelControl(control);\n                    this._ControlListPanelContentContainer.appendChild(element);\n                }\n            });\n        } else {\n            this._ControlListPanelContentContainer.innerHTML = \"\";\n        }\n    }\n\n};\n\n// on récupère les méthodes de la classe commune ControlList\nObject.assign(ControlList.prototype, ControlListDOM);\nObject.assign(ControlList.prototype, Widget);\n\nexport default ControlList;\n\n// Expose ControlList as ol.control.ControlList (for a build bundle)\nif (window.ol && window.ol.control) {\n    window.ol.control.ControlList = ControlList;\n}\n"],"names":["noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","_loggersByName","defaultLogger","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","log","trace","realMethod","undefined","replaceLoggingMethods","level","this","getLevel","i","length","methodFactory","name","debug","levels","SILENT","enableLoggingWhenConsoleArrives","defaultMethodFactory","_level","_loggerName","Logger","factory","inheritedLevel","defaultLevel","userLevel","self","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","cookieName","location","indexOf","exec","slice","clearPersistedLevel","removeItem","normalizeLevel","input","TypeError","setLevel","persist","setDefaultLevel","resetLevel","enableAll","TRACE","disableAll","rebuild","childName","initialLevel","getLogger","logger","_log","noConflict","getLoggers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","hasOwnProperty","exceptions","position","openedPanelID","openedPanel","exceptionPanel","concat","controlPanels","includes","bottomLeft","getElementById","topLeft","_toConsumableArray","children","bottomRight","topRight","filter","p","panelID","id","match","isException","getElementsByTagName","getAttribute","getSameSideOpenedPanel","click","onPanelOpen","PanelManager","options","element","ol","control","Control","getComputedStyle","documentElement","getPropertyValue","_Control","ControlExtended","_this","_classCallCheck","_callSuper","target","render","listable","description","_inherits","_createClass","value","pos","getMap","PositionFactory","set","update","ANCHORS","_PositionFactory_brand","WeakSet","caller","_classPrivateMethodInitSpec","container","_assertClassBrand","_createContainer","toLowerCase","_setAnchor","prepend","appendChild","_existContainer","getOverlayContainerStopEvent","div","createElement","className","sizeW","offsetWidth","sizeH","height","offsetHeight","index","clear","style","top","bottom","left","right","panels","Array","from","getElementsByClassName","offset","forEach","panel","nodeName","checkDsfr","Map","LoggerByDefault","process","VERBOSE","env","Log","logname","loggers","Gp","detectSupport","isDesktop","assign","dest","source","mergeParams","replace","param","_typeof","timestamp","generate","Math","floor","Date","now","lastIndexOf","substring","uuid","parseInt","dragElement","header","rect","dragStartMouseX","dragStartMouseY","diffX","diffY","positionX","positionY","addEventListener","dragMouseDown","viewport","event","preventDefault","clientX","clientY","getBoundingClientRect","viewPortRect","closeDragElement","elementDrag","removeEventListener","currentMouseX","currentMouseY","oldDiffX","oldDiffY","newLeft","newTop","width","newX","newY","transform","interaction","_extensions","_options","current","clean","unset","map","opts","Utils","interactions","getInteractions","getArray","getActive","DrawInteraction","SelectInteraction","ModifyInteraction","getProperties","setActive","action","args","isArray","_addUID","_uid","_createMainContainerElement","_createShowControlListPictoElement","context","button","span","setAttribute","status","ariaPressed","onShowControlListPanelClick","attachEvent","_createControlListPanelElement","dialog","_createControlListPanelDivElement","_createControlListPanelHeaderElement","innerHTML","divClose","title","innerText","_createControlListPanelContentElement","_createControlListPanelFooterElement","controlCatalogelement","addToolsBtn","classList","add","_createControlListPanelControl","controlContainer","getContainer","btn","querySelector","cloneNode","divText","spanTitle","ariaLabel","spanDescription","ControlList","controlCatalogElement","CLASSNAME","initialize","_container","_initContainer","_possibleConstructorReturn","draggable","Draggable","_ControlListPanelContainer","_ControlListPanelHeaderContainer","getTargetElement","collapsed","_pictoControlListButton","setPosition","_pictoIsoButton","_clearIsoInputs","_originPoint","clearResults","cssText","checked","_currentIsoResults","setLayer","SelectorID","picto","panelDiv","content","_ControlListPanelContentContainer","footer","_this2","Interactions","opened","dispatchEvent","updatePosition","getControls","ControlListDOM","Widget"],"sourceRoot":""}