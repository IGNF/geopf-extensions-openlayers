{"version":3,"file":"GpfExtOlCRS.js","mappings":"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","sources":["webpack://geopf-extensions-openlayers/./node_modules/loglevel/lib/loglevel.js","webpack://geopf-extensions-openlayers/webpack/bootstrap","webpack://geopf-extensions-openlayers/webpack/runtime/compat get default export","webpack://geopf-extensions-openlayers/webpack/runtime/define property getters","webpack://geopf-extensions-openlayers/webpack/runtime/hasOwnProperty shorthand","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/constants/values.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/constants/units.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/match.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projString.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/PROJJSONBuilderBase.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/PROJJSONBuilder2015.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/PROJJSONBuilder2019.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/buildPROJJSON.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/parser.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/process.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/util.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/transformPROJJSON.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/index.js","webpack://geopf-extensions-openlayers/./node_modules/wkt-parser/detectWKTVersion.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/defs.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/global.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/parseCode.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/extend.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/msfnz.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/sign.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/adjust_lon.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/tsfnz.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/phi2z.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/longlat.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/merc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/constants/Datum.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/datum.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/nadgrid.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/Proj.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/deriveConstants.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/datumUtils.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/datum_transform.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/adjust_axis.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/toPoint.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/checkSanity.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/transform.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/core.js","webpack://geopf-extensions-openlayers/./node_modules/mgrs/mgrs.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/Point.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/pj_enfn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/tmerc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/sinh.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/hypot.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/asinhy.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/log1py.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/gatg.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/cosh.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/etmerc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/clens.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/utm.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/adjust_zone.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/srat.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/gauss.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/sterea.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/stere.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/somerc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/omerc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/lcc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/krovak.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/mlfn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/e0fn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/e1fn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/e2fn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/e3fn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/gN.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/adjust_lat.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/imlfn.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/cass.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/qsfnz.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/laea.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/asinz.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/aea.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/gnom.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/cea.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/common/iqsfnz.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/eqc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/poly.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/nzmg.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/mill.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/sinu.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/moll.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/eqdc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/vandg.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/aeqd.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/ortho.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/qsc.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/robin.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/geocent.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/tpers.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/geos.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/eqearth.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/projections/bonne.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/lib/index.js","webpack://geopf-extensions-openlayers/./node_modules/proj4/projs.js","webpack://geopf-extensions-openlayers/external assign \"ol.proj\"","webpack://geopf-extensions-openlayers/external assign \"ol.proj.transforms\"","webpack://geopf-extensions-openlayers/external assign \"ol.proj.Projection\"","webpack://geopf-extensions-openlayers/./src/packages/Utils/LoggerByDefault.js","webpack://geopf-extensions-openlayers/./src/packages/CRS/Proj4.js","webpack://geopf-extensions-openlayers/external assign \"ol.extent\"","webpack://geopf-extensions-openlayers/./src/packages/Utils/Register.js","webpack://geopf-extensions-openlayers/./src/packages/CRS/CRS.js","webpack://geopf-extensions-openlayers/./src/packages/CRS/AutoLoadCRS.js"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0;  // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314;  // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI/2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI/4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var exports = {};\nexport {exports as default};\n\nexports.greenwich = 0.0; //\"0dE\",\nexports.lisbon = -9.131906111111; //\"9d07'54.862\\\"W\",\nexports.paris = 2.337229166667; //\"2d20'14.025\\\"E\",\nexports.bogota = -74.080916666667; //\"74d04'51.3\\\"W\",\nexports.madrid = -3.687938888889; //\"3d41'16.58\\\"W\",\nexports.rome = 12.452333333333; //\"12d27'8.4\\\"E\",\nexports.bern = 7.439583333333; //\"7d26'22.5\\\"E\",\nexports.jakarta = 106.807719444444; //\"106d48'27.79\\\"E\",\nexports.ferro = -17.666666666667; //\"17d40'W\",\nexports.brussels = 4.367975; //\"4d22'4.71\\\"E\",\nexports.stockholm = 18.058277777778; //\"18d3'29.8\\\"E\",\nexports.athens = 23.7163375; //\"23d42'58.815\\\"E\",\nexports.oslo = 10.722916666667; //\"10d43'22.5\\\"E\"\n","export default {\n  'mm': {to_meter: 0.001},\n  'cm': {to_meter: 0.01},\n  'ft': {to_meter: 0.3048},\n  'us-ft': {to_meter: 1200 / 3937},\n  'fath': {to_meter: 1.8288},\n  'kmi': {to_meter: 1852},\n  'us-ch': {to_meter: 20.1168402336805},\n  'us-mi': {to_meter: 1609.34721869444},\n  'km': {to_meter: 1000},\n  'ind-ft': {to_meter: 0.30479841},\n  'ind-yd': {to_meter: 0.91439523},\n  'mi': {to_meter: 1609.344},\n  'yd': {to_meter: 0.9144},\n  'ch': {to_meter: 20.1168},\n  'link': {to_meter: 0.201168},\n  'dm': {to_meter: 0.01},\n  'in': {to_meter: 0.0254},\n  'ind-ch': {to_meter: 20.11669506},\n  'us-in': {to_meter: 0.025400050800101},\n  'us-yd': {to_meter: 0.914401828803658}\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import {D2R} from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\nexport default function(defData) {\n  var self = {};\n  var paramObj = defData.split('+').map(function(v) {\n    return v.trim();\n  }).filter(function(a) {\n    return a;\n  }).reduce(function(p, a) {\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function(v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function(v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function(v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function(v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function(v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function(v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function(v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function(v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function(v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function(v) {\n      self.rectified_grid_angle = parseFloat(v);\n    },\n    lonc: function(v) {\n      self.longc = v * D2R;\n    },\n    x_0: function(v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function(v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function(v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function(v) {\n      self.a = parseFloat(v);\n    },\n    b: function(v) {\n      self.b = parseFloat(v);\n    },\n    r: function(v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function() {\n      self.R_A = true;\n    },\n    zone: function(v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function() {\n      self.utmSouth = true;\n    },\n    towgs84: function(v) {\n      self.datum_params = v.split(\",\").map(function(a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function(v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function(v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function(v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function(v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function(v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      }\n      else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function(v) {\n      var legalAxis = \"ewnsud\";\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function() {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      }\n      else {\n        self[paramOutname] = paramVal;\n      }\n    }\n    else {\n      self[paramName] = paramVal;\n    }\n  }\n  if(typeof self.datumCode === 'string' && self.datumCode !== \"WGS84\"){\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","class PROJJSONBuilderBase {\n  static getId(node) {\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === \"ID\");\n    if (idNode && idNode.length >= 3) {\n      return {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      };\n    }\n    return null;\n  }\n\n  static convertUnit(node, type = \"unit\") {\n    if (!node || node.length < 3) {\n      return { type, name: \"unknown\", conversion_factor: null };\n    }\n\n    const name = node[1];\n    const conversionFactor = parseFloat(node[2]) || null;\n\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === \"ID\");\n    const id = idNode\n      ? {\n          authority: idNode[1],\n          code: parseInt(idNode[2], 10),\n        }\n      : null;\n\n    return {\n      type,\n      name,\n      conversion_factor: conversionFactor,\n      id,\n    };\n  }\n\n  static convertAxis(node) {\n    const name = node[1] || \"Unknown\";\n\n    // Determine the direction\n    let direction;\n    const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n    if (abbreviationMatch) {\n      // Use the abbreviation to determine the direction\n      const abbreviation = abbreviationMatch[1].toUpperCase();\n      if (abbreviation === 'E') direction = 'east';\n      else if (abbreviation === 'N') direction = 'north';\n      else if (abbreviation === 'U') direction = 'up';\n      else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n    } else {\n      // Use the explicit direction provided in the AXIS node\n      direction = node[2]?.toLowerCase() || \"unknown\";\n    }\n\n    const orderNode = node.find((child) => Array.isArray(child) && child[0] === \"ORDER\");\n    const order = orderNode ? parseInt(orderNode[1], 10) : null;\n\n    const unitNode = node.find(\n      (child) =>\n        Array.isArray(child) &&\n        (child[0] === \"LENGTHUNIT\" || child[0] === \"ANGLEUNIT\" || child[0] === \"SCALEUNIT\")\n    );\n    const unit = this.convertUnit(unitNode);\n\n    return {\n      name,\n      direction, // Use the valid PROJJSON direction value\n      unit,\n      order,\n    };\n  }\n\n  static extractAxes(node) {\n    return node\n      .filter((child) => Array.isArray(child) && child[0] === \"AXIS\")\n      .map((axis) => this.convertAxis(axis))\n      .sort((a, b) => (a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n  }\n\n  static convert(node, result = {}) {\n\n    switch (node[0]) {\n      case \"PROJCRS\":\n        result.type = \"ProjectedCRS\";\n        result.name = node[1];\n        result.base_crs = node.find((child) => Array.isArray(child) && child[0] === \"BASEGEOGCRS\")\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === \"BASEGEOGCRS\"))\n          : null;\n        result.conversion = node.find((child) => Array.isArray(child) && child[0] === \"CONVERSION\")\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === \"CONVERSION\"))\n          : null;\n\n        const csNode = node.find((child) => Array.isArray(child) && child[0] === \"CS\");\n        if (csNode) {\n          result.coordinate_system = {\n            type: csNode[1],\n            axis: this.extractAxes(node),\n          };\n        }\n\n        const lengthUnitNode = node.find((child) => Array.isArray(child) && child[0] === \"LENGTHUNIT\");\n        if (lengthUnitNode) {\n          const unit = this.convertUnit(lengthUnitNode);\n          result.coordinate_system.unit = unit; // Add unit to coordinate_system\n        }\n\n        result.id = this.getId(node);\n        break;\n\n      case \"BASEGEOGCRS\":\n      case \"GEOGCRS\":\n        result.type = \"GeographicCRS\";\n        result.name = node[1];\n      \n        // Handle DATUM or ENSEMBLE\n        const datumOrEnsembleNode = node.find(\n          (child) => Array.isArray(child) && (child[0] === \"DATUM\" || child[0] === \"ENSEMBLE\")\n        );\n        if (datumOrEnsembleNode) {\n          const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n          if (datumOrEnsembleNode[0] === \"ENSEMBLE\") {\n            result.datum_ensemble = datumOrEnsemble;\n          } else {\n            result.datum = datumOrEnsemble;\n          }\n          const primem = node.find((child) => Array.isArray(child) && child[0] === \"PRIMEM\");\n          if (primem && primem[1] !== 'Greenwich') {\n            datumOrEnsemble.prime_meridian = {\n              name: primem[1],\n              longitude: parseFloat(primem[2]),\n            }\n          }\n        }\n      \n        result.coordinate_system = {\n          type: \"ellipsoidal\",\n          axis: this.extractAxes(node),\n        };\n      \n        result.id = this.getId(node);\n        break;\n\n      case \"DATUM\":\n        result.type = \"GeodeticReferenceFrame\";\n        result.name = node[1];\n        result.ellipsoid = node.find((child) => Array.isArray(child) && child[0] === \"ELLIPSOID\")\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === \"ELLIPSOID\"))\n          : null;\n        break;\n      \n      case \"ENSEMBLE\":\n        result.type = \"DatumEnsemble\";\n        result.name = node[1];\n      \n        // Extract ensemble members\n        result.members = node\n          .filter((child) => Array.isArray(child) && child[0] === \"MEMBER\")\n          .map((member) => ({\n            type: \"DatumEnsembleMember\",\n            name: member[1],\n            id: this.getId(member), // Extract ID as { authority, code }\n          }));\n      \n        // Extract accuracy\n        const accuracyNode = node.find((child) => Array.isArray(child) && child[0] === \"ENSEMBLEACCURACY\");\n        if (accuracyNode) {\n          result.accuracy = parseFloat(accuracyNode[1]);\n        }\n      \n        // Extract ellipsoid\n        const ellipsoidNode = node.find((child) => Array.isArray(child) && child[0] === \"ELLIPSOID\");\n        if (ellipsoidNode) {\n          result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n        }\n      \n        // Extract identifier for the ensemble\n        result.id = this.getId(node);\n        break;\n\n      case \"ELLIPSOID\":\n        result.type = \"Ellipsoid\";\n        result.name = node[1];\n        result.semi_major_axis = parseFloat(node[2]);\n        result.inverse_flattening = parseFloat(node[3]);\n        const units = node.find((child) => Array.isArray(child) && child[0] === \"LENGTHUNIT\")\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === \"LENGTHUNIT\"), result)\n          : null;\n        break;\n\n      case \"CONVERSION\":\n        result.type = \"Conversion\";\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === \"METHOD\")\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === \"METHOD\"))\n          : null;\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && child[0] === \"PARAMETER\")\n          .map((param) => this.convert(param));\n        break;\n\n      case \"METHOD\":\n        result.type = \"Method\";\n        result.name = node[1];\n        result.id = this.getId(node);\n        break;\n\n      case \"PARAMETER\":\n        result.type = \"Parameter\";\n        result.name = node[1];\n        result.value = parseFloat(node[2]);\n        result.unit = this.convertUnit(\n          node.find(\n            (child) =>\n              Array.isArray(child) &&\n              (child[0] === \"LENGTHUNIT\" || child[0] === \"ANGLEUNIT\" || child[0] === \"SCALEUNIT\")\n          )\n        );\n        result.id = this.getId(node);\n        break;\n\n      case \"BOUNDCRS\":\n        result.type = \"BoundCRS\";\n\n        // Process SOURCECRS\n        const sourceCrsNode = node.find((child) => Array.isArray(child) && child[0] === \"SOURCECRS\");\n        if (sourceCrsNode) {\n          const sourceCrsContent = sourceCrsNode.find((child) => Array.isArray(child));\n          result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n        }\n\n        // Process TARGETCRS\n        const targetCrsNode = node.find((child) => Array.isArray(child) && child[0] === \"TARGETCRS\");\n        if (targetCrsNode) {\n          const targetCrsContent = targetCrsNode.find((child) => Array.isArray(child));\n          result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n        }\n\n        // Process ABRIDGEDTRANSFORMATION\n        const transformationNode = node.find((child) => Array.isArray(child) && child[0] === \"ABRIDGEDTRANSFORMATION\");\n        if (transformationNode) {\n          result.transformation = this.convert(transformationNode);\n        } else {\n          result.transformation = null;\n        }\n        break;\n\n      case \"ABRIDGEDTRANSFORMATION\":\n        result.type = \"Transformation\";\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === \"METHOD\")\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === \"METHOD\"))\n          : null;\n\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && (child[0] === \"PARAMETER\" || child[0] === \"PARAMETERFILE\"))\n          .map((param) => {\n            if (param[0] === \"PARAMETER\") {\n              return this.convert(param);\n            } else if (param[0] === \"PARAMETERFILE\") {\n              return {\n                name: param[1],\n                value: param[2],\n                id: {\n                  \"authority\": \"EPSG\",\n                  \"code\": 8656\n                }\n              };\n            }\n          });\n\n        // Adjust the Scale difference parameter if present\n        if (result.parameters.length === 7) {\n          const scaleDifference = result.parameters[6];\n          if (scaleDifference.name === \"Scale difference\") {\n            scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n          }\n        }\n\n        result.id = this.getId(node);\n        break;\n      \n      case \"AXIS\":\n        if (!result.coordinate_system) {\n          result.coordinate_system = { type: \"unspecified\", axis: [] };\n        }\n        result.coordinate_system.axis.push(this.convertAxis(node));\n        break;\n      \n      case \"LENGTHUNIT\":\n        const unit = this.convertUnit(node, 'LinearUnit');\n        if (result.coordinate_system && result.coordinate_system.axis) {\n          result.coordinate_system.axis.forEach((axis) => {\n            if (!axis.unit) {\n              axis.unit = unit;\n            }\n          });\n        }\n        if (unit.conversion_factor && unit.conversion_factor !== 1) {\n          if (result.semi_major_axis) {\n            result.semi_major_axis = {\n              value: result.semi_major_axis,\n              unit,\n            }\n          }\n        }\n        break;\n\n      default:\n        result.keyword = node[0];\n        break;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilderBase;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2015 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Skip `CS` and `USAGE` nodes for WKT2-2015\n    if (result.coordinate_system?.subtype === \"Cartesian\") {\n      delete result.coordinate_system;\n    }\n    if (result.usage) {\n      delete result.usage;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2015;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2019 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Handle `CS` node for WKT2-2019\n    const csNode = node.find((child) => Array.isArray(child) && child[0] === \"CS\");\n    if (csNode) {\n      result.coordinate_system = {\n        subtype: csNode[1],\n        axis: this.extractAxes(node),\n      };\n    }\n\n    // Handle `USAGE` node for WKT2-2019\n    const usageNode = node.find((child) => Array.isArray(child) && child[0] === \"USAGE\");\n    if (usageNode) {\n      result.usage = {\n        scope: usageNode.find((child) => Array.isArray(child) && child[0] === \"SCOPE\")?.[1],\n        area: usageNode.find((child) => Array.isArray(child) && child[0] === \"AREA\")?.[1],\n        bbox: usageNode.find((child) => Array.isArray(child) && child[0] === \"BBOX\")?.slice(1),\n      };\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2019;","import PROJJSONBuilder2015 from './PROJJSONBuilder2015.js';\nimport PROJJSONBuilder2019 from './PROJJSONBuilder2019.js';\n\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */\nfunction detectWKT2Version(root) {\n  // Check for WKT2-2019-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === \"USAGE\")) {\n    return \"2019\"; // `USAGE` is specific to WKT2-2019\n  }\n\n  // Check for WKT2-2015-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === \"CS\")) {\n    return \"2015\"; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n  }\n\n  if (root[0] === \"BOUNDCRS\" || root[0] === \"PROJCRS\" || root[0] === \"GEOGCRS\") {\n    return \"2015\"; // These are valid in both, but default to 2015\n  }\n\n  // Default to WKT2-2015 if no specific indicators are found\n  return \"2015\";\n}\n\n/**\n * Builds a PROJJSON object from a WKT array structure.\n * @param {Array} root The root WKT array node.\n * @returns {Object} The PROJJSON object.\n */\nexport function buildPROJJSON(root) {\n  const version = detectWKT2Version(root);\n  const builder = version === \"2019\" ? PROJJSONBuilder2019 : PROJJSONBuilder2015;\n  return builder.convert(root);\n}\n","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\n\nexport function d2r(input) {\n  return input * D2R;\n}\n\nexport function applyProjectionDefaults(wkt) {\n  // Normalize projName for WKT2 compatibility\n  const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n\n  if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n    delete wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n    delete wkt.lat1;\n  }\n}","import { applyProjectionDefaults } from \"./util.js\";\n\n// Helper function to process units and to_meter\nfunction processUnit(unit) {\n  let result = { units: null, to_meter: undefined };\n\n  if (typeof unit === 'string') {\n    result.units = unit.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    if (result.units === 'meter') {\n      result.to_meter = 1; // Only set to_meter if units are 'meter'\n    }\n  } else if (unit?.name) {\n    result.units = unit.name.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    result.to_meter = unit.conversion_factor;\n  }\n\n  return result;\n}\n\nfunction toValue(valueOrObject) {\n  if (typeof valueOrObject === 'object') {\n    return valueOrObject.value * valueOrObject.unit.conversion_factor;\n  }\n  return valueOrObject;\n}\n\nfunction calculateEllipsoid(value, result) {\n  if (value.ellipsoid.radius) {\n    result.a = value.ellipsoid.radius;\n    result.rf = 0;\n  } else {\n    result.a = toValue(value.ellipsoid.semi_major_axis);\n    if (value.ellipsoid.inverse_flattening !== undefined) {\n      result.rf = value.ellipsoid.inverse_flattening;\n    } else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) {\n      result.rf = result.a / (result.a - toValue(value.ellipsoid.semi_minor_axis));\n    }\n  }\n}\n\nexport function transformPROJJSON(projjson, result = {}) {\n  if (!projjson || typeof projjson !== 'object') {\n    return projjson; // Return primitive values as-is\n  }\n\n  if (projjson.type === 'BoundCRS') {\n    transformPROJJSON(projjson.source_crs, result);\n\n    if (projjson.transformation) {\n      if (projjson.transformation.method?.name === 'NTv2') {\n        // Set nadgrids to the filename from the parameterfile\n        result.nadgrids = projjson.transformation.parameters[0].value;\n      } else {\n        // Populate datum_params if no parameterfile is found\n        result.datum_params = projjson.transformation.parameters.map((param) => param.value);\n      }\n    }\n    return result; // Return early for BoundCRS\n  }\n\n  // Handle specific keys in PROJJSON\n  Object.keys(projjson).forEach((key) => {\n    const value = projjson[key];\n    if (value === null) {\n      return;\n    }\n\n    switch (key) {\n      case 'name':\n        if (result.srsCode) {\n          break;\n        }\n        result.name = value;\n        result.srsCode = value; // Map `name` to `srsCode`\n        break;\n\n      case 'type':\n        if (value === 'GeographicCRS') {\n          result.projName = 'longlat';\n        } else if (value === 'ProjectedCRS') {\n          result.projName = projjson.conversion?.method?.name; // Retain original capitalization\n        }\n        break;\n\n      case 'datum':\n      case 'datum_ensemble': // Handle both datum and ensemble\n        if (value.ellipsoid) {\n          // Extract ellipsoid properties\n          result.ellps = value.ellipsoid.name;\n          calculateEllipsoid(value, result);\n        }\n        if (value.prime_meridian) {\n          result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n        }\n        break;\n\n      case 'ellipsoid':\n        result.ellps = value.name;\n        calculateEllipsoid(value, result);\n        break;\n\n      case 'prime_meridian':\n        result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n        break;\n\n      case 'coordinate_system':\n        if (value.axis) {\n          result.axis = value.axis\n            .map((axis) => {\n              const direction = axis.direction;\n              if (direction === 'east') return 'e';\n              if (direction === 'north') return 'n';\n              if (direction === 'west') return 'w';\n              if (direction === 'south') return 's';\n              throw new Error(`Unknown axis direction: ${direction}`);\n            })\n            .join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n\n          if (value.unit) {\n            const { units, to_meter } = processUnit(value.unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          } else if (value.axis[0]?.unit) {\n            const { units, to_meter } = processUnit(value.axis[0].unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          }\n        }\n        break;\n        \n      case 'id':\n        if (value.authority && value.code) {\n          result.title = value.authority + ':' + value.code;\n        }\n        break;\n\n      case 'conversion':\n        if (value.method && value.method.name) {\n          result.projName = value.method.name; // Retain original capitalization\n        }\n        if (value.parameters) {\n          value.parameters.forEach((param) => {\n            const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n            const paramValue = param.value;\n            if (param.unit && param.unit.conversion_factor) {\n              result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n            } else if (param.unit === 'degree') {\n              result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n            } else {\n              result[paramName] = paramValue;\n            }\n          });\n        }\n        break;\n\n      case 'unit':\n        if (value.name) {\n          result.units = value.name.toLowerCase();\n          if (result.units === 'metre') {\n            result.units = 'meter';\n          }\n        }\n        if (value.conversion_factor) {\n          result.to_meter = value.conversion_factor;\n        }\n        break;\n\n      case 'base_crs':\n        transformPROJJSON(value, result); // Pass `result` directly\n        result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n        break;\n\n      default:\n        // Ignore irrelevant or unneeded properties\n        break;\n    }\n  });\n\n  // Additional calculated properties\n  if (result.latitude_of_false_origin !== undefined) {\n    result.lat0 = result.latitude_of_false_origin; // Already in radians\n  }\n  if (result.longitude_of_false_origin !== undefined) {\n    result.long0 = result.longitude_of_false_origin;\n  }\n  if (result.latitude_of_standard_parallel !== undefined) {\n    result.lat0 = result.latitude_of_standard_parallel;\n    result.lat1 = result.latitude_of_standard_parallel;\n  }\n  if (result.latitude_of_1st_standard_parallel !== undefined) {\n    result.lat1 = result.latitude_of_1st_standard_parallel;\n  }\n  if (result.latitude_of_2nd_standard_parallel !== undefined) {\n    result.lat2 = result.latitude_of_2nd_standard_parallel; \n  }\n  if (result.latitude_of_projection_centre !== undefined) {\n    result.lat0 = result.latitude_of_projection_centre;\n  }\n  if (result.longitude_of_projection_centre !== undefined) {\n    result.longc = result.longitude_of_projection_centre;\n  }\n  if (result.easting_at_false_origin !== undefined) {\n    result.x0 = result.easting_at_false_origin;\n  }\n  if (result.northing_at_false_origin !== undefined) {\n    result.y0 = result.northing_at_false_origin;\n  }\n  if (result.latitude_of_natural_origin !== undefined) {\n    result.lat0 = result.latitude_of_natural_origin;\n  }\n  if (result.longitude_of_natural_origin !== undefined) {\n    result.long0 = result.longitude_of_natural_origin;\n  }\n  if (result.longitude_of_origin !== undefined) {\n    result.long0 = result.longitude_of_origin;\n  }\n  if (result.false_easting !== undefined) {\n    result.x0 = result.false_easting;\n  }\n  if (result.easting_at_projection_centre) {\n    result.x0 = result.easting_at_projection_centre;\n  }\n  if (result.false_northing !== undefined) {\n    result.y0 = result.false_northing;\n  }\n  if (result.northing_at_projection_centre) {\n    result.y0 = result.northing_at_projection_centre;\n  }\n  if (result.standard_parallel_1 !== undefined) {\n    result.lat1 = result.standard_parallel_1;\n  }\n  if (result.standard_parallel_2 !== undefined) {\n    result.lat2 = result.standard_parallel_2;\n  }\n  if (result.scale_factor_at_natural_origin !== undefined) {\n    result.k0 = result.scale_factor_at_natural_origin;\n  }\n  if (result.scale_factor_at_projection_centre !== undefined) {\n    result.k0 = result.scale_factor_at_projection_centre;\n  }\n  if (result.scale_factor_on_pseudo_standard_parallel !== undefined) {  \n    result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n  }\n  if (result.azimuth !== undefined) {\n    result.alpha = result.azimuth;\n  }\n  if (result.azimuth_at_projection_centre !== undefined) {\n    result.alpha = result.azimuth_at_projection_centre;\n  }\n  if (result.angle_from_rectified_to_skew_grid) {\n    result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n  }\n\n  // Apply projection defaults\n  applyProjectionDefaults(result);\n\n  return result;\n}","import { buildPROJJSON } from './buildPROJJSON.js';\nimport { detectWKTVersion } from './detectWKTVersion.js';\nimport parser from './parser.js';\nimport {sExpr} from './process.js';\nimport { transformPROJJSON } from './transformPROJJSON.js';\nimport { applyProjectionDefaults, d2r } from './util.js';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n  if (wkt.rectified_grid_angle) {\n    wkt.rectified_grid_angle = d2r(wkt.rectified_grid_angle);\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  applyProjectionDefaults(wkt);\n}\nexport default function(wkt) {\n  if (typeof wkt === 'object') {\n    return transformPROJJSON(wkt);\n  }\n  const version = detectWKTVersion(wkt);\n  var lisp = parser(wkt);\n  if (version === 'WKT2') {\n    const projjson = buildPROJJSON(lisp);\n    return transformPROJJSON(projjson);\n  }\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes(\"PROJCRS\") ||\n    normalizedWKT.includes(\"GEOGCRS\") ||\n    normalizedWKT.includes(\"BOUNDCRS\") ||\n    normalizedWKT.includes(\"VERTCRS\") ||\n    normalizedWKT.includes(\"LENGTHUNIT\") ||\n    normalizedWKT.includes(\"ANGLEUNIT\") ||\n    normalizedWKT.includes(\"SCALEUNIT\")\n  ) {\n    return \"WKT2\";\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes(\"PROJCS\") ||\n    normalizedWKT.includes(\"GEOGCS\") ||\n    normalizedWKT.includes(\"LOCAL_CS\") ||\n    normalizedWKT.includes(\"VERT_CS\") ||\n    normalizedWKT.includes(\"UNIT\")\n  ) {\n    return \"WKT1\";\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return \"WKT1\";\n}","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\nfunction defs(name) {\n  /*global console*/\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[name] = parseProj(arguments[1]);\n      }\n      else {\n        defs[name] = wkt(arguments[1]);\n      }\n    } else {\n      defs[name] = def;\n    }\n  }\n  else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function(v) {\n        if (Array.isArray(v)) {\n          defs.apply(that, v);\n        }\n        else {\n          defs(v);\n        }\n      });\n    }\n    else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    }\n    else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    }\n    else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    }\n    else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    }\n    else {\n      console.log(name);\n    }\n    return;\n  }\n\n\n}\nglobals(defs);\nexport default defs;\n","export default function(defs) {\n  defs('EPSG:4326', \"+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees\");\n  defs('EPSG:4269', \"+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees\");\n  defs('EPSG:3857', \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs\");\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), \"+proj=utm +zone=\" + i + \" +datum=WGS84 +units=m\");\n    defs('EPSG:' + (32700 + i), \"+proj=utm +zone=\" + i + \" +south +datum=WGS84 +units=m\");\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code){\n  return typeof code === 'string';\n}\nfunction testDef(code){\n  return code in defs;\n}\nvar codeWords = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS','GEOCCS','PROJCS','LOCAL_CS', 'GEODCRS', 'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\nfunction testWKT(code){\n  return codeWords.some(function (word) {\n    return code.indexOf(word) > -1;\n  });\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code){\n  return code[0] === '+';\n}\nfunction parse(code){\n  if (testObj(code)) {\n    //check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  }else{\n    return code;\n  }\n}\n\nexport default parse;\n","export default function(destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function(eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}","export default function(x) {\n  return x<0 ? -1 : 1;\n}","\nimport {TWO_PI, SPI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  //console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  //no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport {identity as forward};\nexport {identity as inverse};\nexport var names = [\"longlat\", \"identity\"];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from \"./projections/merc\";\nimport longlat from \"./projections/longlat\";\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\nfunction add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function(n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport {add};\n\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport {FORTPI, R2D, EPSLN, HALF_PI} from '../constants/values';\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if(!('x0' in this)){\n    this.x0 = 0;\n  }\n  if(!('y0' in this)){\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    }\n    else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  }\n  else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      }\n      else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  --------------------------------------------------*/\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  }\n  else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    }\n    else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  --------------------------------------------------*/\nexport function inverse(p) {\n\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  }\n  else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mercator\", \"Popular Visualisation Pseudo Mercator\", \"Mercator_1SP\", \"Mercator_Auxiliary_Sphere\", \"merc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var exports = {};\nexport {exports as default};\nexports.MERIT = {\n  a: 6378137.0,\n  rf: 298.257,\n  ellipseName: \"MERIT 1983\"\n};\n\nexports.SGS85 = {\n  a: 6378136.0,\n  rf: 298.257,\n  ellipseName: \"Soviet Geodetic System 85\"\n};\n\nexports.GRS80 = {\n  a: 6378137.0,\n  rf: 298.257222101,\n  ellipseName: \"GRS 1980(IUGG, 1980)\"\n};\n\nexports.IAU76 = {\n  a: 6378140.0,\n  rf: 298.257,\n  ellipseName: \"IAU 1976\"\n};\n\nexports.airy = {\n  a: 6377563.396,\n  b: 6356256.910,\n  ellipseName: \"Airy 1830\"\n};\n\nexports.APL4 = {\n  a: 6378137,\n  rf: 298.25,\n  ellipseName: \"Appl. Physics. 1965\"\n};\n\nexports.NWL9D = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"Naval Weapons Lab., 1965\"\n};\n\nexports.mod_airy = {\n  a: 6377340.189,\n  b: 6356034.446,\n  ellipseName: \"Modified Airy\"\n};\n\nexports.andrae = {\n  a: 6377104.43,\n  rf: 300.0,\n  ellipseName: \"Andrae 1876 (Den., Iclnd.)\"\n};\n\nexports.aust_SA = {\n  a: 6378160.0,\n  rf: 298.25,\n  ellipseName: \"Australian Natl & S. Amer. 1969\"\n};\n\nexports.GRS67 = {\n  a: 6378160.0,\n  rf: 298.2471674270,\n  ellipseName: \"GRS 67(IUGG 1967)\"\n};\n\nexports.bessel = {\n  a: 6377397.155,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841\"\n};\n\nexports.bess_nam = {\n  a: 6377483.865,\n  rf: 299.1528128,\n  ellipseName: \"Bessel 1841 (Namibia)\"\n};\n\nexports.clrk66 = {\n  a: 6378206.4,\n  b: 6356583.8,\n  ellipseName: \"Clarke 1866\"\n};\n\nexports.clrk80 = {\n  a: 6378249.145,\n  rf: 293.4663,\n  ellipseName: \"Clarke 1880 mod.\"\n};\n\nexports.clrk80ign = {\n  a: 6378249.2,\n  b: 6356515,\n  rf: 293.4660213,\n  ellipseName: \"Clarke 1880 (IGN)\"\n};\n\nexports.clrk58 = {\n  a: 6378293.645208759,\n  rf: 294.2606763692654,\n  ellipseName: \"Clarke 1858\"\n};\n\nexports.CPM = {\n  a: 6375738.7,\n  rf: 334.29,\n  ellipseName: \"Comm. des Poids et Mesures 1799\"\n};\n\nexports.delmbr = {\n  a: 6376428.0,\n  rf: 311.5,\n  ellipseName: \"Delambre 1810 (Belgium)\"\n};\n\nexports.engelis = {\n  a: 6378136.05,\n  rf: 298.2566,\n  ellipseName: \"Engelis 1985\"\n};\n\nexports.evrst30 = {\n  a: 6377276.345,\n  rf: 300.8017,\n  ellipseName: \"Everest 1830\"\n};\n\nexports.evrst48 = {\n  a: 6377304.063,\n  rf: 300.8017,\n  ellipseName: \"Everest 1948\"\n};\n\nexports.evrst56 = {\n  a: 6377301.243,\n  rf: 300.8017,\n  ellipseName: \"Everest 1956\"\n};\n\nexports.evrst69 = {\n  a: 6377295.664,\n  rf: 300.8017,\n  ellipseName: \"Everest 1969\"\n};\n\nexports.evrstSS = {\n  a: 6377298.556,\n  rf: 300.8017,\n  ellipseName: \"Everest (Sabah & Sarawak)\"\n};\n\nexports.fschr60 = {\n  a: 6378166.0,\n  rf: 298.3,\n  ellipseName: \"Fischer (Mercury Datum) 1960\"\n};\n\nexports.fschr60m = {\n  a: 6378155.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1960\"\n};\n\nexports.fschr68 = {\n  a: 6378150.0,\n  rf: 298.3,\n  ellipseName: \"Fischer 1968\"\n};\n\nexports.helmert = {\n  a: 6378200.0,\n  rf: 298.3,\n  ellipseName: \"Helmert 1906\"\n};\n\nexports.hough = {\n  a: 6378270.0,\n  rf: 297.0,\n  ellipseName: \"Hough\"\n};\n\nexports.intl = {\n  a: 6378388.0,\n  rf: 297.0,\n  ellipseName: \"International 1909 (Hayford)\"\n};\n\nexports.kaula = {\n  a: 6378163.0,\n  rf: 298.24,\n  ellipseName: \"Kaula 1961\"\n};\n\nexports.lerch = {\n  a: 6378139.0,\n  rf: 298.257,\n  ellipseName: \"Lerch 1979\"\n};\n\nexports.mprts = {\n  a: 6397300.0,\n  rf: 191.0,\n  ellipseName: \"Maupertius 1738\"\n};\n\nexports.new_intl = {\n  a: 6378157.5,\n  b: 6356772.2,\n  ellipseName: \"New International 1967\"\n};\n\nexports.plessis = {\n  a: 6376523.0,\n  rf: 6355863.0,\n  ellipseName: \"Plessis 1817 (France)\"\n};\n\nexports.krass = {\n  a: 6378245.0,\n  rf: 298.3,\n  ellipseName: \"Krassovsky, 1942\"\n};\n\nexports.SEasia = {\n  a: 6378155.0,\n  b: 6356773.3205,\n  ellipseName: \"Southeast Asia\"\n};\n\nexports.walbeck = {\n  a: 6376896.0,\n  b: 6355834.8467,\n  ellipseName: \"Walbeck\"\n};\n\nexports.WGS60 = {\n  a: 6378165.0,\n  rf: 298.3,\n  ellipseName: \"WGS 60\"\n};\n\nexports.WGS66 = {\n  a: 6378145.0,\n  rf: 298.25,\n  ellipseName: \"WGS 66\"\n};\n\nexports.WGS7 = {\n  a: 6378135.0,\n  rf: 298.26,\n  ellipseName: \"WGS 72\"\n};\n\nexport var WGS84 = exports.WGS84 = {\n  a: 6378137.0,\n  rf: 298.257223563,\n  ellipseName: \"WGS 84\"\n};\n\nexports.sphere = {\n  a: 6370997.0,\n  b: 6370997.0,\n  ellipseName: \"Normal Sphere (r=6370997)\"\n};\n","var datums = {\n  wgs84: {\n    towgs84: \"0,0,0\",\n    ellipse: \"WGS84\",\n    datumName: \"WGS84\"\n  },\n  ch1903: {\n    towgs84: \"674.374,15.056,405.346\",\n    ellipse: \"bessel\",\n    datumName: \"swiss\"\n  },\n  ggrs87: {\n    towgs84: \"-199.87,74.79,246.62\",\n    ellipse: \"GRS80\",\n    datumName: \"Greek_Geodetic_Reference_System_1987\"\n  },\n  nad83: {\n    towgs84: \"0,0,0\",\n    ellipse: \"GRS80\",\n    datumName: \"North_American_Datum_1983\"\n  },\n  nad27: {\n    nadgrids: \"@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat\",\n    ellipse: \"clrk66\",\n    datumName: \"North_American_Datum_1927\"\n  },\n  potsdam: {\n    towgs84: \"598.1,73.7,418.2,0.202,0.045,-2.455,6.7\",\n    ellipse: \"bessel\",\n    datumName: \"Potsdam Rauenberg 1950 DHDN\"\n  },\n  carthage: {\n    towgs84: \"-263.0,6.0,431.0\",\n    ellipse: \"clark80\",\n    datumName: \"Carthage 1934 Tunisia\"\n  },\n  hermannskogel: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Hermannskogel\"\n  },\n  mgi: {\n    towgs84: \"577.326,90.129,463.919,5.137,1.474,5.297,2.4232\",\n    ellipse: \"bessel\",\n    datumName: \"Militar-Geographische Institut\",\n  },\n  osni52: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"airy\",\n    datumName: \"Irish National\"\n  },\n  ire65: {\n    towgs84: \"482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15\",\n    ellipse: \"mod_airy\",\n    datumName: \"Ireland 1965\"\n  },\n  rassadiran: {\n    towgs84: \"-133.63,-157.5,-158.62\",\n    ellipse: \"intl\",\n    datumName: \"Rassadiran\"\n  },\n  nzgd49: {\n    towgs84: \"59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993\",\n    ellipse: \"intl\",\n    datumName: \"New Zealand Geodetic Datum 1949\"\n  },\n  osgb36: {\n    towgs84: \"446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894\",\n    ellipse: \"airy\",\n    datumName: \"Ordnance Survey of Great Britain 1936\"\n  },\n  s_jtsk: {\n    towgs84: \"589,76,480\",\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: \"106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1\",\n    ellipse: \"intl\",\n    datumName: \"Reseau National Belge 1972\"\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","import {PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD} from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; //datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\nvar loadedNadgrids = {};\n\n/**\n * Load a binary NTv2 file (.gsb) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer.\n */\nexport default function nadgrid(key, data) {\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian);\n  var nadgrid = {header: header, subgrids: subgrids};\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) { return null; }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return {name: 'null', mandatory: !optional, grid: null, isNull: true};\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian),\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    gridOffset += 176 + subHeader.gridNodeCount * 16;\n  }\n  return grids;\n}\n\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];});\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian),\n      latitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian),\n      longitudeAccuracy: view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian),\n    };\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport {sphere as dc_sphere, eccentricity as dc_eccentricity} from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport {getNadgrids} from \"./nadgrid\";\n\nfunction Projection(srsCode,callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  callback = callback || function(error){\n    if(error){\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if(typeof json !== 'object'){\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if(!ourProj){\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  this.init();\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import {SIXTH, RA4, RA6, EPSLN} from './constants/values';\nimport {default as Ellipsoid, WGS84} from './constants/Ellipsoid';\nimport match from './match';\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","'use strict';\nimport {PJD_3PARAM, PJD_7PARAM, HALF_PI} from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; //Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    //..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; //Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2],\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n\n  if (datum_type === PJD_3PARAM) {\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2],\n    };\n\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    //if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } //cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport {geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums} from './datumUtils';\nimport adjust_lon from \"./common/adjust_lon\";\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function(source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) &&  !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = {x: -point.x, y: point.y};\n  var output = {x: Number.NaN, y: Number.NaN};\n  var onlyMandatoryGrids = false;\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    onlyMandatoryGrids = grid.mandatory;\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log(\"Unable to find mandatory grid '\" + grid.name + \"'\");\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x ) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log(\"Failed to find a grid shift table for location '\"+\n      -input.x * R2D + \" \" + input.y * R2D + \" tried: '\" + attemptedGrids + \"'\");\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = {x: Number.NaN, y: Number.NaN};\n  if (isNaN(pin.x)) { return val; }\n  var tb = {x: pin.x, y: pin.y};\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log(\"Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.\");\n        break;\n      }\n      dif = {x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y)};\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log(\"Inverse grid shift iterator failed to converge.\");\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = {x: pin.x / ct.del[0], y: pin.y / ct.del[1]};\n  var indx = {x: Math.floor(t.x), y: Math.floor(t.y)};\n  var frct = {x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y};\n  var val= {x: Number.NaN, y: Number.NaN};\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx++;\n  var f10= {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx += ct.lim[0];\n  var f11 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  inx--;\n  var f01 = {x: ct.cvs[inx][0], y: ct.cvs[inx][1]};\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function(crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if (\"ew\".indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n\n    }\n    else if (i === 1) {\n      v = yin;\n      if (\"ns\".indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    }\n    else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n    case 'e':\n      out[t] = v;\n      break;\n    case 'w':\n      out[t] = -v;\n      break;\n    case 'n':\n      out[t] = v;\n      break;\n    case 's':\n      out[t] = -v;\n      break;\n    case 'u':\n      if (point[t] !== undefined) {\n        out.z = v;\n      }\n      break;\n    case 'd':\n      if (point[t] !== undefined) {\n        out.z = -v;\n      }\n      break;\n    default:\n      //console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n      return null;\n    }\n  }\n  return out;\n}\n","export default function (array){\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length>2) {\n    out.z = array[2];\n  }\n  if (array.length>3) {\n    out.m = array[3];\n  }\n  return out;\n}","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import {D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT} from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84') ||\n    ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || {x: NaN, y: NaN};\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return [transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3));\n        } else {\n          return [transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3));\n        }\n      } else {\n        return [transformedArray.x, transformedArray.y].concat(coords.slice(2));\n      }\n    } else {\n      return [transformedArray.x, transformedArray.y];\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return out;\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return out;\n  }\n}\n\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (item.oProj) {\n    return item.oProj;\n  }\n  return proj(item);\n}\n\nfunction proj4(fromProj, toProj, coord) {\n  fromProj = checkProj(fromProj);\n  var single = false;\n  var obj;\n  if (typeof toProj === 'undefined') {\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof toProj.x !== 'undefined' || Array.isArray(toProj)) {\n    coord = toProj;\n    toProj = fromProj;\n    fromProj = wgs84;\n    single = true;\n  }\n  toProj = checkProj(toProj);\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\nexport default proj4;","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import {toPoint, forward} from 'mgrs';\n\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if(typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0], 10);\n    this.y = parseFloat(coords[1], 10);\n    this.z = parseFloat(coords[2], 10) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function(mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function(accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function(es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}","export default function(phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}","import pj_mlfn from \"./pj_mlfn\";\nimport {EPSLN} from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function(arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    //t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    //phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  //..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport {EPSLN, HALF_PI} from '../constants/values';\nimport sign from '../common/sign';\n\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    }\n    else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        }\n        else {\n          y = 0;\n        }\n      }\n      else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  }\n  else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1 +\n      als / 6 * (1 - t + c +\n      als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c +\n      als / 42 * (61 + 179 * ts - ts * t - 479 * t))))) +\n      this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0 +\n      sin_phi * delta_lon * al / 2 * (1 +\n      als / 12 * (5 - t + 9 * c + 4 * cs +\n      als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c +\n      als / 56 * (1385 + 543 * ts - ts * t - 3111 * t)))))) +\n      this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    }\n    else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  }\n  else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1 -\n        ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs -\n        ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c -\n        ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1 -\n        ds / 6 * (1 + 2 * t + c -\n        ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c -\n        ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    }\n    else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Fast_Transverse_Mercator\", \"Fast Transverse Mercator\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}","export default function(x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function(x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function(x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","export default function(pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function(pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function(x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675 ))))));\n  this.cbg[0] = n * (-2 + n * ( 2 / 3 + n * ( 4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * ( -13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * ( -24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * ( 2 / 3 + n * (-37 / 96 + n * ( 1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720 ))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  }\n  else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  }\n  else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"Extended_Transverse_Mercator\", \"Extended Transverse Mercator\", \"etmerc\", \"Transverse_Mercator\", \"Transverse Mercator\", \"Gauss Kruger\", \"Gauss_Kruger\", \"tmerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport {D2R} from '../constants/values';\n\n\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 =  ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = [\"Universal Transverse Mercator System\", \"utm\"];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function(zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function(esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport {HALF_PI, FORTPI} from '../constants/values';\n\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), - 0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gauss\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = \"Oblique Stereographic Alternative\";\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"Stereographic_North_Pole\", \"Oblique_Stereographic\", \"sterea\",\"Oblique Stereographic Alternative\",\"Double_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {EPSLN, HALF_PI} from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\nexport function init() {\n\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        //North pole\n        //trace('stere:north pole');\n        this.con = 1;\n      }\n      else {\n        //South pole\n        //trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(this.ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    //case of the origine point\n    //trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    //trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  }\n  else {\n    X = 2 * Math.atan(this.ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      //trace(p.toString());\n      return p;\n    }\n    else if (Math.abs(this.sinlat0) < EPSLN) {\n      //Eq\n      //trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    }\n    else {\n      //other case\n      //trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  //trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      }\n      else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    }\n    else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        //trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, - 1 * p.y));\n    }\n    else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      }\n      else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  //trace(p.toString());\n  return p;\n\n}\n\nexport var names = [\"stere\", \"Stereographic_South_Pole\", \"Polar Stereographic (variant B)\", \"Polar_Stereographic\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      //...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    //S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = [\"somerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { D2R, EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator','Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.PROJECTION === \"object\" ? Object.keys(P.PROJECTION)[0] : P.PROJECTION;\n  \n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1;\n}\n\n\n/* Initialize the Oblique Mercator  projection\n    ------------------------------------------*/\nexport function init() {  \n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0, AB;\n  \n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n  \n  var alp = false;\n  if (\"alpha\" in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if (\"rectified_grid_angle\" in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n  \n  if (gam) {\n    gamma = (this.rectified_grid_angle * D2R);\n  }\n  \n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n    \n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL ||\n        Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL ||\n        Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n  \n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n  \n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D -1;\n    \n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n    \n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n  \n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n    \n    if (con < -Math.pi) {\n      lam2 -=TWO_PI;\n    } else if (con > Math.pi) {\n      lam2 += TWO_PI;\n    }\n    \n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n  \n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n  \n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n  AB = this.A * this.B;\n  \n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n    \n    if (this.lat0 < 0) {\n      this.u_0 = - this.u_0;\n    }  \n  }\n    \n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ----------------------------------------------------------*/\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n  \n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n    \n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n        \n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n    \n    v = 0.5 * this.ArB * Math.log((1 - U)/(1 + U));\n    temp = Math.cos(this.B * p.x);\n    \n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }    \n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n     \n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n  \n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n  \n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n  \n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n  \n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n  \n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n    \n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n        \n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n  \n  coords.x += this.lam0;\n  \n  return coords;\n}\n\nexport var names = [\"Hotine_Oblique_Mercator\", \"Hotine Oblique Mercator\", \"Hotine_Oblique_Mercator_Azimuth_Natural_Origin\", \"Hotine_Oblique_Mercator_Two_Point_Natural_Origin\", \"Hotine_Oblique_Mercator_Azimuth_Center\", \"Oblique_Mercator\", \"omerc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport {HALF_PI, EPSLN} from '../constants/values';\nexport function init() {\n  \n  //double lat0;                    /* the reference latitude               */\n  //double long0;                   /* the reference longitude              */\n  //double lat1;                    /* first standard parallel              */\n  //double lat2;                    /* second standard parallel             */\n  //double r_maj;                   /* major axis                           */\n  //double r_min;                   /* minor axis                           */\n  //double false_east;              /* x offset in meters                   */\n  //double false_north;             /* y offset in meters                   */\n  \n  //the above value can be set with proj4.defs\n  //example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } //if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  }\n  else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = \"Lambert Conformal Conic\";\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  }\n  else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  \"Lambert Tangential Conformal Conic Projection\",\n  \"Lambert_Conformal_Conic\",\n  \"Lambert_Conformal_Conic_1SP\",\n  \"Lambert_Conformal_Conic_2SP\",\n  \"lcc\",\n  \"Lambert Conic Conformal (1SP)\",\n  \"Lambert Conic Conformal (2SP)\"\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x*/\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, - 1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = [\"Krovak\", \"krovak\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}","export default function(x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}","export default function(x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}","export default function(x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}","export default function(x) {\n  return (x * x * x * (35 / 3072));\n}","export default function(a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}","import {HALF_PI} from '../constants/values';\nimport sign from './sign';\n\nexport default function(x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function(ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  }\n  else {\n    //ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n\n\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  }\n  else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n\n}\n\nexport var names = [\"Cassini\", \"Cassini_Soldner\", \"cass\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function(eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  }\n  else {\n    return (2 * sinphi);\n  }\n}","\nimport {HALF_PI, EPSLN, FORTPI} from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\n\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/* Initialize the Lambert Azimuthal Equal Area projection\n  ------------------------------------------------------*/\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? this.S_POLE : this.N_POLE;\n  }\n  else if (Math.abs(t) < EPSLN) {\n    this.mode = this.EQUIT;\n  }\n  else {\n    this.mode = this.OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n    case this.N_POLE:\n      this.dd = 1;\n      break;\n    case this.S_POLE:\n      this.dd = 1;\n      break;\n    case this.EQUIT:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      this.dd = 1 / this.rq;\n      this.xmf = 1;\n      this.ymf = 0.5 * this.qp;\n      break;\n    case this.OBLIQ:\n      this.rq = Math.sqrt(0.5 * this.qp);\n      sinphi = Math.sin(this.lat0);\n      this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n      this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n      this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n      this.ymf = (this.xmf = this.rq) / this.dd;\n      this.xmf *= this.dd;\n      break;\n    }\n  }\n  else {\n    if (this.mode === this.OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  }\n  else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n      b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n      break;\n    case this.EQUIT:\n      b = 1 + cosb * coslam;\n      break;\n    case this.N_POLE:\n      b = HALF_PI + phi;\n      q = this.qp - q;\n      break;\n    case this.S_POLE:\n      b = phi - HALF_PI;\n      q = this.qp + q;\n      break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n    case this.OBLIQ:\n    case this.EQUIT:\n      b = Math.sqrt(2 / b);\n      if (this.mode === this.OBLIQ) {\n        y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n      }\n      else {\n        y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n      }\n      x = this.xmf * b * cosb * sinlam;\n      break;\n    case this.N_POLE:\n    case this.S_POLE:\n      if (q >= 0) {\n        x = (b = Math.sqrt(q)) * sinlam;\n        y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n      }\n      else {\n        x = y = 0;\n      }\n      break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n    case this.EQUIT:\n      phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n      x *= sinz;\n      y = cosz * rh;\n      break;\n    case this.OBLIQ:\n      phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n      x *= sinz * this.cosph0;\n      y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n      break;\n    case this.N_POLE:\n      y = -y;\n      phi = HALF_PI - phi;\n      break;\n    case this.S_POLE:\n      phi -= HALF_PI;\n      break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  }\n  else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      }\n      else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    }\n    else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = [\"Lambert Azimuthal Equal Area\", \"Lambert_Azimuthal_Equal_Area\", \"laea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function(x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  }\n  else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  -------------------------------------------------------------------*/\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  }\n  else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n-------------------------------------------*/\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = [\"Albers_Conic_Equal_Area\", \"Albers\", \"aea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN} from '../constants/values';\n\n/*\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n  */\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  }\n  else {\n\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      -----------------*/\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  }\n  else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"gnom\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/*\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n*/\nexport function init() {\n  //no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  }\n  else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  }\n  else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"cea\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {HALF_PI} from '../constants/values';\n\nexport default function(eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    }\n    else {\n      return HALF_PI;\n    }\n  }\n  //var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  //console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Equidistant Cylindrical (Plate Carre)\";\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = [\"Equirectangular\", \"Equidistant_Cylindrical\", \"eqc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport {EPSLN} from '../constants/values';\n\nimport gN from '../common/gN';\nvar MAX_ITER = 20;\n\nexport function init() {\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); //si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    }\n    else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  }\n  else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    }\n    else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    }\n    else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  }\n  else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    }\n    else {\n\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      //lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Polyconic\", \"poly\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {SEC_TO_RAD} from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = [\"New_Zealand_Map_Grid\", \"nzmg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n\n/* Initialize the Miller Cylindrical projection\n  -------------------------------------------*/\nexport function init() {\n  //no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Miller_Cylindrical\", \"mill\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n\nexport function init() {\n  /* Place parameters in static storage for common use\n    -------------------------------------------------*/\n\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  }\n  else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  -----------------------------------------------------*/\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    -----------------*/\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    }\n    else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n\n  }\n  else {\n\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    }\n    else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  }\n  else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      //temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    }\n    else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Sinusoidal\", \"sinu\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport {EPSLN} from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ----------------------------------------------------*/\nexport function forward(p) {\n\n  /* Forward equations\n      -----------------*/\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      -----------------------------------------------------*/\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       --------------------------------------------------------------------------*/\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       -------------------------------------------------------------------*/\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Mollweide\", \"moll\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport {EPSLN} from '../constants/values';\n\nexport function init() {\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sinphi = Math.sin(this.lat1);\n  this.cosphi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sinphi, this.cosphi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sinphi;\n  }\n  else {\n    this.sinphi = Math.sin(this.lat2);\n    this.cosphi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sinphi, this.cosphi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  -----------------------------------------------------------*/\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      -----------------*/\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  }\n  else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  -----------------*/\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  }\n  else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n\n}\n\nexport var names = [\"Equidistant_Conic\", \"eqdc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/* Initialize the Van Der Grinten projection\n  ----------------------------------------*/\nexport function init() {\n  //this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    -----------------*/\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    }\n    else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  //con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    //y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  }\n  else {\n    //y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  ---------------------------------------------------------*/\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    }\n    else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n  else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  }\n  else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"Van_der_Grinten_I\", \"VanDerGrinten\", \"vandg\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport {HALF_PI, EPSLN} from '../constants/values';\n\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\n\n\n\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, tanphi, Nl1, Nl, psi, Az, G, H, GH, Hs, c, kp, cos_c, s, s2, s3, s4, s5;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    }\n    else {\n      //Default case\n      tanphi = sinphi / cosphi;\n      Nl1 = gN(this.a, this.e, this.sin_p12);\n      Nl = gN(this.a, this.e, sinphi);\n      psi = Math.atan((1 - this.es) * tanphi + this.es * Nl1 * this.sin_p12 / (Nl * cosphi));\n      Az = Math.atan2(Math.sin(dlon), this.cos_p12 * Math.tan(psi) - this.sin_p12 * Math.cos(dlon));\n      if (Az === 0) {\n        s = Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else if (Math.abs(Math.abs(Az) - Math.PI) <= EPSLN) {\n        s = -Math.asin(this.cos_p12 * Math.sin(psi) - this.sin_p12 * Math.cos(psi));\n      }\n      else {\n        s = Math.asin(Math.sin(dlon) * Math.cos(psi) / Math.sin(Az));\n      }\n      G = this.e * this.sin_p12 / Math.sqrt(1 - this.es);\n      H = this.e * this.cos_p12 * Math.cos(Az) / Math.sqrt(1 - this.es);\n      GH = G * H;\n      Hs = H * H;\n      s2 = s * s;\n      s3 = s2 * s;\n      s4 = s3 * s;\n      s5 = s4 * s;\n      c = Nl1 * s * (1 - s2 * Hs * (1 - Hs) / 6 + s3 / 8 * GH * (1 - 2 * Hs) + s4 / 120 * (Hs * (4 - 7 * Hs) - 3 * G * G * (1 - 7 * Hs)) - s5 / 48 * GH);\n      p.x = this.x0 + c * Math.sin(Az);\n      p.y = this.y0 + c * Math.cos(Az);\n      return p;\n    }\n  }\n\n\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, N1, psi, Az, cosAz, tmp, A, B, D, Ee, F, sinpsi;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    }\n    else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n        }\n        else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      }\n      else {\n        /*con = cosz - this.sin_p12 * Math.sin(lat);\n        if ((Math.abs(con) < EPSLN) && (Math.abs(p.x) < EPSLN)) {\n          //no-op, just keep the lon value as is\n        } else {\n          var temp = Math.atan2((p.x * sinz * this.cos_p12), (con * rh));\n          lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz * this.cos_p12), (con * rh)));\n        }*/\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      //North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - 1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      //South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    else {\n      //default case\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      Az = Math.atan2(p.x, p.y);\n      N1 = gN(this.a, this.e, this.sin_p12);\n      cosAz = Math.cos(Az);\n      tmp = this.e * this.cos_p12 * cosAz;\n      A = -tmp * tmp / (1 - this.es);\n      B = 3 * this.es * (1 - A) * this.sin_p12 * this.cos_p12 * cosAz / (1 - this.es);\n      D = rh / N1;\n      Ee = D - A * (1 + A) * Math.pow(D, 3) / 6 - B * (1 + 3 * A) * Math.pow(D, 4) / 24;\n      F = 1 - A * Ee * Ee / 2 - D * Ee * Ee * Ee / 6;\n      psi = Math.asin(this.sin_p12 * Math.cos(Ee) + this.cos_p12 * Math.sin(Ee) * cosAz);\n      lon = adjust_lon(this.long0 + Math.asin(Math.sin(Az) * Math.sin(Ee) / Math.cos(psi)));\n      sinpsi = Math.sin(psi);\n      lat = Math.atan2((sinpsi - this.es * F * this.sin_p12) * Math.tan(psi), sinpsi * (1 - this.es));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n  }\n\n}\n\nexport var names = [\"Azimuthal_Equidistant\", \"aeqd\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport {EPSLN, HALF_PI} from '../constants/values';\n\nexport function init() {\n  //double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      -------------------------------------------------*/\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    ---------------------------------------------------*/\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      -----------------*/\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      -----------------*/\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, - p.y));\n    }\n    else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\"ortho\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport {EPSLN, TWO_PI, SPI, HALF_PI, FORTPI} from '../constants/values';\n\n/* constants */\nvar FACE_ENUM = {\n    FRONT: 1,\n    RIGHT: 2,\n    BACK: 3,\n    LEFT: 4,\n    TOP: 5,\n    BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n    AREA_0: 1,\n    AREA_1: 2,\n    AREA_2: 3,\n    AREA_3: 4\n};\n\nexport function init() {\n\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || \"Quadrilateralized Spherical Cube\";\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = {x: 0, y: 0};\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = {value: 0};\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) {//if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; //lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = {lam: 0, phi: 0};\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = {value: 0};\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = [\"Quadrilateralized Spherical Cube\", \"Quadrilateralized_Spherical_Cube\", \"qsc\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport {HALF_PI, D2R, R2D, EPSLN} from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n    [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n    [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n    [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n    [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n    [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n    [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n    [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n    [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n    [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n    [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n    [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n    [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n    [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n    [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n    [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n    [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n    [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n    [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n    [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n    [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n    [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n    [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n    [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n    [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n    [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n    [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n    [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n    [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n    [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n    [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n    [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n    [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n    [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n    [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n    [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n    [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n    [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n    [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D/5; // rad to 5-degree interval\nvar RC1 = 1/C1;\nvar NODES = 18;\n\nvar poly3_val = function(coefs, x) {\n    return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function(coefs, x) {\n    return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n    var x = start;\n    for (; iters; --iters) {\n        var upd = f_df(x);\n        x -= upd;\n        if (Math.abs(upd) < max_err) {\n            break;\n        }\n    }\n    return x;\n}\n\nexport function init() {\n    this.x0 = this.x0 || 0;\n    this.y0 = this.y0 || 0;\n    this.long0 = this.long0 || 0;\n    this.es = 0;\n    this.title = this.title || \"Robinson\";\n}\n\nexport function forward(ll) {\n    var lon = adjust_lon(ll.x - this.long0);\n\n    var dphi = Math.abs(ll.y);\n    var i = Math.floor(dphi * C1);\n    if (i < 0) {\n        i = 0;\n    } else if (i >= NODES) {\n        i = NODES - 1;\n    }\n    dphi = R2D * (dphi - RC1 * i);\n    var xy = {\n        x: poly3_val(COEFS_X[i], dphi) * lon,\n        y: poly3_val(COEFS_Y[i], dphi)\n    };\n    if (ll.y < 0) {\n        xy.y = -xy.y;\n    }\n\n    xy.x = xy.x * this.a * FXC + this.x0;\n    xy.y = xy.y * this.a * FYC + this.y0;\n    return xy;\n}\n\nexport function inverse(xy) {\n    var ll = {\n        x: (xy.x - this.x0) / (this.a * FXC),\n        y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n    };\n\n    if (ll.y >= 1) { // pathologic case\n        ll.x /= COEFS_X[NODES][0];\n        ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n    } else {\n        // find table interval\n        var i = Math.floor(ll.y * NODES);\n        if (i < 0) {\n            i = 0;\n        } else if (i >= NODES) {\n            i = NODES - 1;\n        }\n        for (;;) {\n            if (COEFS_Y[i][0] > ll.y) {\n                --i;\n            } else if (COEFS_Y[i+1][0] <= ll.y) {\n                ++i;\n            } else {\n                break;\n            }\n        }\n        // linear interpolation in 5 degree interval\n        var coefs = COEFS_Y[i];\n        var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i+1][0] - coefs[0]);\n        // find t so that poly3_val(coefs, t) = ll.y\n        t = newton_rapshon(function(x) {\n            return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n        }, t, EPSLN, 100);\n\n        ll.x /= poly3_val(COEFS_X[i], t);\n        ll.y = (5 * i + t) * D2R;\n        if (xy.y < 0) {\n            ll.y = -ll.y;\n        }\n    }\n\n    ll.x = adjust_lon(ll.x + this.long0);\n    return ll;\n}\n\nexport var names = [\"Robinson\", \"robin\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n    geodeticToGeocentric,\n    geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n    this.name = 'geocent';\n\n}\n\nexport function forward(p) {\n    var point = geodeticToGeocentric(p, this.es, this.a);\n    return point;\n}\n\nexport function inverse(p) {\n    var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n    return point;\n}\n\nexport var names = [\"Geocentric\", 'geocentric', \"geocent\", \"Geocent\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names\n};","\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nimport { D2R, HALF_PI, EPSLN } from \"../constants/values\";\nimport hypot from \"../common/hypot\";\n\nvar params = {\n  h:     { def: 100000, num: true },           // default is Karman line, no default in PROJ.7\n  azi:   { def: 0, num: true, degrees: true }, // default is North\n  tilt:  { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true },                // default is Greenwich, conversion to rad is automatic\n  lat0:  { def: 0, num: true }                 // default is Equator, conversion to rad is automatic\n};\n\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === \"undefined\") {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error(\"Invalid parameter value, must be numeric \" + p + \" = \" + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a;  // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error(\"Invalid height\");\n  }\n  \n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt \n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = [\"Tilted_Perspective\", \"tpers\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\nexport function init() {\n    this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n    this.h = Number(this.h);\n    this.radius_g_1 = this.h / this.a;\n\n    if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n        throw new Error();\n    }\n\n    this.radius_g = 1.0 + this.radius_g_1;\n    this.C = this.radius_g * this.radius_g - 1.0;\n\n    if (this.es !== 0.0) {\n        var one_es = 1.0 - this.es;\n        var rone_es = 1 / one_es;\n\n        this.radius_p = Math.sqrt(one_es);\n        this.radius_p2 = one_es;\n        this.radius_p_inv2 = rone_es;\n\n        this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n    } else {\n        this.radius_p = 1.0;\n        this.radius_p2 = 1.0;\n        this.radius_p_inv2 = 1.0;\n\n        this.shape = 'sphere';  // Use as a condition in the forward and inverse functions.\n    }\n\n    if (!this.title) {\n        this.title = \"Geostationary Satellite View\";\n    }\n}\n\nfunction forward(p) {\n    var lon = p.x;\n    var lat = p.y;\n    var tmp, v_x, v_y, v_z;\n    lon = lon - this.long0;\n\n    if (this.shape === 'ellipse') {\n        lat = Math.atan(this.radius_p2 * Math.tan(lat));\n        var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n        v_x = r * Math.cos(lon) * Math.cos(lat);\n        v_y = r * Math.sin(lon) * Math.cos(lat);\n        v_z = r * Math.sin(lat);\n\n        if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        tmp = this.radius_g - v_x;\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    } else if (this.shape === 'sphere') {\n        tmp = Math.cos(lat);\n        v_x = Math.cos(lon) * tmp;\n        v_y = Math.sin(lon) * tmp;\n        v_z = Math.sin(lat);\n        tmp = this.radius_g - v_x;\n\n        if (this.flip_axis) {\n            p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n            p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n        } else {\n            p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n            p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n        }\n    }\n    p.x = p.x * this.a;\n    p.y = p.y * this.a;\n    return p;\n}\n\nfunction inverse(p) {\n    var v_x = -1.0;\n    var v_y = 0.0;\n    var v_z = 0.0;\n    var a, b, det, k;\n\n    p.x = p.x / this.a;\n    p.y = p.y / this.a;\n\n    if (this.shape === 'ellipse') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n        }\n\n        var v_zp = v_z / this.radius_p;\n        a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n        p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n    } else if (this.shape === 'sphere') {\n        if (this.flip_axis) {\n            v_z = Math.tan(p.y / this.radius_g_1);\n            v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n        } else {\n            v_y = Math.tan(p.x / this.radius_g_1);\n            v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n        }\n\n        a = v_y * v_y + v_z * v_z + v_x * v_x;\n        b = 2 * this.radius_g * v_x;\n        det = (b * b) - 4 * a * this.C;\n        if (det < 0.0) {\n            p.x = Number.NaN;\n            p.y = Number.NaN;\n            return p;\n        }\n\n        k = (-b - Math.sqrt(det)) / (2.0 * a);\n        v_x = this.radius_g + k * v_x;\n        v_y *= k;\n        v_z *= k;\n\n        p.x = Math.atan2(v_y, v_x);\n        p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    }\n    p.x = p.x + this.long0;\n    return p;\n}\n\nexport var names = [\"Geostationary Satellite View\", \"Geostationary_Satellite\", \"geos\"];\nexport default {\n    init: init,\n    forward: forward,\n    inverse: inverse,\n    names: names,\n};\n\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from \"../common/adjust_lon\";\n\nvar A1 = 1.340264,\n    A2 = -0.081106,\n    A3 = 0.000893,\n    A4 = 0.003796,\n    M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n  paramLatSq = paramLat * paramLat,\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat) /\n  (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n      NITER = 12,\n      paramLat = p.y,\n      paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n        break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)) /\n          Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = [\"eqearth\", \"Equal Earth\", \"Equal_Earth\"];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};","import adjust_lat from \"../common/adjust_lat\";\nimport adjust_lon from \"../common/adjust_lon\";\nimport hypot from \"../common/hypot\";\nimport pj_enfn from \"../common/pj_enfn\";\nimport pj_inv_mlfn from \"../common/pj_inv_mlfn\";\nimport pj_mlfn from \"../common/pj_mlfn\";\nimport { HALF_PI } from \"../constants/values\";\n\nvar EPS10 = 1e-10;\n\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    }\n    else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  }\n  else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = [\"bonne\", \"Bonne (Werner lat_1=90)\"];\nexport default {\n  init: init,\n  names: names\n};","import proj4 from './core';\nimport Proj from \"./Proj\";\nimport Point from \"./Point\";\nimport common from \"./common/toPoint\";\nimport defs from \"./defs\";\nimport nadgrid from \"./nadgrid\";\nimport transform from \"./transform\";\nimport mgrs from \"mgrs\";\nimport includedProjections from \"../projs\";\n\nproj4.defaultDatum = 'WGS84'; //default datum\nproj4.Proj = Proj;\nproj4.WGS84 = new proj4.Proj('WGS84');\nproj4.Point = Point;\nproj4.toPoint = common;\nproj4.defs = defs;\nproj4.nadgrid = nadgrid;\nproj4.transform = transform;\nproj4.mgrs = mgrs;\nproj4.version = '__VERSION__';\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function(proj4){\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = ol.proj;","const __WEBPACK_NAMESPACE_OBJECT__ = ol.proj.transforms;","const __WEBPACK_NAMESPACE_OBJECT__ = ol.proj.Projection;","import * as Log from \"loglevel\";\n\n/**\n * @module LoggerByDefault\n * @alias module:~utils/Logger\n * @description\n * ...\n *\n * @example\n * import Logger from \"gpf-ext-ol/utils/LoggerByDefault\"\n * ou \n * import {Logger} from \"gpf-ext-ol\n * \n * Logger.getLogger();\n * Logger.disableAll();\n * Logger.enableAll();\n */\nvar LoggerByDefault = {\n    /**\n     * creation d'un logger statique\n     *\n     * @function getLogger\n     * @param {String} [name=\"default\"] - the logger name\n     * @returns {Object} logger\n     */\n    getLogger : function (name) {\n        // on définit process si non défini dans l'environnement\n        if (typeof process === \"undefined\") {\n            var process = {};\n            process.env = {\n                VERBOSE : false\n            };\n        }\n        (process.env.VERBOSE) ? Log.enableAll() : Log.disableAll();\n        var logname = name || \"default\";\n        return Log.getLogger(logname);\n    },\n    /**\n     * desactive tous les loggers\n     * @function disableAll\n     */\n    disableAll : function () {\n        var loggers = Log.getLoggers();\n        for (const key in loggers) {\n            if (Object.hasOwnProperty.call(loggers, key)) {\n                const logger = loggers[key];\n                logger.disableAll();\n            }\n        }\n    },\n    /**\n     * active tous les loggers\n     * @function enableAll\n     */\n    enableAll : function () {\n        var loggers = Log.getLoggers();\n        for (const key in loggers) {\n            if (Object.hasOwnProperty.call(loggers, key)) {\n                const logger = loggers[key];\n                logger.enableAll();\n            }\n        }\n    }\n};\n\nexport default LoggerByDefault;\n\n// Expose Export as ol.control.Catalog (for a build bundle)\nif (window.Gp) {\n    window.Gp.Logger = LoggerByDefault;\n}\n","import {\n    addCoordinateTransforms,\n    addProjection,\n    addEquivalentProjections,\n    get\n} from \"ol/proj\";\nimport { get as getTransform } from \"ol/proj/transforms\";\nimport Projection from \"ol/proj/Projection\";\n\nimport Logger from \"../Utils/LoggerByDefault\";\n\nvar logger = Logger.getLogger(\"CRS\");\n\nexport function register (proj4) {\n    const projCodes = Object.keys(proj4.defs);\n    logger.trace(\"proj. codes :\", projCodes);\n\n    const len = projCodes.length;\n    let i, j;\n    for (i = 0; i < len; ++i) {\n        const code = projCodes[i];\n        if (!get(code)) {\n            const def = proj4.defs(code);\n            addProjection(new Projection({\n                code : code,\n                axisOrientation : def.axis,\n                metersPerUnit : def.to_meter,\n                units : def.units\n            }));\n        }\n    }\n    for (i = 0; i < len; ++i) {\n        const code1 = projCodes[i];\n        const proj1 = get(code1);\n\n        for (j = 0; j < len; ++j) {\n            const code2 = projCodes[j];\n            const proj2 = get(code2);\n\n            if (!getTransform(code1, code2)) {\n                if (proj4.defs[code1] === proj4.defs[code2]) {\n                    addEquivalentProjections([proj1, proj2]);\n                } else {\n                    const transform = proj4(code1, code2);\n                    addCoordinateTransforms(proj1, proj2, transform.forward, transform.inverse);\n                }\n            }\n        }\n    }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = ol.extent;","/**\n * @module Register\n * @alias module:~utils/Register\n * @description\n * Register definition for IGNF, and EPSG CRS.\n *\n * @example\n * Gp.Register.IGNF.AMST63\n *   // return : \"+title=Amsterdam 1963 +proj=geocent +towgs84=109.753,-528.133,-362.244,0,0,0,0 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\"\n * Gp.Register.get(\"IGNF:AMST63\")\n *   // same as Gp.Register.IGNF.AMST63\n */\nvar Register = {\n\n    /**\n     * instance already loaded into proj4\n     */\n    isLoaded : false,\n\n    /**\n     * get the definition for a code\n     *\n     * @function get\n     * @param {String} name - ie. EPSG:2154 (Lambert)\n     * @returns {Object} definition\n     * @example\n     * Register.get(\"EPSG:2154\");\n     * // \"+title=RGF93 / Lambert-93 +proj=lcc +lat_1=49 ...\"\n     */\n    get : function (name) {\n        if (name === \"\" || name === null || typeof name === \"undefined\") {\n            return;\n        }\n\n        var s = name.split(\":\");\n        if (s.length !== 2) {\n            return;\n        }\n\n        var _register = s[0];\n        var _code = s[1];\n\n        if (!this.hasOwnProperty(_register)) {\n            return;\n        }\n\n        if (!this[_register].hasOwnProperty(_code)) {\n            return;\n        }\n\n        return this[_register][_code];\n    },\n\n    /**\n     * does projection code exist ?\n     *\n     * @function exist\n     * @param {String} name - ie. EPSG:2154 (Lambert)\n     * @returns {Boolean} true/false\n     * @example\n     * Register.exist(\"EPSG:2154\"); // true\n     */\n    exist : function (name) {\n        if (name === \"\" || name === null || typeof name === \"undefined\") {\n            return false;\n        }\n\n        var s = name.split(\":\");\n        if (s.length !== 2) {\n            return false;\n        }\n\n        var _register = s[0];\n        var _code = s[1];\n\n        if (!this.hasOwnProperty(_register)) {\n            return false;\n        }\n\n        if (!this[_register].hasOwnProperty(_code)) {\n            return false;\n        }\n\n        return true;\n    },\n\n    /**\n     * load all defs to proj4\n     * @function load\n     * @param {Object} Proj4 - proj4 instance\n     */\n    load : function (Proj4) {\n        // un flag pour savoir si le chargement est déjà realisé\n        // (car ceci peut être couteux !)\n        if (!this.isLoaded) {\n            var registers = [\n                \"IGNF\", // exception lors du register IGNF ?\n                \"EPSG\",\n                \"CRS\"\n            ];\n            for (var i = 0; i < registers.length; i++) {\n                var _register = registers[i];\n                var codes = this[_register];\n                for (var _code in codes) {\n                    if (codes.hasOwnProperty(_code)) {\n                        var name = _register + \":\" + _code;\n                        Proj4.defs(name, this.get(name));\n                        // on enlève la dependance à OpenLayers...\n                        // la fonction register est donc à appeller afin d'enregistrer\n                        // les definitions dans OpenLayers :\n                        //  import { get } from \"ol/proj\";\n                        //  import proj4 from \"proj4\";\n                        //  import { register } from \"ol/proj/proj4\";\n                        //      Register.load();\n                        //      // Make projections defined in proj4 (with proj4.defs()) available in OpenLayers.\n                        //      // see ol/proj/proj4.register (https://openlayers.org/en/latest/apidoc/module-ol_proj_proj4.html)\n                        //      register(proj4);\n                        //      console.log(get(\"CRS:84\").getCode()); // \"CRS:84\"\n                    }\n                }\n            }\n            /** ts-syntax */ (this.isLoaded) = true;\n        }\n    },\n\n    /**\n     * load defs by default to proj4\n     *\n     * include into proj4 :\n     * - WGS84\n     * - ['EPSG:4326']\n     * - ['EPSG:3785'], ['EPSG:3857'], GOOGLE, ['EPSG:900913'], ['EPSG:102113']\n     * +\n     * - [\"EPSG:2154\"], [\"EPSG:27571\"],  [\"EPSG:27572\"],  [\"EPSG:27573\"],  [\"EPSG:2757\"],\n     * - [\"CRS:84\"],\n     * - [\"IGNF:LAMB93\"],\n     * - [\"IGNF:LAMBE\"], [\"IGNF:LAMB1\"],  [\"IGNF:LAMB2\"],  [\"IGNF:LAMB3\"],  [\"IGNF:LAMB4\"],\n     * - [\"IGNF:RGF93G\"],\n     * - [\"IGNF:WGS84G\"]\n     *\n     * @function loadByDefault\n     * @param {Object} Proj4 - proj4 instance\n     */\n    loadByDefault : function (Proj4) {\n        // la liste de projections par defaut...\n        var registers = {\n            EPSG : {\n                2154 : Register[\"EPSG\"][\"2154\"],\n                27571 : Register[\"EPSG\"][\"27571\"],\n                27572 : Register[\"EPSG\"][\"27572\"],\n                27573 : Register[\"EPSG\"][\"27573\"],\n                27574 : Register[\"EPSG\"][\"27574\"]\n            },\n            CRS : {\n                84 : Register[\"CRS\"][\"84\"]\n            },\n            IGNF : {\n                LAMB93 : Register[\"IGNF\"][\"LAMB93\"],\n                LAMBE : Register[\"IGNF\"][\"LAMBE\"],\n                LAMB1 : Register[\"IGNF\"][\"LAMB1\"],\n                LAMB2 : Register[\"IGNF\"][\"LAMB2\"],\n                LAMB3 : Register[\"IGNF\"][\"LAMB3\"],\n                LAMB4 : Register[\"IGNF\"][\"LAMB4\"],\n                RGF93G : Register[\"IGNF\"][\"RGF93G\"],\n                WGS84G : Register[\"IGNF\"][\"WGS84G\"]\n            }\n        };\n\n        for (var register in registers) {\n            if (registers.hasOwnProperty(register)) {\n                var codes = registers[register];\n                for (var code in codes) {\n                    if (codes.hasOwnProperty(code)) {\n                        var name = register + \":\" + code;\n                        Proj4.defs(name, codes[code]);\n                    }\n                }\n            }\n        }\n    },\n\n    /**\n     * load only a def to proj4\n     *\n     * @function loadByName\n     * @param {Object} Proj4 - proj4 instance\n     * @param {String} name - ie. EPSG:2154 (Lambert)\n     * @returns {Boolean} true/false\n     */\n    loadByName : function (Proj4, name) {\n        if (!this.exist(name)) {\n            return false;\n        }\n\n        try {\n            Proj4.defs(name, this.get(name));\n        } catch (e) {\n            // FIXME message !?\n            return false;\n        }\n\n        return true;\n    },\n\n    /**\n     * definitions EPSG\n     * @enum\n     */\n    EPSG : {\n        4978 : \"+proj=geocent +datum=WGS84 +units=m +no_defs \",\n        3857 : \"+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs\",\n        3785 : \"+title=WGS 84 / Pseudo-Mercator (deprecated) +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +wktext  +no_defs\",\n        4149 : \"+title=CH1903 +proj=longlat +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +no_defs \",\n        4150 : \"+title=CH1903plus +proj=longlat +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +no_defs \",\n        4151 : \"+title=CHTRF95 +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \",\n        4171 : \"+title=RGF93 +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \",\n        4230 : \"+title=ED50 +proj=longlat +ellps=intl +no_defs \",\n        4235 : \"+title=Guyane Francaise +proj=longlat +ellps=intl +no_defs \",\n        4258 : \"+title=ETRS89 +proj=longlat +ellps=GRS80 +no_defs \",\n        4275 : \"+title=NTF +proj=longlat +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +no_defs \",\n        4322 : \"+title=WGS 72 +proj=longlat +ellps=WGS72 +no_defs \",\n        4326 : \"+title=WGS 84 +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs \",\n        4467 : \"+proj=utm +zone=21 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        4470 : \"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \",\n        4471 : \"+proj=utm +zone=38 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        4474 : \"+proj=utm +zone=38 +south +ellps=intl +towgs84=-382,-59,-262,0,0,0,0 +units=m +no_defs \",\n        4558 : \"+proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \",\n        4559 : \"+proj=utm +zone=20 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        4621 : \"+title=Fort Marigot +proj=longlat +ellps=intl +towgs84=137,248,-430,0,0,0,0 +no_defs \",\n        4622 : \"+title=Guadeloupe 1948 +proj=longlat +ellps=intl +no_defs \",\n        4623 : \"+title=CSG67 +proj=longlat +ellps=intl +towgs84=-186,230,110,0,0,0,0 +no_defs \",\n        4624 : \"+title=RGFG95 +proj=longlat +ellps=GRS80 +towgs84=2,2,-2,0,0,0,0 +no_defs \",\n        4625 : \"+title=Martinique 1938 +proj=longlat +ellps=intl +no_defs \",\n        4626 : \"+title=Reunion 1947 +proj=longlat +ellps=intl +no_defs \",\n        4627 : \"+title=RGR92 +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \",\n        4628 : \"+title=Tahiti 52 +proj=longlat +ellps=intl +towgs84=162,117,154,0,0,0,0 +no_defs \",\n        4629 : \"+title=Tahaa 54 +proj=longlat +ellps=intl +no_defs \",\n        4630 : \"+title=IGN72 Nuku Hiva +proj=longlat +ellps=intl +no_defs \",\n        4632 : \"+title=Combani 1950 +proj=longlat +ellps=intl +towgs84=-382,-59,-262,0,0,0,0 +no_defs \",\n        4633 : \"+title=IGN56 Lifou +proj=longlat +ellps=intl +no_defs \",\n        4634 : \"+title=IGN72 Grand Terre +proj=longlat +ellps=intl +no_defs \",\n        4637 : \"+title=Perroud 1950 +proj=longlat +ellps=intl +towgs84=325,154,172,0,0,0,0 +no_defs \",\n        4638 : \"+title=Saint Pierre et Miquelon 1950 +proj=longlat +ellps=clrk66 +towgs84=30,430,368,0,0,0,0 +no_defs \",\n        4640 : \"+title=RRAF 1991 +proj=longlat +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +no_defs \",\n        4641 : \"+title=IGN53 Mare +proj=longlat +ellps=intl +no_defs \",\n        4645 : \"+title=RGNC 1991 +proj=longlat +ellps=intl +towgs84=0,0,0,0,0,0,0 +no_defs \",\n        4687 : \"+proj=longlat +ellps=GRS80 +no_defs \",\n        4662 : \"+title=IGN72 Grande Terre +proj=longlat +ellps=intl +no_defs \",\n        4689 : \"+title=IGN63 Hiva Oa +proj=longlat +ellps=intl +no_defs \",\n        4690 : \"+title=Tahiti 79 +proj=longlat +ellps=intl +no_defs \",\n        4691 : \"+title=Moorea 87 +proj=longlat +ellps=intl +towgs84=215.525,149.593,176.229,-3.2624,-1.692,-1.1571,10.4773 +no_defs \",\n        4692 : \"+title=Maupiti 83 +proj=longlat +ellps=intl +towgs84=217.037,86.959,23.956,0,0,0,0 +no_defs \",\n        4698 : \"+title=IGN 1962 Kerguelen +proj=longlat +ellps=intl +towgs84=145,-187,103,0,0,0,0 +no_defs \",\n        4749 : \"+title=RGNC91-93 +proj=longlat +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +no_defs \",\n        4750 : \"+title=ST87 Ouvea +proj=longlat +ellps=WGS84 +towgs84=-56.263,16.136,-22.856,0,0,0,0 +no_defs \",\n        4807 : \"+title=NTF (Paris) +proj=longlat +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +no_defs \",\n        2056 : \"+title=CH1903+ / LV95 +proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +x_0=2600000 +y_0=1200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs \",\n        2154 : \"+title=RGF93 / Lambert-93 +proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        2213 : \"+title=ETRS89 / TM 30 NE +proj=tmerc +lat_0=0 +lon_0=30 +k=0.9996 +x_0=500000 +y_0=0 +ellps=GRS80 +units=m +no_defs \",\n        2969 : \"+title=Fort Marigot / UTM zone 20N +proj=utm +zone=20 +ellps=intl +towgs84=137,248,-430,0,0,0,0 +units=m +no_defs \",\n        2970 : \"+title=Guadeloupe 1948 / UTM zone 20N +proj=utm +zone=20 +ellps=intl +units=m +no_defs \",\n        2971 : \"+title=CSG67 / UTM zone 22N +proj=utm +zone=22 +ellps=intl +towgs84=-186,230,110,0,0,0,0 +units=m +no_defs \",\n        2972 : \"+title=RGFG95 / UTM zone 22N +proj=utm +zone=22 +ellps=GRS80 +towgs84=2,2,-2,0,0,0,0 +units=m +no_defs \",\n        2973 : \"+title=Martinique 1938 / UTM zone 20N +proj=utm +zone=20 +ellps=intl +units=m +no_defs \",\n        2975 : \"+title=RGR92 / UTM zone 40S +proj=utm +zone=40 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        2976 : \"+title=Tahiti 52 / UTM zone 6S +proj=utm +zone=6 +south +ellps=intl +towgs84=162,117,154,0,0,0,0 +units=m +no_defs \",\n        2977 : \"+title=Tahaa 54 / UTM zone 5S +proj=utm +zone=5 +south +ellps=intl +units=m +no_defs \",\n        2978 : \"+title=IGN72 Nuku Hiva / UTM zone 7S +proj=utm +zone=7 +south +ellps=intl +units=m +no_defs \",\n        2980 : \"+title=Combani 1950 / UTM zone 38S +proj=utm +zone=38 +south +ellps=intl +towgs84=-382,-59,-262,0,0,0,0 +units=m +no_defs \",\n        2981 : \"+title=IGN56 Lifou / UTM zone 58S +proj=utm +zone=58 +south +ellps=intl +units=m +no_defs \",\n        2982 : \"+title=IGN72 Grand Terre / UTM zone 58S (deprecated) +proj=utm +zone=58 +south +ellps=intl +units=m +no_defs \",\n        2984 : \"+title=RGNC 1991 / Lambert New Caledonia (deprecated) +proj=lcc +lat_1=-20.66666666666667 +lat_2=-22.33333333333333 +lat_0=-21.5 +lon_0=166 +x_0=400000 +y_0=300000 +ellps=intl +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        2986 : \"+title=Terre Adelie 1950 +proj=stere +towgs84=324.9120,153.2820,172.0260 +a=6378388.0000 +rf=297.0000000000000 +lat_0=-90.000000000 +lon_0=140.000000000 +lat_ts=-67.000000000 +k=0.96027295 +x_0=300000.000 +y_0=-2299363.482 +units=m +no_defs\",\n        2987 : \"+title=Saint Pierre et Miquelon 1950 / UTM zone 21N +proj=utm +zone=21 +ellps=clrk66 +towgs84=30,430,368,0,0,0,0 +units=m +no_defs \",\n        2989 : \"+title=RRAF 1991 / UTM zone 20N +proj=utm +zone=20 +ellps=WGS84 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        2990 : \"+title=Reunion 1947 / TM Reunion (deprecated) +proj=tmerc +lat_0=-21.11666666666667 +lon_0=55.53333333333333 +k=1 +x_0=50000 +y_0=160000 +ellps=intl +units=m +no_defs \",\n        2995 : \"+title=IGN53 Mare / UTM zone 58S +proj=utm +zone=58 +south +ellps=intl +units=m +no_defs \",\n        3038 : \"+proj=utm +zone=26 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3039 : \"+proj=utm +zone=27 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3040 : \"+proj=utm +zone=28 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3041 : \"+proj=utm +zone=29 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        // 3042 : \"+proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        // 3043 : \"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        // 3044 : \"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3045 : \"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3046 : \"+proj=utm +zone=34 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3047 : \"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3048 : \"+proj=utm +zone=36 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3049 : \"+proj=utm +zone=37 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3050 : \"+proj=utm +zone=38 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3051 : \"+proj=utm +zone=39 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3034 : \"+title=ETRS89 / ETRS-LCC +proj=lcc +lat_1=35 +lat_2=65 +lat_0=52 +lon_0=10 +x_0=4000000 +y_0=2800000 +ellps=GRS80 +units=m +no_defs \",\n        3035 : \"+title=ETRS89 / ETRS-LAEA +proj=laea +lat_0=52 +lon_0=10 +x_0=4321000 +y_0=3210000 +ellps=GRS80 +units=m +no_defs \",\n        3042 : \"+title=ETRS89 / ETRS-TM30 +proj=utm +zone=30 +ellps=GRS80 +units=m +no_defs \",\n        3043 : \"+title=ETRS89 / ETRS-TM31 +proj=utm +zone=31 +ellps=GRS80 +units=m +no_defs \",\n        3044 : \"+title=ETRS89 / ETRS-TM32 +proj=utm +zone=32 +ellps=GRS80 +units=m +no_defs \",\n        25828 : \"+proj=utm +zone=28 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        25829 : \"+proj=utm +zone=29 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        // 25830 : \"+proj=utm +zone=30 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        // 25831 : \"+proj=utm +zone=31 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        // 25832 : \"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        25833 : \"+proj=utm +zone=33 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        25834 : \"+proj=utm +zone=34 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        25835 : \"+proj=utm +zone=35 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        25836 : \"+proj=utm +zone=36 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        25837 : \"+proj=utm +zone=37 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        25838 : \"+proj=utm +zone=38 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3060 : \"+title=IGN72 Grande Terre / UTM zone 58S +proj=utm +zone=58 +south +ellps=intl +units=m +no_defs \",\n        3163 : \"+title=RGNC91-93 / Lambert New Caledonia +proj=lcc +lat_1=-20.66666666666667 +lat_2=-22.33333333333333 +lat_0=-21.5 +lon_0=166 +x_0=400000 +y_0=300000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3164 : \"+title=ST87 Ouvea / UTM zone 58S +proj=utm +zone=58 +south +ellps=WGS84 +towgs84=-56.263,16.136,-22.856,0,0,0,0 +units=m +no_defs \",\n        3165 : \"+title=NEA74 Noumea / Noumea Lambert +proj=lcc +lat_1=-22.24469175 +lat_2=-22.29469175 +lat_0=-22.26969175 +lon_0=166.44242575 +x_0=0.66 +y_0=1.02 +ellps=intl +units=m +no_defs \",\n        3166 : \"+title=NEA74 Noumea / Noumea Lambert 2 +proj=lcc +lat_1=-22.24472222222222 +lat_2=-22.29472222222222 +lat_0=-22.26972222222222 +lon_0=166.4425 +x_0=8.313000000000001 +y_0=-2.354 +ellps=intl +units=m +no_defs \",\n        3169 : \"+title=RGNC91-93 / UTM zone 57S +proj=utm +zone=57 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3170 : \"+title=RGNC91-93 / UTM zone 58S +proj=utm +zone=58 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3171 : \"+title=RGNC91-93 / UTM zone 59S +proj=utm +zone=59 +south +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs \",\n        3172 : \"+title=IGN53 Mare / UTM zone 59S +proj=utm +zone=59 +south +ellps=intl +units=m +no_defs \",\n        3296 : \"+title=RGPF / UTM zone 5S +proj=utm +zone=5 +south +ellps=GRS80 +units=m +no_defs \",\n        3297 : \"+title=RGPF / UTM zone 6S +proj=utm +zone=6 +south +ellps=GRS80 +units=m +no_defs \",\n        3298 : \"+title=RGPF / UTM zone 7S +proj=utm +zone=7 +south +ellps=GRS80 +units=m +no_defs \",\n        3299 : \"+title=RGPF / UTM zone 8S +proj=utm +zone=8 +south +ellps=GRS80 +units=m +no_defs \",\n        3302 : \"+title=IGN63 Hiva Oa / UTM zone 7S +proj=utm +zone=7 +south +ellps=intl +units=m +no_defs \",\n        3303 : \"+title=Fatu Iva 72 / UTM zone 7S +proj=utm +zone=7 +south +ellps=intl +towgs84=347.103,1078.12,2623.92,-33.8875,70.6773,-9.3943,186.074 +units=m +no_defs \",\n        3304 : \"+title=Tahiti 79 / UTM zone 6S +proj=utm +zone=6 +south +ellps=intl +units=m +no_defs \",\n        3305 : \"+title=Moorea 87 / UTM zone 6S +proj=utm +zone=6 +south +ellps=intl +towgs84=215.525,149.593,176.229,-3.2624,-1.692,-1.1571,10.4773 +units=m +no_defs \",\n        3306 : \"+title=Maupiti 83 / UTM zone 5S +proj=utm +zone=5 +south +ellps=intl +towgs84=217.037,86.959,23.956,0,0,0,0 +units=m +no_defs \",\n        3312 : \"+title=CSG67 / UTM zone 21N +proj=utm +zone=21 +ellps=intl +towgs84=-186,230,110,0,0,0,0 +units=m +no_defs \",\n        3313 : \"+title=RGFG95 / UTM zone 21N +proj=utm +zone=21 +ellps=GRS80 +towgs84=2,2,-2,0,0,0,0 +units=m +no_defs \",\n        3336 : \"+title=IGN 1962 Kerguelen / UTM zone 42S +proj=utm +zone=42 +south +ellps=intl +towgs84=145,-187,103,0,0,0,0 +units=m +no_defs \",\n        3395 : \"+title=WGS 84 / World Mercator +proj=merc +lon_0=0 +k=1 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        3727 : \"+title=Reunion 1947 / TM Reunion +proj=tmerc +lat_0=-21.11666666666667 +lon_0=55.53333333333333 +k=1 +x_0=160000 +y_0=50000 +ellps=intl +units=m +no_defs \",\n        21781 : \"+title=CH1903 / LV03 +proj=somerc +lat_0=46.95240555555556 +lon_0=7.439583333333333 +x_0=600000 +y_0=200000 +ellps=bessel +towgs84=674.374,15.056,405.346,0,0,0,0 +units=m +no_defs \",\n        25830 : \"+title=ETRS89 / UTM zone 30N +proj=utm +zone=30 +ellps=GRS80 +units=m +no_defs \",\n        25831 : \"+title=ETRS89 / UTM zone 31N +proj=utm +zone=31 +ellps=GRS80 +units=m +no_defs \",\n        25832 : \"+title=ETRS89 / UTM zone 32N +proj=utm +zone=32 +ellps=GRS80 +units=m +no_defs \",\n        27561 : \"+title=NTF (Paris) / Lambert Nord France +proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27562 : \"+title=NTF (Paris) / Lambert Centre France +proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27563 : \"+title=NTF (Paris) / Lambert Sud France +proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.9998774990000001 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27564 : \"+title=NTF (Paris) / Lambert Corse +proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.9999447100000001 +x_0=234.358 +y_0=185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27571 : \"+title=NTF (Paris) / Lambert zone I +proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=1200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27572 : \"+title=NTF (Paris) / Lambert zone II +proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27573 : \"+title=NTF (Paris) / Lambert zone III +proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.9998774990000001 +x_0=600000 +y_0=3200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27574 : \"+title=NTF (Paris) / Lambert zone IV +proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.9999447100000001 +x_0=234.358 +y_0=4185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27581 : \"+title=NTF (Paris) / France I (deprecated) +proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=1200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27582 : \"+title=NTF (Paris) / France II (deprecated) +proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=2200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27583 : \"+title=NTF (Paris) / France III (deprecated) +proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.9998774990000001 +x_0=600000 +y_0=3200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27584 : \"+title=NTF (Paris) / France IV (deprecated) +proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.9999447100000001 +x_0=234.358 +y_0=4185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27591 : \"+title=NTF (Paris) / Nord France (deprecated) +proj=lcc +lat_1=49.50000000000001 +lat_0=49.50000000000001 +lon_0=0 +k_0=0.999877341 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27592 : \"+title=NTF (Paris) / Centre France (deprecated) +proj=lcc +lat_1=46.8 +lat_0=46.8 +lon_0=0 +k_0=0.99987742 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27593 : \"+title=NTF (Paris) / Sud France (deprecated) +proj=lcc +lat_1=44.10000000000001 +lat_0=44.10000000000001 +lon_0=0 +k_0=0.9998774990000001 +x_0=600000 +y_0=200000 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        27594 : \"+title=NTF (Paris) / Corse (deprecated) +proj=lcc +lat_1=42.16500000000001 +lat_0=42.16500000000001 +lon_0=0 +k_0=0.9999447100000001 +x_0=234.358 +y_0=185861.369 +a=6378249.2 +b=6356515 +towgs84=-168,-60,320,0,0,0,0 +pm=paris +units=m +no_defs \",\n        32601 : \"+proj=utm +zone=1 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32602 : \"+proj=utm +zone=2 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32603 : \"+proj=utm +zone=3 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32604 : \"+proj=utm +zone=4 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32605 : \"+proj=utm +zone=5 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32606 : \"+proj=utm +zone=6 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32607 : \"+proj=utm +zone=7 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32608 : \"+proj=utm +zone=8 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32609 : \"+proj=utm +zone=9 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32610 : \"+proj=utm +zone=10 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32611 : \"+proj=utm +zone=11 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32612 : \"+proj=utm +zone=12 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32613 : \"+proj=utm +zone=13 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32614 : \"+proj=utm +zone=14 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32615 : \"+proj=utm +zone=15 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32616 : \"+proj=utm +zone=16 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32617 : \"+proj=utm +zone=17 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32618 : \"+proj=utm +zone=18 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32619 : \"+proj=utm +zone=19 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32620 : \"+proj=utm +zone=20 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32621 : \"+proj=utm +zone=21 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32622 : \"+proj=utm +zone=22 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32623 : \"+proj=utm +zone=23 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32624 : \"+proj=utm +zone=24 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32625 : \"+proj=utm +zone=25 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32626 : \"+proj=utm +zone=26 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32627 : \"+proj=utm +zone=27 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32628 : \"+proj=utm +zone=28 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32629 : \"+proj=utm +zone=29 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32630 : \"+proj=utm +zone=30 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32631 : \"+proj=utm +zone=31 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32632 : \"+proj=utm +zone=32 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32633 : \"+proj=utm +zone=33 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32634 : \"+proj=utm +zone=34 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32635 : \"+proj=utm +zone=35 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32636 : \"+proj=utm +zone=36 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32637 : \"+proj=utm +zone=37 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32638 : \"+proj=utm +zone=38 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32639 : \"+proj=utm +zone=39 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32640 : \"+proj=utm +zone=40 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32641 : \"+proj=utm +zone=41 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32642 : \"+proj=utm +zone=42 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32643 : \"+proj=utm +zone=43 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32644 : \"+proj=utm +zone=44 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32645 : \"+proj=utm +zone=45 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32646 : \"+proj=utm +zone=46 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32647 : \"+proj=utm +zone=47 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32648 : \"+proj=utm +zone=48 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32649 : \"+proj=utm +zone=49 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32650 : \"+proj=utm +zone=50 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32651 : \"+proj=utm +zone=51 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32652 : \"+proj=utm +zone=52 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32653 : \"+proj=utm +zone=53 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32654 : \"+proj=utm +zone=54 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32655 : \"+proj=utm +zone=55 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32656 : \"+proj=utm +zone=56 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32657 : \"+proj=utm +zone=57 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32658 : \"+proj=utm +zone=58 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32659 : \"+proj=utm +zone=59 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32660 : \"+proj=utm +zone=60 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32661 : \"+proj=stere +lat_0=90 +lat_ts=90 +lon_0=0 +k=0.994 +x_0=2000000 +y_0=2000000 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32662 : \"+title=WGS 84 / Plate Carree +proj=eqc +lat_ts=0 +lon_0=0 +x_0=0 +y_0=0 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32701 : \"+proj=utm +zone=1 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32702 : \"+proj=utm +zone=2 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32703 : \"+proj=utm +zone=3 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32704 : \"+proj=utm +zone=4 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32705 : \"+proj=utm +zone=5 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32706 : \"+proj=utm +zone=6 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32707 : \"+proj=utm +zone=7 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32708 : \"+proj=utm +zone=8 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32709 : \"+proj=utm +zone=9 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32710 : \"+proj=utm +zone=10 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32711 : \"+proj=utm +zone=11 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32712 : \"+proj=utm +zone=12 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32713 : \"+proj=utm +zone=13 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32714 : \"+proj=utm +zone=14 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32715 : \"+proj=utm +zone=15 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32716 : \"+proj=utm +zone=16 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32717 : \"+proj=utm +zone=17 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32718 : \"+proj=utm +zone=18 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32719 : \"+proj=utm +zone=19 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32720 : \"+proj=utm +zone=20 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32721 : \"+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32722 : \"+proj=utm +zone=22 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32723 : \"+proj=utm +zone=23 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32724 : \"+proj=utm +zone=24 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32725 : \"+proj=utm +zone=25 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32726 : \"+proj=utm +zone=26 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32727 : \"+proj=utm +zone=27 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32728 : \"+proj=utm +zone=28 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32729 : \"+proj=utm +zone=29 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32730 : \"+proj=utm +zone=30 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32731 : \"+proj=utm +zone=31 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32732 : \"+proj=utm +zone=32 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32733 : \"+proj=utm +zone=33 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32734 : \"+proj=utm +zone=34 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32735 : \"+proj=utm +zone=35 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32736 : \"+proj=utm +zone=36 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32737 : \"+proj=utm +zone=37 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32738 : \"+proj=utm +zone=38 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32739 : \"+proj=utm +zone=39 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32740 : \"+proj=utm +zone=40 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32741 : \"+proj=utm +zone=41 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32742 : \"+proj=utm +zone=42 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32743 : \"+proj=utm +zone=43 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32744 : \"+proj=utm +zone=44 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32745 : \"+proj=utm +zone=45 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32746 : \"+proj=utm +zone=46 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32747 : \"+proj=utm +zone=47 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32748 : \"+proj=utm +zone=48 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32749 : \"+proj=utm +zone=49 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32750 : \"+proj=utm +zone=50 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32751 : \"+proj=utm +zone=51 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32752 : \"+proj=utm +zone=52 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32753 : \"+proj=utm +zone=53 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32754 : \"+proj=utm +zone=54 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32755 : \"+proj=utm +zone=55 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32756 : \"+proj=utm +zone=56 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32757 : \"+proj=utm +zone=57 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32758 : \"+proj=utm +zone=58 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32759 : \"+proj=utm +zone=59 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32760 : \"+proj=utm +zone=60 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        32761 : \"+proj=stere +lat_0=-90 +lat_ts=-90 +lon_0=0 +k=0.994 +x_0=2000000 +y_0=2000000 +ellps=WGS84 +datum=WGS84 +units=m +no_defs \",\n        310024802 : \"+title=Geoportail - France metropolitaine +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=46.500000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310915814 : \"+title=Geoportail - Antilles francaises +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=15.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310486805 : \"+title=Geoportail - Guyane +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=4.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310700806 : \"+title=Geoportail - Reunion et dependances +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-21.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310702807 : \"+title=Geoportail - Mayotte +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-12.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310706808 : \"+title=Geoportail - Saint-Pierre et Miquelon +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=47.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310547809 : \"+title=Geoportail - Nouvelle-Caledonie +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-22.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310642810 : \"+title=Geoportail - Wallis et Futuna +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.000000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-14.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310032811 : \"+title=Geoportail - Polynesie francaise +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-15.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310642812 : \"+title=Geoportail - Kerguelen +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-49.500000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310642801 : \"+title=Geoportail - Crozet +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-46.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310642813 : \"+title=Geoportail - Amsterdam et Saint-Paul +proj=eqc +nadgrids=null +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-38.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        310642901 : \"+title=Geoportail - Monde +proj=mill +towgs84=0.0000,0.0000,0.0000,0.0000,0.0000,0.0000,0.000000 +a=6378137.0000 +rf=298.2572221010000 +lon_0=0.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        5489 : \"+title=RGAF09 geographiques (dms) +proj=longlat +nadgrids=@null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137 +rf=298.257222101 +units=m +no_defs\",\n        5490 : \"+title=RGAF09 UTM Nord Fuseau 20 +proj=tmerc +nadgrids=@null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137 +rf=298.257222101 +lat_0=0.000000000 +lon_0=-63.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\"\n    },\n    /**\n     * definitions CRS\n     * @enum\n     */\n    CRS : {\n        84 : \"+title=WGS 84 longitude-latitude +proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs \"\n    },\n    /**\n     * definitions IGNF\n     * @enum\n     */\n    IGNF : {\n        AMST63 : \"+title=Amsterdam 1963 +proj=geocent +towgs84=109.753,-528.133,-362.244,0,0,0,0 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        CROZ63 : \"+title=Crozet 1963 +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        CSG67 : \"+title=Guyane CSG67 +proj=geocent +towgs84=-193.0660,236.9930,105.4470,0.4814,-0.8074,0.1276,1.564900 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        ED50 : \"+title=ED50 +proj=geocent +towgs84=-84.0000,-97.0000,-117.0000 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        ETRS89 : \"+title=Systeme de reference terrestre Europeen (1989) +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        GUAD48 : \"+title=Guadeloupe Ste Anne +proj=geocent +towgs84=-472.2900,-5.6300,-304.1200,0.4362,-0.8374,0.2563,1.898400 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        GUADFM49 : \"+title=Guadeloupe Fort Marigot +proj=geocent +towgs84=136.5960,248.1480,-429.7890 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        IGN63 : \"+title=IGN 1963 (Hiva Oa, Tahuata, Mohotani) +proj=geocent +towgs84=410.7210,55.0490,80.7460,-2.5779,-2.3514,-0.6664,17.331100 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        IGN72 : \"+title=IGN 1972 Grande-Terre / Ile des Pins +proj=geocent +towgs84=-11.6400,-348.6000,291.6800 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        KERG62CAR : \"+title=Kerguelen - K0 +proj=geocent +towgs84=144.8990,-186.7700,100.9230 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        MART38 : \"+title=Martinique Fort-Desaix +proj=geocent +towgs84=126.9260,547.9390,130.4090,-2.7867,5.1612,-0.8584,13.822650 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        MAYO50 : \"+title=Mayotte Combani +proj=geocent +towgs84=-599.9280,-275.5520,-195.6650,-0.0835,-0.4715,0.0602,49.281400 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        MOOREA87 : \"+title=Moorea 1987 +proj=geocent +towgs84=215.9820,149.5930,176.2290,3.2624,1.6920,1.1571,10.477300 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        NTF : \"+title=Nouvelle Triangulation Francaise +proj=geocent +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +units=m +no_defs\",\n        NUKU72 : \"+title=IGN 1972 Nuku Hiva +proj=geocent +towgs84=165.7320,216.7200,180.5050,-0.6434,-0.4512,-0.0791,7.420400 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        REUN47 : \"+title=Reunion 1947 +proj=geocent +towgs84=789.5240,-626.4860,-89.9040,0.6006,76.7946,-10.5788,-32.324100 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        RGF93 : \"+title=Reseau geodesique francais 1993 +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGFG95 : \"+title=Reseau geodesique francais de Guyane 1995 +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGM04 : \"+title=RGM04 (Reseau Geodesique de Mayotte 2004) +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGNC : \"+title=Reseau Geodesique de Nouvelle-Caledonie +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGPF : \"+title=RGPF (Reseau Geodesique de Polynesie Francaise) +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGR92 : \"+title=Reseau geodesique Reunion 1992 +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGSPM06 : \"+title=Reseau Geodesique Saint-Pierre-et-Miquelon (2006) +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGTAAF07 : \"+title=Reseau Geodesique des TAAF (2007) +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RRAF91 : \"+title=RRAF 1991 (Reseau de Reference des Antilles Francaises) +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        STPL69 : \"+title=Saint-Paul 1969 +proj=geocent +towgs84=225.571,-346.608,-46.567,0,0,0,0 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        STPM50 : \"+title=St Pierre et Miquelon 1950 +proj=geocent +towgs84=-95.5930,573.7630,173.4420,-0.9602,1.2510,-1.3918,42.626500 +a=6378206.4000 +rf=294.9786982000000 +units=m +no_defs\",\n        TAHAA : \"+title=Raiatea - Tahaa 51-54 (Tahaa, Base Terme Est) +proj=geocent +towgs84=72.4380,345.9180,79.4860,-1.6045,-0.8823,-0.5565,1.374600 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        TAHI79 : \"+title=IGN79 (Tahiti) Iles de la Societe +proj=geocent +towgs84=221.5250,152.9480,176.7680,2.3847,1.3896,0.8770,11.474100 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        TERA50 : \"+title=Pointe Geologie - Perroud 1950 +proj=geocent +towgs84=324.9120,153.2820,172.0260 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        WALL78 : \"+title=Wallis-Uvea 1978 (MOP78) +proj=geocent +towgs84=253.0000,-133.0000,-127.0000 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        WGS72 : \"+title=World Geodetic System 1972 +proj=geocent +towgs84=0.0000,12.0000,6.0000 +a=6378135.0000 +rf=298.2600000000000 +units=m +no_defs\",\n        WGS84 : \"+title=World Geodetic System 1984 +proj=geocent +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        AMST63GEO : \"+title=Amsterdam 1963 +proj=longlat +towgs84=109.753,-528.133,-362.244,0,0,0,0 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        CROZ63GEO : \"+title=Crozet 1963 +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        CSG67GEO : \"+title=Guyane CSG67 +proj=longlat +towgs84=-193.0660,236.9930,105.4470,0.4814,-0.8074,0.1276,1.564900 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        ED50G : \"+title=ED50 +proj=longlat +towgs84=-84.0000,-97.0000,-117.0000 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        GUAD48GEO : \"+title=Guadeloupe Ste Anne +proj=longlat +towgs84=-472.2900,-5.6300,-304.1200,0.4362,-0.8374,0.2563,1.898400 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        GUADFM49GEO : \"+title=Guadeloupe Fort Marigot +proj=longlat +towgs84=136.5960,248.1480,-429.7890 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        IGN63GEO : \"+title=IGN 1963 (Hiva Oa, Tahuata, Mohotani) +proj=longlat +towgs84=410.7210,55.0490,80.7460,-2.5779,-2.3514,-0.6664,17.331100 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        IGN72GEO : \"+title=IGN 1972 Grande-Terre / Ile des Pins +proj=longlat +towgs84=-11.6400,-348.6000,291.6800 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        KERG62GEO : \"+title=Kerguelen - K0 +proj=longlat +towgs84=144.8990,-186.7700,100.9230 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        MART38GEO : \"+title=Martinique Fort-Desaix +proj=longlat +towgs84=126.9260,547.9390,130.4090,-2.7867,5.1612,-0.8584,13.822650 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        MAYO50GEO : \"+title=Mayotte Combani +proj=longlat +towgs84=-599.9280,-275.5520,-195.6650,-0.0835,-0.4715,0.0602,49.281400 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        MOOREA87GEO : \"+title=Moorea 1987 +proj=longlat +towgs84=215.9820,149.5930,176.2290,3.2624,1.6920,1.1571,10.477300 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        NTFG : \"+title=Nouvelle Triangulation Francaise Greenwich degres sexagesimaux +proj=longlat +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +units=m +no_defs\",\n        NTFP : \"+title=Nouvelle Triangulation Francaise Paris grades +proj=longlat +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +units=m +no_defs\",\n        NUKU72GEO : \"+title=IGN 1972 Nuku Hiva +proj=longlat +towgs84=165.7320,216.7200,180.5050,-0.6434,-0.4512,-0.0791,7.420400 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        REUN47GEO : \"+title=Reunion 1947 +proj=longlat +towgs84=789.5240,-626.4860,-89.9040,0.6006,76.7946,-10.5788,-32.324100 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        RGF93G : \"+title=Reseau geodesique francais 1993 +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGFG95GEO : \"+title=Reseau geodesique francais de Guyane 1995 +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGM04GEO : \"+title=RGM04 (Reseau Geodesique de Mayotte 2004) +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGNCGEO : \"+title=Reseau Geodesique de Nouvelle-Caledonie +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGPFGEO : \"+title=RGPF (Reseau Geodesique de Polynesie Francaise) +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGR92GEO : \"+title=Reseau geodesique de la Reunion 1992 +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGSPM06GEO : \"+title=Saint-Pierre-et-Miquelon (2006) +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        RGTAAF07G : \"+title=Reseau Geodesique des TAAF (2007) (dms) +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        STPL69GEO : \"+title=Saint-Paul 1969 +proj=longlat +towgs84=225.571,-346.608,-46.567,0,0,0,0 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        STPM50GEO : \"+title=St Pierre et Miquelon 1950  +proj=longlat +towgs84=-95.5930,573.7630,173.4420,-0.9602,1.2510,-1.3918,42.626500 +a=6378206.4000 +rf=294.9786982000000 +units=m +no_defs\",\n        TAHAAGEO : \"+title=Raiatea - Tahaa 51-54 (Tahaa, Base Terme Est) +proj=longlat +towgs84=72.4380,345.9180,79.4860,-1.6045,-0.8823,-0.5565,1.374600 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        TAHI79GEO : \"+title=IGN79 (Tahiti) Iles de la Societe +proj=longlat +towgs84=221.5250,152.9480,176.7680,2.3847,1.3896,0.8770,11.474100 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        TERA50G : \"+title=Pointe Geologie - Perroud 1950 +proj=longlat +towgs84=324.9120,153.2820,172.0260 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        WALL78GEO : \"+title=Wallis - Uvea 1978 (MOP78) +proj=longlat +towgs84=253.0000,-133.0000,-127.0000 +a=6378388.0000 +rf=297.0000000000000 +units=m +no_defs\",\n        WGS72G : \"+title=WGS72 +proj=longlat +towgs84=0.0000,12.0000,6.0000 +a=6378135.0000 +rf=298.2600000000000 +units=m +no_defs\",\n        WGS84G : \"+title=World Geodetic System 1984 +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        WGS84RRAFGEO : \"+title=Reseau de reference des Antilles francaises (1988-1991) +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        XGEO : \"+title=Systeme CIO-BIH +proj=longlat +towgs84=0.0000,0.0000,0.5000,0.0000,0.0000,0.0140,-0.100000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        AMST63UTM43S : \"+title=Amsterdam 1963 UTM fuseau 43 Sud +proj=tmerc +towgs84=109.753,-528.133,-362.244,0,0,0,0 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=75.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        CROZ63UTM39S : \"+title=Crozet 1963 +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=51.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        CSG67UTM21 : \"+title=Guyane CSG67 UTM fuseau 21 +proj=tmerc +towgs84=-193.0660,236.9930,105.4470,0.4814,-0.8074,0.1276,1.564900 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-57.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        CSG67UTM22 : \"+title=Guyane CSG67 UTM fuseau 22 +proj=tmerc +towgs84=-193.0660,236.9930,105.4470,0.4814,-0.8074,0.1276,1.564900 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-51.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALANF : \"+title=Geoportail - Antilles francaises +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=15.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALASP : \"+title=Geoportail - Amsterdam et Saint-Paul +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-38.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALCRZ : \"+title=Geoportail - Crozet +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-46.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALFXX : \"+title=Geoportail - France metropolitaine +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=46.500000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALGUF : \"+title=Geoportail - Guyane +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=4.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALKER : \"+title=Geoportail - Kerguelen +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-49.500000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALMYT : \"+title=Geoportail - Mayotte +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-12.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALNCL : \"+title=Geoportail - Nouvelle-Caledonie +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-22.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALPYF : \"+title=Geoportail - Polynesie francaise +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-15.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALREU : \"+title=Geoportail - Reunion et dependances +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-21.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALSPM : \"+title=Geoportail - Saint-Pierre et Miquelon +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=47.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GEOPORTALWLF : \"+title=Geoportail - Wallis et Futuna +proj=eqc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=0.000000000 +lat_ts=-14.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        GUAD48UTM20 : \"+title=Guadeloupe Ste Anne +proj=tmerc +towgs84=-472.2900,-5.6300,-304.1200,0.4362,-0.8374,0.2563,1.898400 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-63.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        GUADFM49U20 : \"+title=Guadeloupe Fort Marigot  +proj=tmerc +towgs84=136.5960,248.1480,-429.7890 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-63.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        IGN63UTM7S : \"+title=IGN 1963 - Hiva Oa, Tahuata, Mohotani - UTM fuseau 7 Sud +proj=tmerc +towgs84=410.7210,55.0490,80.7460,-2.5779,-2.3514,-0.6664,17.331100 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-141.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        IGN72UTM58S : \"+title=IGN 1972 - UTM fuseau 58 Sud +proj=tmerc +towgs84=-11.6400,-348.6000,291.6800 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=165.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        KERG62UTM42S : \"+title=Kerguelen 1962 +proj=tmerc +towgs84=144.8990,-186.7700,100.9230 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=69.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        LAMB1 : \"+title=Lambert I +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=49.500000000 +lon_0=0.000000000 +k_0=0.99987734 +lat_1=49.500000000 +x_0=600000.000 +y_0=200000.000 +units=m +no_defs\",\n        LAMB1C : \"+title=Lambert I Carto +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=49.500000000 +lon_0=0.000000000 +k_0=0.99987734 +lat_1=49.500000000 +x_0=600000.000 +y_0=1200000.000 +units=m +no_defs\",\n        LAMB2 : \"+title=Lambert II +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=46.800000000 +lon_0=0.000000000 +k_0=0.99987742 +lat_1=46.800000000 +x_0=600000.000 +y_0=200000.000 +units=m +no_defs\",\n        LAMB2C : \"+title=Lambert II Carto +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=46.800000000 +lon_0=0.000000000 +k_0=0.99987742 +lat_1=46.800000000 +x_0=600000.000 +y_0=2200000.000 +units=m +no_defs\",\n        LAMB3 : \"+title=Lambert III +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=44.100000000 +lon_0=0.000000000 +k_0=0.99987750 +lat_1=44.100000000 +x_0=600000.000 +y_0=200000.000 +units=m +no_defs\",\n        LAMB3C : \"+title=Lambert III Carto +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=44.100000000 +lon_0=0.000000000 +k_0=0.99987750 +lat_1=44.100000000 +x_0=600000.000 +y_0=3200000.000 +units=m +no_defs\",\n        LAMB4 : \"+title=Lambert IV +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=42.165000000 +lon_0=0.000000000 +k_0=0.99994471 +lat_1=42.165000000 +x_0=234.358 +y_0=185861.369 +units=m +no_defs\",\n        LAMB4C : \"+title=Lambert IV Carto +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=42.165000000 +lon_0=0.000000000 +k_0=0.99994471 +lat_1=42.165000000 +x_0=234.358 +y_0=4185861.369 +units=m +no_defs\",\n        LAMB93 : \"+title=Lambert 93 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=46.500000000 +lon_0=3.000000000 +lat_1=44.000000000 +lat_2=49.000000000 +x_0=700000.000 +y_0=6600000.000 +units=m +no_defs\",\n        RGF93CC42 : \"+title=Lambert conique conforme Zone 1 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=42.000000000 +lon_0=3.000000000 +lat_1=41.200000000 +lat_2=42.800000000 +x_0=1700000.000 +y_0=1200000.000 +units=m +no_defs\",\n        RGF93CC43 : \"+title=Lambert conique conforme Zone 2 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=43.000000000 +lon_0=3.000000000 +lat_1=42.200000000 +lat_2=43.800000000 +x_0=1700000.000 +y_0=2200000.000 +units=m +no_defs\",\n        RGF93CC44 : \"+title=Lambert conique conforme Zone 3 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=44.000000000 +lon_0=3.000000000 +lat_1=43.200000000 +lat_2=44.800000000 +x_0=1700000.000 +y_0=3200000.000 +units=m +no_defs\",\n        RGF93CC45 : \"+title=Lambert conique conforme Zone 4 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=45.000000000 +lon_0=3.000000000 +lat_1=44.200000000 +lat_2=45.800000000 +x_0=1700000.000 +y_0=4200000.000 +units=m +no_defs\",\n        RGF93CC46 : \"+title=Lambert conique conforme Zone 5 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=46.000000000 +lon_0=3.000000000 +lat_1=45.200000000 +lat_2=46.800000000 +x_0=1700000.000 +y_0=5200000.000 +units=m +no_defs\",\n        RGF93CC47 : \"+title=Lambert conique conforme Zone 6 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=47.000000000 +lon_0=3.000000000 +lat_1=46.200000000 +lat_2=47.800000000 +x_0=1700000.000 +y_0=6200000.000 +units=m +no_defs\",\n        RGF93CC48 : \"+title=Lambert conique conforme Zone 7 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=48.000000000 +lon_0=3.000000000 +lat_1=47.200000000 +lat_2=48.800000000 +x_0=1700000.000 +y_0=7200000.000 +units=m +no_defs\",\n        RGF93CC49 : \"+title=Lambert conique conforme Zone 8 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=49.000000000 +lon_0=3.000000000 +lat_1=48.200000000 +lat_2=49.800000000 +x_0=1700000.000 +y_0=8200000.000 +units=m +no_defs\",\n        RGF93CC50 : \"+title=Lambert conique conforme Zone 9 +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=50.000000000 +lon_0=3.000000000 +lat_1=49.200000000 +lat_2=50.800000000 +x_0=1700000.000 +y_0=9200000.000 +units=m +no_defs\",\n        LAMBE : \"+title=Lambert II etendu +proj=lcc +nadgrids=ntf_r93.gsb,null +wktext +towgs84=-168.0000,-60.0000,320.0000 +a=6378249.2000 +rf=293.4660210000000 +pm=2.337229167 +lat_0=46.800000000 +lon_0=0.000000000 +k_0=0.99987742 +lat_1=46.800000000 +x_0=600000.000 +y_0=2200000.000 +units=m +no_defs\",\n        MART38UTM20 : \"+title=Martinique Fort-Desaix +proj=tmerc +towgs84=126.9260,547.9390,130.4090,-2.7867,5.1612,-0.8584,13.822650 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-63.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        MAYO50UTM38S : \"+title=Mayotte Combani +proj=tmerc +towgs84=-599.9280,-275.5520,-195.6650,-0.0835,-0.4715,0.0602,49.281400 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=45.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        MILLER : \"+title=Geoportail - Monde +proj=mill +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lon_0=0.000000000 +x_0=0.000 +y_0=0.000 +units=m +no_defs\",\n        MOOREA87U6S : \"+title=Moorea 1987 - UTM fuseau 6 Sud +proj=tmerc +towgs84=215.9820,149.5930,176.2290,3.2624,1.6920,1.1571,10.477300 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-147.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        NUKU72U7S : \"+title=IGN 1972 Nuku Hiva - UTM fuseau 7 Sud +proj=tmerc +towgs84=165.7320,216.7200,180.5050,-0.6434,-0.4512,-0.0791,7.420400 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-141.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        // REUN47GAUSSL : \"+title=Reunion Gauss Laborde +proj=gstmerc +towgs84=789.5240,-626.4860,-89.9040,0.6006,76.7946,-10.5788,-32.324100 +a=6378388.0000 +rf=297.0000000000000 +lat_0=-21.116666667 +lon_0=55.533333333 +k_0=1.00000000 +x_0=160000.000 +y_0=50000.000 +units=m +no_defs\",\n        RGM04UTM38S : \"+title=UTM fuseau 38 Sud (Reseau Geodesique de Mayotte 2004) +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=45.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        RGNCUTM57S : \"+title=Reseau Geodesique de Nouvelle-Caledonie - UTM fuseau 57 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=159.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        RGNCUTM58S : \"+title=Reseau Geodesique de Nouvelle-Caledonie - UTM fuseau 58 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=165.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        RGNCUTM59S : \"+title=Reseau Geodesique de Nouvelle-Caledonie - UTM fuseau 59 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=171.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        RGPFUTM5S : \"+title=RGPF - UTM fuseau 5 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-153.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        RGPFUTM6S : \"+title=RGPF - UTM fuseau 6 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-147.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        RGPFUTM7S : \"+title=RGPF - UTM fuseau 7 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-141.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        RGR92UTM40S : \"+title=RGR92 UTM fuseau 40 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=57.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        RGSPM06U21 : \"+title=Saint-Pierre-et-Miquelon (2006) UTM Fuseau 21 Nord +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-57.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        STPL69UTM43S : \"+title=Saint-Paul 1969 UTM fuseau 43 Sud +proj=tmerc +towgs84=225.571,-346.608,-46.567,0,0,0,0 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=75.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        STPM50UTM21 : \"+title=St Pierre et Miquelon 1950 +proj=tmerc +towgs84=-95.5930,573.7630,173.4420,-0.9602,1.2510,-1.3918,42.626500 +a=6378206.4000 +rf=294.9786982000000 +lat_0=0.000000000 +lon_0=-57.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        TAHAAUTM05S : \"+title=Tahaa 1951 +proj=tmerc +towgs84=72.4380,345.9180,79.4860,-1.6045,-0.8823,-0.5565,1.374600 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-153.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        TAHI51UTM06S : \"+title=Tahiti-Terme Nord UTM fuseau 6 Sud +proj=tmerc +towgs84=162.0000,117.0000,154.0000 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-147.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        TAHI79UTM6S : \"+title=Tahiti 1979 +proj=tmerc +towgs84=221.5250,152.9480,176.7680,2.3847,1.3896,0.8770,11.474100 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-147.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        TERA50STEREO : \"+title=Terre Adelie 1950 +proj=stere +towgs84=324.9120,153.2820,172.0260 +a=6378388.0000 +rf=297.0000000000000 +lat_0=-90.000000000 +lon_0=140.000000000 +lat_ts=-67 +k=0.96027295 +x_0=300000.000 +y_0=-2299363.482 +units=m +no_defs\",\n        UTM01SW84 : \"+title=World Geodetic System 1984 UTM fuseau 01 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-177.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        UTM20W84GUAD : \"+title=World Geodetic System 1984 UTM fuseau 20 Nord-Guadeloupe +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-63.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM20W84MART : \"+title=World Geodetic System 1984 UTM fuseau 20 Nord-Martinique +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-63.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM22RGFG95 : \"+title=RGFG95 UTM fuseau 22 Nord-Guyane +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-51.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM39SW84 : \"+title=World Geodetic System 1984 UTM fuseau 39 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=51.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        UTM42SW84 : \"+title=World Geodetic System 1984 UTM fuseau 42 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=69.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        UTM43SW84 : \"+title=World Geodetic System 1984 UTM fuseau 43 Sud +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=75.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        WALL78UTM1S : \"+title=Wallis-Uvea 1978 (MOP78) UTM 1 SUD +proj=tmerc +towgs84=253.0000,-133.0000,-127.0000 +a=6378388.0000 +rf=297.0000000000000 +lat_0=0.000000000 +lon_0=-177.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=10000000.000 +units=m +no_defs\",\n        ETRS89GEO : \"+title=ETRS89 geographiques (dms) +proj=longlat +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +units=m +no_defs\",\n        ETRS89LAEA : \"+title=ETRS89 Lambert Azimutal Equal Area +proj=laea +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=52.000000000 +lon_0=10.000000000 +x_0=4321000.000 +y_0=3210000.000 +units=m +no_defs\",\n        ETRS89LCC : \"+title=ETRS89 Lambert Conformal Conic +proj=lcc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=52.000000000 +lon_0=9.999999995 +lat_1=35.000000000 +lat_2=65.000000000 +x_0=4000000.000 +y_0=2800000.000 +units=m +no_defs\",\n        UTM26ETRS89 : \"+title=Europe - de 30d a 24d Ouest +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-27.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM27ETRS89 : \"+title=Europe - de 24d a 18d Ouest +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-21.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM28ETRS89 : \"+title=Europe - de 18d a 12d Ouest +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-15.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM29ETRS89 : \"+title=Europe - de 12d a 6d Ouest +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-9.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM30ETRS89 : \"+title=Europe - de -6d a 0d Ouest +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=-3.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM31ETRS89 : \"+title=Europe - de 0d a 6d Est +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=3.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM32ETRS89 : \"+title=Europe - de 6d a 12d Est +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=9.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM33ETRS89 : \"+title=Europe - de 12d a 18d Est +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=15.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM34ETRS89 : \"+title=Europe - de 18d a 24d Est +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=21.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM35ETRS89 : \"+title=Europe - de 24d a 30d Est +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=27.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM36ETRS89 : \"+title=Europe - de 30d a 36d Est +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=33.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM37ETRS89 : \"+title=Europe - de 36d a 42d Est +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=39.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\",\n        UTM38ETRS89 : \"+title=Europe - de 42d a 48d Est +proj=tmerc +nadgrids=null +wktext +towgs84=0.0000,0.0000,0.0000 +a=6378137.0000 +rf=298.2572221010000 +lat_0=0.000000000 +lon_0=45.000000000 +k_0=0.99960000 +x_0=500000.000 +y_0=0.000 +units=m +no_defs\"\n    }\n};\n\nexport default Register;\n","/*\n * FIXME\n * en mode bundle, l'action register des methodes de chargement est executée 2 fois.\n * mais aucun impact sur performance, car le register teste si la projection a été déjà\n * chargé...\n */\n\n// import external\nimport Proj4 from \"proj4\";\n// import OpenLayers\n// import { register } from \"ol/proj/proj4\";\nimport { register } from \"./Proj4\";\nimport {\n    getTransform,\n    addProjection,\n    get as getProjection\n} from \"ol/proj\";\n// import { clear as clearProj } from \"ol/proj/transforms\";\nimport { applyTransform } from \"ol/extent\";\n// import local\nimport Register from \"../Utils/Register\";\nimport Logger from \"../Utils/LoggerByDefault\";\n\nvar logger = Logger.getLogger(\"CRS\");\n\nvar CRS = {\n\n    /**\n    * List of extent projections\n    */\n    projectionsExtent : {\n        \"EPSG:2154\" : {\n            left : -9.62,\n            bottom : 41.18,\n            right : 10.3,\n            top : 51.54\n        },\n        \"EPSG:27572\" : {\n            left : -4.87,\n            bottom : 42.33,\n            right : 8.23,\n            top : 51.14\n        }\n    },\n\n    /**\n    * Load all custom definition projection\n    */\n    load : function () {\n        logger.trace(\"Loading custom definitions projections\");\n        // loading except if it's already loaded...\n        if (!Register.isLoaded) {\n            // load all defs into proj4\n            Register.load(Proj4);\n            try {\n                // register all defs\n                register(Proj4);\n                // Expose proj4 with custom defs into OpenLayers global variable\n                if (window.ol && window.ol.proj && window.ol.proj.proj4) {\n                    window.ol.proj.proj4.register = register;\n                    window.ol.proj.proj4.register(Proj4);\n                }\n            } catch (e) {\n                // FIXME ?\n                logger.error(e);\n                // clearProj();\n            }\n        }\n    },\n\n    /**\n    * Load definition projection by default\n    *\n    * include into proj4 :\n    * - WGS84\n    * - ['EPSG:4326']\n    * - ['EPSG:3785'], ['EPSG:3857'], GOOGLE, ['EPSG:900913'], ['EPSG:102113']\n    * +\n    * - [\"EPSG:2154\"], [\"EPSG:27571\"],  [\"EPSG:27572\"],  [\"EPSG:27573\"],  [\"EPSG:2757\"],\n    * - [\"CRS:84\"],\n    * - [\"IGNF:LAMB93\"],\n    * - [\"IGNF:LAMBE\"], [\"IGNF:LAMB1\"],  [\"IGNF:LAMB2\"],  [\"IGNF:LAMB3\"],  [\"IGNF:LAMB4\"],\n    * - [\"IGNF:RGF93G\"],\n    * - [\"IGNF:WGS84G\"]\n    */\n    loadByDefault : function () {\n        logger.trace(\"Loading custom definitions projections by default\");\n        // loading except if it's already loaded...\n        if (!Register.isLoaded) {\n            // load defs by default into proj4\n            Register.loadByDefault(Proj4);\n            try {\n                // register all defs\n                register(Proj4);\n                // Expose proj4 with custom defs into OpenLayers global variable\n                if (window.ol && window.ol.proj && window.ol.proj.proj4) {\n                    window.ol.proj.proj4.register = register;\n                    window.ol.proj.proj4.register(Proj4);\n                }\n            } catch (e) {\n                // FIXME une projection ne passe pas avec ol.proj/proj4.register()...\n                // on fait quoi ?\n                logger.error(e);\n                // clearProj();\n            }\n        }\n    },\n\n    /**\n    * Load a custom definition projection\n    * @param {String} name - ie. EPSG:2154 (Lambert)\n    */\n    loadByName : function (name) {\n        logger.trace(\"Loading a custom definition projection : \", name);\n        // loading except if it's already loaded...\n        if (!Register.isLoaded) {\n            // load defs by default into proj4\n            Register.loadByName(Proj4, name);\n            try {\n                // register all defs\n                register(Proj4);\n                // Expose proj4 with custom defs into OpenLayers global variable\n                if (window.ol && window.ol.proj && window.ol.proj.proj4) {\n                    window.ol.proj.proj4.register = register;\n                    window.ol.proj.proj4.register(Proj4);\n                }\n            } catch (e) {\n                // FIXME ?\n                logger.error(e);\n                // clearProj();\n            }\n        }\n    },\n\n    /**\n     * Overload OpenLayers ol.proj parameters,\n     * to manage EPSG:2154 extent restriction\n     */\n    overload : function () {\n        logger.trace(\"Loading projections aera (extent)\");\n        for (var code in this.projectionsExtent) {\n            if (this.projectionsExtent.hasOwnProperty(code)) {\n                var extent = this.projectionsExtent[code];\n                var proj = getProjection(code);\n                var fromLonLat = getTransform(\"EPSG:4326\", proj);\n\n                // very approximate calculation of projection extent\n                var _extent = applyTransform([extent.bottom, extent.right, extent.top, extent.left], fromLonLat);\n                proj.setExtent(_extent);\n                addProjection(proj);\n\n                // Expose projection extent with custom defs into OpenLayers global variable\n                if (window.ol && window.ol.proj && window.ol.proj.addProjection) {\n                    window.ol.proj.addProjection(proj);\n                }\n            }\n        }\n    }\n};\n\nexport default CRS;\n\n// Expose proj4 with custom defs into OpenLayers global variable\nif (window.ol && window.ol.proj && window.ol.proj.proj4) {\n    window.ol.proj.proj4.register = register;\n}\n","import CRS from \"./CRS\";\n\n/**\n * Autoload function that loads defs into proj4\n * and adds proj4 defs into ol.\n */\n(function () {\n    // if you want to load all defs into proj4\n    // you can call :\n    //   inside code, CRS.load()\n    // or\n    //   outside code, Gp.olExtended.includeProjections()\n    // but you can call only once...\n\n    // load default defs into proj4\n    CRS.loadByDefault();\n    // and register defs into openlayers\n    CRS.overload();\n})();\n"],"names":["noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","_loggersByName","defaultLogger","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","log","trace","realMethod","undefined","replaceLoggingMethods","level","this","getLevel","i","length","methodFactory","name","debug","levels","SILENT","enableLoggingWhenConsoleArrives","defaultMethodFactory","_level","_loggerName","Logger","factory","inheritedLevel","defaultLevel","userLevel","self","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","cookieName","location","indexOf","exec","slice","clearPersistedLevel","removeItem","normalizeLevel","input","TypeError","setLevel","persist","setDefaultLevel","resetLevel","enableAll","TRACE","disableAll","rebuild","childName","initialLevel","getLogger","logger","_log","noConflict","getLoggers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","hasOwnProperty","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","Math","PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","to_meter","ignoredChar","match","testkey","keys","lkey","toLowerCase","replace","defData","paramName","paramVal","paramOutname","paramObj","split","map","v","trim","filter","reduce","p","push","params","proj","datum","rf","parseFloat","lat_0","lat0","lat_1","lat1","lat_2","lat2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","alpha","gamma","rectified_grid_angle","lonc","longc","x_0","x0","y_0","y0","k_0","k0","k","b","r","r_a","R_A","zone","parseInt","south","utmSouth","towgs84","datum_params","units","unit","from_greenwich","pm","nadgrids","datumCode","axis","legalAxis","substr","approx","getId","node","idNode","find","child","Array","isArray","authority","code","convertUnit","type","conversion_factor","conversionFactor","id","convertAxis","direction","abbreviationMatch","abbreviation","Error","orderNode","order","unitNode","extractAxes","sort","convert","result","base_crs","conversion","csNode","coordinate_system","lengthUnitNode","datumOrEnsembleNode","datumOrEnsemble","datum_ensemble","primem","prime_meridian","longitude","ellipsoid","members","member","accuracyNode","accuracy","ellipsoidNode","semi_major_axis","inverse_flattening","parameters","param","value","sourceCrsNode","sourceCrsContent","source_crs","targetCrsNode","targetCrsContent","target_crs","transformationNode","transformation","scaleDifference","round","forEach","keyword","super","subtype","usage","usageNode","scope","area","bbox","buildPROJJSON","root","version","detectWKT2Version","txt","parser","Parser","output","NEUTRAL","whitespace","latin","endThings","digets","text","place","stack","currentObject","state","mapit","unshift","thing","out","newObj","item","sExpr","shift","readCharicter","char","neutral","quoted","afterquote","number","word","afterItem","pop","newObjects","d2r","applyProjectionDefaults","wkt","normalizedProjName","projName","processUnit","toValue","valueOrObject","calculateEllipsoid","radius","semi_minor_axis","transformPROJJSON","projjson","srsCode","ellps","join","title","paramValue","latitude_of_false_origin","longitude_of_false_origin","latitude_of_standard_parallel","latitude_of_1st_standard_parallel","latitude_of_2nd_standard_parallel","latitude_of_projection_centre","longitude_of_projection_centre","easting_at_false_origin","northing_at_false_origin","latitude_of_natural_origin","longitude_of_natural_origin","longitude_of_origin","false_easting","easting_at_projection_centre","false_northing","northing_at_projection_centre","standard_parallel_1","standard_parallel_2","scale_factor_at_natural_origin","scale_factor_at_projection_centre","scale_factor_on_pseudo_standard_parallel","azimuth","azimuth_at_projection_centre","angle_from_rectified_to_skew_grid","knownTypes","cleanWKT","ii","setPropertiesFromWkt","AUTHORITY","local","PROJECTION","AXIS","axisOrder","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","TOWGS84","isFinite","outName","inName","rename","normalizedWKT","includes","detectWKTVersion","lisp","defs","that","def","charAt","EPSG","ESRI","IAU2000","WGS84","GOOGLE","global","codeWords","codes","testObj","testDef","some","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","destination","source","property","eccent","sinphi","cosphi","con","sqrt","x","abs","sign","phi","com","pow","tan","ts","dphi","eccnth","atan","sin","identity","pt","projs","init","es","cos","msfnz","forward","y","lon","lat","adjust_lon","tsfnz","inverse","exp","phi2z","names","projStore","add","len","start","ellipseName","datums","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","ep2","datum_type","grids","loadedNadgrids","parseNadgridString","optional","mandatory","grid","isNull","secondsToRadians","seconds","decodeString","view","end","String","fromCharCode","Uint8Array","buffer","mapNodes","nodes","longitudeShift","latitudeShift","readGridHeader","offset","isLittleEndian","parent","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","nodesOffset","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","Projection","callback","error","json","parseCode","ourProj","projections","datumDef","Datum","a2","b2","sphere_","ecc","getNadgrids","datumObj","extend","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","z","Infinity","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","genau","X","Y","Z","atan2","checkParams","dest","point","compareDatums","source_a","source_es","applyGridShift","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","Number","NaN","attemptedGrids","outer","subgrids","j","jj","subgrid","epsilon","del","minX","ll","minY","maxX","lim","maxY","applySubgridShift","isNaN","pin","ct","val","tb","t","nadInterpolate","dif","inx","indx","floor","frct","f00","cvs","f10","f11","f01","m11","m10","m00","m01","crs","denorm","xin","yin","zin","array","m","checkCoord","num","transform","enforceAxis","hasZ","toPoint","checkSanity","checkNotWGS","adjust_axis","datum_transform","transformer","from","to","coords","transformedArray","concat","checkProj","oProj","fromProj","toProj","coord","single","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","V","mgrs","UTMtoLL","decode","left","bottom","right","top","utm","seasting","easting","snorthing","northing","zoneNumber","zoneLetter","setParm","get100kSetForZone","setColumn","setRow","column","row","parm","index","colOrigin","charCodeAt","rowOrigin","colInt","rowInt","rollover","encode","eccPrimeSquared","N","T","C","M","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","UTMEasting","UTMNorthing","getLetterDesignator","LLtoUTM","deg","radToDeg","rad","N1","T1","C1","R1","D","LongOrigin","mu","phi1Rad","e1","topRight","LetterDesignator","mgrsString","testChar","hunK","sb","substring","set","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","Point","warn","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","en","sphi","cphi","arg","s","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","c","cs","tq","ml","acos","pj_inv_mlfn","tan_phi","ds","f","g","temp","h","asin","max","min","log1py","hypot","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","cosh","hr","hi1","hr1","hi","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","asinhy","tmp","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","sinc","cosc","cosl","rho","coslat0","sinlat0","cons","ms1","X0","ssfn_","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phit","eccen","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","R","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","E","lam0","pi","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","theta","s45","s90","fi0","alfa","uq","u0","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","dd","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","P00","P01","P02","P10","P11","P20","mode","S_POLE","N_POLE","EQUIT","OBLIQ","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","q","sinb","cosb","cCe","sCe","ab","beta","cosz","sinz","sin_po","cos_po","t1","qs1","t2","qs2","t3","qs0","ns0","qs","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c1","c2","c3","a1","m1","th1","sin_p12","cos_p12","Mlp","Ml","Nl1","Nl","psi","Az","G","GH","Hs","kp","cos_c","s2","s3","s4","cosAz","Ee","sinpsi","FACE_ENUM","AREA_ENUM","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","NODES","poly3_val","coefs","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","degrees","tilt","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","shape","v_x","v_y","v_z","det","v_zp","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","EPS10","e_fwd","am1","e_inv","s_fwd","cphi1","s_inv","defaultDatum","Proj","nadgrid","data","DataView","nFields","detectLittleEndian","header","nSubgridFields","nSubgrids","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","count","readSubgrids","proj4","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","eqearth","bonne","ol","transforms","LoggerByDefault","process","VERBOSE","env","Log","logname","loggers","Gp","register","projCodes","addProjection","axisOrientation","metersPerUnit","code1","proj1","code2","proj2","getTransform","addEquivalentProjections","addCoordinateTransforms","extent","Register","isLoaded","_register","_code","exist","load","Proj4","registers","loadByDefault","CRS","IGNF","LAMB93","LAMBE","LAMB1","LAMB2","LAMB3","LAMB4","RGF93G","WGS84G","loadByName","AMST63","CROZ63","CSG67","ED50","ETRS89","GUAD48","GUADFM49","IGN63","IGN72","KERG62CAR","MART38","MAYO50","MOOREA87","NTF","NUKU72","REUN47","RGF93","RGFG95","RGM04","RGNC","RGPF","RGR92","RGSPM06","RGTAAF07","RRAF91","STPL69","STPM50","TAHAA","TAHI79","TERA50","WALL78","WGS72","AMST63GEO","CROZ63GEO","CSG67GEO","ED50G","GUAD48GEO","GUADFM49GEO","IGN63GEO","IGN72GEO","KERG62GEO","MART38GEO","MAYO50GEO","MOOREA87GEO","NTFG","NTFP","NUKU72GEO","REUN47GEO","RGFG95GEO","RGM04GEO","RGNCGEO","RGPFGEO","RGR92GEO","RGSPM06GEO","RGTAAF07G","STPL69GEO","STPM50GEO","TAHAAGEO","TAHI79GEO","TERA50G","WALL78GEO","WGS72G","WGS84RRAFGEO","XGEO","AMST63UTM43S","CROZ63UTM39S","CSG67UTM21","CSG67UTM22","GEOPORTALANF","GEOPORTALASP","GEOPORTALCRZ","GEOPORTALFXX","GEOPORTALGUF","GEOPORTALKER","GEOPORTALMYT","GEOPORTALNCL","GEOPORTALPYF","GEOPORTALREU","GEOPORTALSPM","GEOPORTALWLF","GUAD48UTM20","GUADFM49U20","IGN63UTM7S","IGN72UTM58S","KERG62UTM42S","LAMB1C","LAMB2C","LAMB3C","LAMB4C","RGF93CC42","RGF93CC43","RGF93CC44","RGF93CC45","RGF93CC46","RGF93CC47","RGF93CC48","RGF93CC49","RGF93CC50","MART38UTM20","MAYO50UTM38S","MILLER","MOOREA87U6S","NUKU72U7S","RGM04UTM38S","RGNCUTM57S","RGNCUTM58S","RGNCUTM59S","RGPFUTM5S","RGPFUTM6S","RGPFUTM7S","RGR92UTM40S","RGSPM06U21","STPL69UTM43S","STPM50UTM21","TAHAAUTM05S","TAHI51UTM06S","TAHI79UTM6S","TERA50STEREO","UTM01SW84","UTM20W84GUAD","UTM20W84MART","UTM22RGFG95","UTM39SW84","UTM42SW84","UTM43SW84","WALL78UTM1S","ETRS89GEO","ETRS89LAEA","ETRS89LCC","UTM26ETRS89","UTM27ETRS89","UTM28ETRS89","UTM29ETRS89","UTM30ETRS89","UTM31ETRS89","UTM32ETRS89","UTM33ETRS89","UTM34ETRS89","UTM35ETRS89","UTM36ETRS89","UTM37ETRS89","UTM38ETRS89","projectionsExtent","overload","getProjection","fromLonLat","_extent","applyTransform","setExtent"],"sourceRoot":""}