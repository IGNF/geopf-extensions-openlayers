{"version":3,"file":"GpfExtOlLegends.js","mappings":"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","sources":["webpack://geoportal-extensions-openlayers/./node_modules/loglevel/lib/loglevel.js","webpack://geoportal-extensions-openlayers/webpack/bootstrap","webpack://geoportal-extensions-openlayers/webpack/runtime/compat get default export","webpack://geoportal-extensions-openlayers/webpack/runtime/define property getters","webpack://geoportal-extensions-openlayers/webpack/runtime/hasOwnProperty shorthand","webpack://geoportal-extensions-openlayers/external assign \"ol.control.Control\"","webpack://geoportal-extensions-openlayers/./src/packages/Controls/Control.js","webpack://geoportal-extensions-openlayers/./src/packages/Utils/Helper.js","webpack://geoportal-extensions-openlayers/./src/packages/Utils/SelectorID.js","webpack://geoportal-extensions-openlayers/./src/packages/Utils/LoggerByDefault.js","webpack://geoportal-extensions-openlayers/./src/packages/Utils/Draggable.js","webpack://geoportal-extensions-openlayers/./src/packages/Controls/Legends/LegendsDOM.js","webpack://geoportal-extensions-openlayers/./src/packages/Controls/Legends/Legends.js"],"sourcesContent":["/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","const __WEBPACK_NAMESPACE_OBJECT__ = ol.control.Control;","import Control from \"ol/control/Control\";\n\nvar ControlExtended = class ControlExtended extends Control {\n\n    constructor (options) {\n        super(options);\n    }\n\n    setPosition (pos) {\n        if (this.getMap()) {\n            var instance = new PositionFactory(this);\n            instance.set(pos);\n        }\n    }\n\n};\n\nexport default ControlExtended;\n\n/**\n * gestion des anchors\n */\nconst ANCHORS = [\n    \"top-left\",\n    \"top-right\",\n    \"bottom-left\",\n    \"bottom-right\"\n];\n\n/**\n * Position\n * @private\n */\nclass PositionFactory {\n\n    /**\n     * constructor\n     * @param {*} caller - ...\n     */\n    constructor (caller) {\n        this.caller = caller;\n        this.container = null;\n\n        this.container = null;\n\n        this.#createContainer(\"top-left\");\n        this.#createContainer(\"top-right\");\n        this.#createContainer(\"bottom-left\");\n        this.#createContainer(\"bottom-right\");\n\n        return this;\n    }\n\n    /**\n     * ...\n     * @param {*} name  - ...\n     * @returns {Boolean} ...\n     */\n    #existContainer (name) {\n        var div = this.container.children[\"position-container-\" + name];\n        if (div) {\n            return true;\n        }\n        return false;\n    }\n\n    /**\n     * ...\n     * @param {*} name - ...\n     * @private\n     */\n    #createContainer (name) {\n        this.container = this.caller.getMap().getOverlayContainerStopEvent();\n        \n        if (this.#existContainer(name)) {\n            return;\n        }\n        // INFO\n        // positionner les classes position-container-[left|right|top|bottom]\n        // ex. { position:relative; height:50px; width:100%; }\n        var div = document.createElement(\"div\");\n        div.id = \"position-container-\" + name;\n        div.className = \"position position-container-\" + name ;\n        \n        this.container.appendChild(div);\n    }\n\n    /**\n     * ...\n     * @param {*} pos - ...\n     * @todo fonctionnement à tester !\n     */\n    #setAnchor (pos) {\n        var self = this;\n        const position = (pos) => {\n            var element = self.container.children[\"position-container-\" + pos];\n            return element.children.length;\n        };\n        const sizeW = (pos) => {\n            var element = self.container.children[\"position-container-\" + pos];\n            var width = element.offsetWidth;\n            return width;\n        };\n        const sizeH = (pos) => {\n            var element = self.container.children[\"position-container-\" + pos];\n            var height = element.offsetHeight;\n            return height;\n        };\n        const clear = (element) => {\n            element.style.top = \"unset\";\n            element.style.bottom = \"unset\";\n            element.style.left = \"unset\";\n            element.style.right = \"unset\";\n        };\n\n        // on supprime le style de positionnement (top, left...) \n        // car on souhaite une nouvelle position\n        clear(this.caller.element);\n        this.caller.element.style.position = \"unset\"; // div.GPwidget\n\n        // on recherche les panneaux (panel) :\n        // * panel de formulaire\n        // * panel de resultats (?)\n        var panels = Array.from(this.caller.element.getElementsByClassName(\"GPpanel\"));\n        if (panels.length === 0) {\n            return;\n        }\n        panels.forEach((panel) => {\n            // INFO\n            // on va eviter de modifier les panneaux de resultats\n            // car leurs positions sont souvent relative aux panneaux\n            // des formulaires\n            if (panel.nodeName.toLowerCase() !== \"dialog\") {\n                return;\n            }\n            clear(panel);\n            // on modifie le positionnement du menu (dialog ou div : panel) \n            // en fonction du bouton\n            // ex. bouton : bottom-left, menu : bottom:0px; left:50px\n            switch (pos.toLowerCase()) {\n                case \"top-left\":\n                    panel.style.top = position(pos) ? sizeH(pos) + \"px\" : \"0px\";\n                    panel.style.left = sizeW(pos) + \"px\";\n                    break;\n                case \"bottom-left\":\n                    panel.style.bottom = position(pos) ? sizeH(pos) + \"px\" : \"0px\";\n                    panel.style.left = sizeW(pos) + \"px\";\n                    break;\n                case \"top-right\":\n                    panel.style.top = position(pos) ? sizeH(pos) + \"px\" : \"0px\";\n                    panel.style.right = sizeW(pos) + \"px\";\n                    break;\n                case \"bottom-right\":\n                    panel.style.bottom = position(pos) ? sizeH(pos) + \"px\" : \"0px\";\n                    panel.style.right = sizeW(pos) + \"px\";\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    /**\n     * ...\n     * @param {*} pos - ...\n     * @public\n     */\n    set (pos) {\n        if (!ANCHORS.includes(pos.toLowerCase())) {\n            return;\n        }\n        // positionnement de l'element\n        this.#setAnchor(pos);\n\n        if (pos.includes(\"bottom\")) {\n            this.container.children[\"position-container-\" + pos].prepend(this.caller.element);\n        } else {\n            this.container.children[\"position-container-\" + pos].appendChild(this.caller.element);\n        }\n    }\n\n};","/**\n* @module Helper\n* @alias module:~utils/HelperUtils\n* @description\n* ...\n*\n* @example\n* import HelperUtils from \"gpf-ext-ol/utils/HelperUtils\"\n* ou \n* import {HelperUtils} from \"gpf-ext-ol\n* \n* HelperUtils.detectSupport();\n* HelperUtils.assign();\n* HelperUtils.mergeParams();\n*/\nvar Helper = {\n\n    /**\n     * this method is called by the constructor.\n     * this information is useful to switch to touch mode.\n     * Detection : test for desktop or tactile\n     *\n     * @function detectSupport\n     * @returns {Boolean} isDesktop - true for desktop userAgent, false for mobile\n     */\n    detectSupport : function () {\n        var isDesktop = true;\n        var userAgent = window.navigator.userAgent.toLowerCase();\n\n        if (userAgent.indexOf(\"iphone\") !== -1 ||\n            userAgent.indexOf(\"ipod\") !== -1 ||\n            userAgent.indexOf(\"ipad\") !== -1 ||\n            userAgent.indexOf(\"android\") !== -1 ||\n            userAgent.indexOf(\"mobile\") !== -1 ||\n            userAgent.indexOf(\"blackberry\") !== -1 ||\n            userAgent.indexOf(\"tablet\") !== -1 ||\n            userAgent.indexOf(\"phone\") !== -1 ||\n            userAgent.indexOf(\"touch\") !== -1) {\n            isDesktop = false;\n        }\n\n        if (userAgent.indexOf(\"msie\") !== -1 ||\n            userAgent.indexOf(\"trident\") !== -1) {\n            isDesktop = true;\n        }\n\n        return isDesktop;\n    },\n\n    /**\n     *  Copies all source object members to dest\n     *\n     * @function assign\n     * @param {Object} dest - destination object where properties and method will be copied\n     * @param {Object} source - source object from which properties and method will be copied\n     * @returns {Object} dest\n     */\n    assign : function (dest, source) {\n        dest = dest || {};\n        for (var prop in source) {\n            if (source.hasOwnProperty(prop)) {\n                dest[prop] = source[prop];\n            }\n        }\n        return dest;\n    },\n\n    /**\n     * Merge two objects parameters (deeper than assign)\n     *\n     * @function mergeParams\n     * @param {Object} dest     - destination object where properties and method will be merge\n     * @param {Object} source   - source object from which properties and method will be merge\n     * @param {Boolean} replace - replace destination value by source if exists or not (true by default)\n     */\n    mergeParams : function (dest, source, replace) {\n        if (typeof dest === \"undefined\" || typeof source === \"undefined\") {\n            return;\n        }\n        if (typeof replace === \"undefined\") {\n            replace = true;\n        }\n        for (var param in source) {\n            if (source.hasOwnProperty(param)) {\n                if (typeof source[param] === \"object\") {\n                    if (dest.hasOwnProperty(param)) {\n                        this.mergeParams(dest[param], source[param], replace);\n                    } else {\n                        dest[param] = source[param];\n                    }\n                } else {\n                    if (dest.hasOwnProperty(param)) {\n                        if (replace) {\n                            dest[param] = source[param];\n                        }\n                    } else {\n                        dest[param] = source[param];\n                    }\n                }\n            }\n        }\n    }\n};\n\nexport default Helper;\n","/**\n * @module SelectorID\n * @alias module:~utils/SelectorID\n * @private\n * @description\n * formalisme d'un tag ID :\n * -> NAME(_ORDER)-1460636385836\n *\n * @example\n * Ex.\n *   GProutePoints-1460636385836\n *   GProutePoint_10-1460636385836\n */\nvar SelectorID = {\n\n    /**\n     * Construction d'un identifiant statique basé sur le timestamp,\n     * et qui s'incremente de +1 à chaque appel\n     * @function generate\n     */\n    generate : (function () {\n        var timestamp = Math.floor(Date.now());\n        return function () {\n            return timestamp++;\n        };\n    })(),\n\n    /**\n     * nom du tag\n     * @function name\n     * @param {String} id - the id\n     * @returns {String} index\n     */\n    name : function (id) {\n        var name = null;\n\n        var i = id.lastIndexOf(\"-\");\n        if (i === -1) {\n            name = id;\n        } else {\n            name = id.substring(0, i);\n        }\n\n        return name;\n    },\n\n    /**\n     * numero d'identifiant du tag\n     *\n     * @function index\n     * @param {String} id - the id\n     * @returns {String} index\n     */\n    index : function (id) {\n        var index = null;\n\n        var name = this.name(id);\n        // if (name !== id) {\n        var i = name.lastIndexOf(\"_\");\n        if (i !== -1) {\n            index = name.substring(i + 1);\n        }\n        // }\n\n        return index;\n    },\n\n    /**\n     * uuid du tag\n     *\n     * @function uuid\n     * @param {String} id - the id\n     * @returns {String} uuid\n     */\n    uuid : function (id) {\n        var uuid = null;\n\n        var i = id.lastIndexOf(\"-\");\n        if (i !== -1) {\n            uuid = parseInt(id.substring(i + 1), 10);\n        }\n\n        return uuid;\n    }\n\n};\n\nexport default SelectorID;\n","import * as Log from \"loglevel\";\n\n/**\n * @module LoggerByDefault\n * @alias module:~utils/Logger\n * @description\n * ...\n *\n * @example\n * import Logger from \"gpf-ext-ol/utils/LoggerByDefault\"\n * ou \n * import {Logger} from \"gpf-ext-ol\n * \n * Logger.getLogger();\n * Logger.disableAll();\n * Logger.enableAll();\n */\nvar LoggerByDefault = {\n    /**\n     * creation d'un logger statique\n     *\n     * @function getLogger\n     * @param {String} [name=\"default\"] - the logger name\n     * @returns {Object} logger\n     */\n    getLogger : function (name) {\n        // on définit process si non défini dans l'environnement\n        if (typeof process === \"undefined\") {\n            var process = {};\n            process.env = {\n                VERBOSE : false\n            };\n        }\n        (process.env.VERBOSE) ? Log.enableAll() : Log.disableAll();\n        var logname = name || \"default\";\n        return Log.getLogger(logname);\n    },\n    /**\n     * desactive tous les loggers\n     * @function disableAll\n     */\n    disableAll : function () {\n        var loggers = Log.getLoggers();\n        for (const key in loggers) {\n            if (Object.hasOwnProperty.call(loggers, key)) {\n                const logger = loggers[key];\n                logger.disableAll();\n            }\n        }\n    },\n    /**\n     * active tous les loggers\n     * @function enableAll\n     */\n    enableAll : function () {\n        var loggers = Log.getLoggers();\n        for (const key in loggers) {\n            if (Object.hasOwnProperty.call(loggers, key)) {\n                const logger = loggers[key];\n                logger.enableAll();\n            }\n        }\n    }\n};\n\nexport default LoggerByDefault;\n","import Logger from \"./LoggerByDefault\";\n\nvar logger = Logger.getLogger(\"draggable\");\n\n/**\n * @module Draggable\n * @alias module:~utils/Draggable\n * @fixme conflit entre la position et le mode draggable\n * @private\n * @description\n * ...\n *\n * @example\n * dragElement();\n */\nvar Draggable = {\n    /**\n    * A draggable HTML element with JavaScript and CSS.\n    *\n    * @function dragElement\n    * @param {DOMElement} element - element\n    * @param {DOMElement} header - header (optional)\n    * @param {DOMElement} container - container (optional)\n    * @see https://www.w3schools.com/howto/howto_js_draggable.asp\n    * @see https://stackoverflow.com/questions/52231588/how-to-constrain-div-drag-space-no-jquery\n    * @example\n    *   // CSS :\n    *       // #element { position: absolute; }\n    *   // HTML :\n    *       // <div id=\"container\">\n    *       //   <div id=\"element\">\n    *       //     <div id=\"header\"/>\n    *       //      <div/> ...\n    *       //     </div>\n    *       //   </div>\n    *       // </div>\n    *   // JS :\n    *       var element = document.getElementById(\"element\");\n    *       Draggable.dragElement(element, header, container);\n    */\n    dragElement : function (element, header, container) {\n        var offsetX, offsetY;\n\n        var isDragReady = false;\n\n        var dragoffset = {\n            x : 0,\n            y : 0\n        };\n\n        if (header) {\n            header.addEventListener(\"mousedown\", dragMouseDown, true);\n        } else {\n            element.addEventListener(\"mousedown\", dragMouseDown, true);\n        }\n\n        // TODO mettre en place les contraintes\n        // var constraints = {};\n        // if (container) {\n        //     constraints = {\n        //         width : container.clientWidth,\n        //         height : container.clientHeight,\n        //         top : container.offsetTop,\n        //         left : container.offsetLeft\n        //     };\n        // }\n\n        function dragMouseDown (e) {\n            e = e || window.event;\n            e.preventDefault();\n\n            isDragReady = true;\n\n            // get the mouse cursor position at startup\n            e._pageX = e._pageX || e.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);\n            e._pageY = e._pageY || e.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);\n            dragoffset.x = e._pageX - element.offsetLeft;\n            dragoffset.y = e._pageY - element.offsetTop;\n\n            document.addEventListener(\"mouseup\", closeDragElement, true);\n            document.addEventListener(\"mousemove\", elementDrag, true);\n        }\n\n        function closeDragElement () {\n            /* stop moving when mouse button is released: */\n            isDragReady = false;\n            document.removeEventListener(\"mouseup\", closeDragElement, true);\n            document.removeEventListener(\"mousemove\", elementDrag, true);\n        }\n\n        function elementDrag (e) {\n            e = e || window.event;\n            // e.preventDefault();\n\n            // cf. https://jsfiddle.net/nbbg08mg/2/\n            if (isDragReady) {\n                e._pageX = e._pageX || e.clientX + (document.documentElement.scrollLeft ? document.documentElement.scrollLeft : document.body.scrollLeft);\n                e._pageY = e._pageY || e.clientY + (document.documentElement.scrollTop ? document.documentElement.scrollTop : document.body.scrollTop);\n\n                var parentLeft = container ? container.offsetLeft : element.parentElement.offsetLeft;\n                var parentTop = container ? container.offsetTop : element.parentElement.parentElement.offsetTop; // hack pas jolie !\n                logger.trace(\"parent offset\", parentLeft, parentTop);\n\n                // left/right constraint\n                if (e._pageX - dragoffset.x < 0 - parentLeft) {\n                    offsetX = 0 - parentLeft;\n                } else if (e._pageX - dragoffset.x + element.clientWidth > document.body.clientWidth) {\n                    offsetX = document.body.clientWidth - element.clientWidth;\n                } else {\n                    offsetX = e._pageX - dragoffset.x;\n                }\n                logger.trace(\"left/right constraint\", offsetX);\n\n                // top/bottom constraint\n                if (e._pageY - dragoffset.y < 0 - parentTop) {\n                    offsetY = 0 - parentTop;\n                } else if (e._pageY - dragoffset.y + element.clientHeight > document.body.clientHeight) {\n                    offsetY = document.body.clientHeight - element.clientHeight;\n                } else {\n                    offsetY = e._pageY - dragoffset.y;\n                }\n                logger.trace(\"top/bottom constraint\", offsetY);\n\n                // set the element's new position:\n                element.style.top = offsetY + \"px\";\n                element.style.bottom = \"unset\";\n                element.style.left = offsetX + \"px\";\n                element.style.right = \"unset\";\n            }\n        }\n    }\n};\n\nexport default Draggable;\n","var LegendsDOM = {\n\n    /**\n    * Add uuid to the tag ID\n    * @param {String} id - id selector\n    * @returns {String} uid - id selector with an unique id\n    */\n    _addUID : function (id) {\n        var uid = (this.uid) ? id + \"-\" + this.uid : id;\n        return uid;\n    },\n\n    /**\n     * Main container (DOM)\n     *\n     * @returns {DOMElement} DOM element\n     */\n    _createMainContainerElement : function () {\n        var container = document.createElement(\"div\");\n        container.id = this._addUID(\"GPlegends\");\n        container.className = \"GPwidget gpf-widget gpf-widget-button\";\n        return container;\n    },\n\n    // ################################################################### //\n    // ################### Methods of main container ##################### //\n    // ################################################################### //\n\n    /**\n     * Show Legends\n     *\n     * @returns {DOMElement} DOM element\n     */\n    _createShowLegendsPictoElement : function () {\n        // contexte d'execution\n        var self = this;\n\n        var button = document.createElement(\"button\");\n        button.id = this._addUID(\"GPshowLegendsPicto\");\n        button.className = \"GPshowOpen GPshowAdvancedToolPicto GPshowLegendsPicto gpf-btn gpf-btn-icon gpf-btn-icon-legends fr-btn\";\n        button.title = \"Afficher les légendes\";\n        button.setAttribute(\"tabindex\", \"0\");\n        button.setAttribute(\"aria-pressed\", false);\n        button.setAttribute(\"type\", \"button\");\n\n        // Close all results and panels when minimizing the widget\n        if (button.addEventListener) {\n            button.addEventListener(\"click\", function (e) {\n                var status = (e.target.ariaPressed === \"true\");\n                e.target.setAttribute(\"aria-pressed\", !status);\n                self.onShowLegendsClick();\n            });\n        } else if (button.attachEvent) {\n            button.attachEvent(\"onclick\", function (e) {\n                var status = (e.target.ariaPressed === \"true\");\n                e.target.setAttribute(\"aria-pressed\", !status);\n                self.onShowLegendsClick();\n            });\n        }\n\n        return button;\n    },\n\n    // ################################################################### //\n    // ################### Methods of panel container #################### //\n    // ################################################################### //\n\n    /**\n     * Create Container Panel\n     *\n     * @returns {DOMElement} DOM element\n     */\n    _createLegendsPanelElement : function () {\n        var dialog = document.createElement(\"dialog\");\n        dialog.id = this._addUID(\"GPlegendsPanel\");\n        dialog.className = \"GPpanel gpf-panel fr-modal\";\n\n        return dialog;\n    },\n\n    _createLegendsPanelDivElement : function () {\n        var div = document.createElement(\"div\");\n        div.className = \"gpf-panel__legends\";\n        return div;\n    },\n\n    /**\n     * Create Header Panel\n     *\n     * @returns {DOMElement} DOM element\n     */\n    _createLegendsPanelHeaderElement : function () {\n        var container = document.createElement(\"div\");\n        container.className = \"gpf-panel__header_legends\";\n        return container;\n    },\n    _createLegendsPanelIconElement : function () {\n        var label = document.createElement(\"label\");\n        label.className = \"gpf-btn-header-legends gpf-btn-icon-header-legends\";\n        label.title = \"Légendes\";\n        return label;\n    },\n    _createLegendsPanelTitleElement : function () {\n        var div = document.createElement(\"div\");\n        div.className = \"gpf-panel__title_legends\";\n        div.innerHTML = \"Légendes\";\n        return div;\n    },\n    _createLegendsPanelCloseElement : function () {\n        // contexte\n        var self = this;\n\n        var btnClose = document.createElement(\"button\");\n        btnClose.className = \"gpf-btn gpf-btn-icon-close fr-btn--close fr-btn fr-btn--tertiary-no-outline fr-m-1w\";\n        btnClose.title = \"Fermer le panneau\";\n\n        // Link panel close / visibility checkbox\n        if (btnClose.addEventListener) {\n            btnClose.addEventListener(\"click\", function () {\n                document.getElementById(self._addUID(\"GPshowLegendsPicto\")).click();\n            }, false);\n        } else if (btnClose.attachEvent) {\n            btnClose.attachEvent(\"onclick\", function () {\n                document.getElementById(self._addUID(\"GPshowLegendsPicto\")).click();\n            });\n        }\n\n        return btnClose;\n    },\n\n    // ################################################################### //\n    // ####################### Methods dynamics ########################## //\n    // ################################################################### //\n    \n    _createLegendElement : function () {\n        var div = document.createElement(\"div\");\n        div.className = \"legends-entries gpf-panel__body fr-modal__body\";\n        return div;\n    },\n\n    _createLegendEntry : function (o) {\n        // Liste des informations :\n        // id  \n        // title  \n        // legends\n        // metadatas\n        // desc\n        // url\n        // partners\n\n        const stringToHTML = (str) => {\n            var support = function () {\n                if (!window.DOMParser) {\n                    return false;\n                }\n                var parser = new DOMParser();\n                try {\n                    parser.parseFromString(\"x\", \"text/html\");\n                } catch (err) {\n                    return false;\n                }\n                return true;\n            };\n    \n            // If DOMParser is supported, use it\n            if (support()) {\n                var parser = new DOMParser();\n                var doc = parser.parseFromString(str, \"text/html\");\n                return doc.body;\n            }\n    \n            // Otherwise, fallback to old-school method\n            var dom = document.createElement(\"div\");\n            dom.innerHTML = str;\n            return dom;\n        };\n        \n        if (o) {\n            if (o.legends && o.legends.length) {\n                var url = o.legends[0].url; // 1ere valeur par defaut\n                var entry = stringToHTML(`\n                    <div \n                        id=\"${o.id}\" \n                        class=\"legend-entry-container gpf-panel__content fr-modal__content\">\n                        <label class=\"legend-entry-title gpf-label-legends-name fr-label\">${o.title}</label>\n                        <button\n                            id=\"GPcollapseLegend_ID_${o.id}\"\n                            class=\"legend-entry-show gpf-btn gpf-btn-icon gpf-btn-icon-legends-collapse fr-btn fr-btn--tertiary gpf-btn--tertiary\"\n                            type=\"button\"\n                            title=\"\"\n                            tabindex=\"0\"\n                            aria-pressed=\"false\"></button>\n                        <div id=\"GPlegend_ID_${o.id}\" class=\"legend-entry-image gpf-hidden\">\n                            <img src=\"${url}\" alt=\"${o.desc}\">\n                        </div>\n                    </div>\n                `);\n                // add event click button\n                var button = entry.firstChild.querySelector(\"button\");\n                if (button) {\n                    button.addEventListener(\"click\", (e) => {\n                        var status = (e.target.ariaPressed === \"true\");\n                        e.target.setAttribute(\"aria-pressed\", !status);\n                        var element = document.getElementById(\"GPlegend_ID_\" + o.id);\n                        (status) ?\n                            element.classList.replace(\"gpf-visible\", \"gpf-hidden\") : element.classList.replace(\"gpf-hidden\", \"gpf-visible\");\n                    });\n                }\n                return entry.firstChild;\n            }\n        }\n    }\n\n};\n\nexport default LegendsDOM;","// import CSS\nimport \"../../CSS/Controls/Legends/GPFlegends.css\";\n\n// import OpenLayers\nimport Control from \"../Control\";\n\n// import local\nimport Utils from \"../../Utils/Helper\";\nimport SelectorID from \"../../Utils/SelectorID\";\nimport Logger from \"../../Utils/LoggerByDefault\";\nimport Draggable from \"../../Utils/Draggable\";\n\n// DOM\nimport LegendsDOM from \"./LegendsDOM\";\n\nvar logger = Logger.getLogger(\"legends\");\n\n/**\n * @classdesc\n *\n * Legends button\n *\n * @constructor\n * @alias ol.control.Legends\n * @param {Object} options - options for function call.\n * \n * @fires legends:add\n * @fires legends:remove\n * @fires legends:modify\n * @example\n * var legends = new ol.control.Legends();\n * map.addControl(legends);\n */\nclass Legends extends Control {\n\n    /**\n     * See {@link ol.control.Legends}\n     * @module Legends\n     * @alias module:~controls/Legends\n     * @param {Object} [options] - options\n     * @example\n     * import Legends from \"gpf-ext-ol/controls/Legends\"\n     * ou \n     * import { Legends } from \"gpf-ext-ol\"\n     */\n    constructor (options) {\n        options = options || {};\n        \n        // call ol.control.Control constructor\n        super({\n            element : options.element,\n            target : options.target,\n            render : options.render\n        });\n\n        if (!(this instanceof Legends)) {\n            throw new TypeError(\"ERROR CLASS_CONSTRUCTOR\");\n        }\n\n        // initialisation du composant\n        this.initialize(options);\n\n        // Widget main DOM container\n        this.container = this.initContainer();\n\n        // ajout du container\n        (this.element) ? this.element.appendChild(this.container) : this.element = this.container;\n\n        return this;\n    }\n\n    // ################################################################### //\n    // ##################### public methods ############################## //\n    // ################################################################### //\n\n    /**\n     * Overwrite OpenLayers setMap method\n     *\n     * @param {ol.Map} map - Map.\n     */\n    setMap (map) {\n        if (map) {\n            // mode \"draggable\"\n            if (this.draggable) {\n                Draggable.dragElement(\n                    this.panelLegendsContainer,\n                    this.panelLegendsHeaderContainer,\n                    this.options.position ? null : map.getTargetElement()\n                );\n            }\n            // mode \"collapsed\"\n            if (!this.collapsed) {\n                this.buttonLegendsShow.setAttribute(\"aria-pressed\", true);\n            }\n            // ajout des legendes déjà sur la carte\n            if (this.auto) {\n                var self = this;\n                map.getLayers().forEach((layer) => {\n                    self.add(layer);\n                });\n            }\n\n            // ajout des evenements sur la carte\n            // pour les futurs ajouts de couche\n            if (this.auto) {\n                this.addEventsListeners(map);\n            }\n        } else {\n            // suppression des evenements sur la carte\n            // pour les futurs suppressions de couche\n            if (this.auto) {\n                this.removeEventsListeners();\n            }\n        }\n\n        // on appelle la méthode setMap originale d'OpenLayers\n        super.setMap(map);\n\n        // position\n        if (this.options.position) {\n            this.setPosition(this.options.position);\n        }\n    }\n\n    // ################################################################### //\n    // ################### getters / setters ############################# //\n    // ################################################################### //\n\n    /**\n     * Get all meta informations of a IGN's layer\n     * \n     * @param {*} layer - layer\n     * @returns {*} informations\n     * @public\n     * @example\n     * getLegends() : \n     * \"legends\" : [\n     *         {\n     *             \"format\" : \"image/jpeg\",\n     *             \"url\" : \"https:*data.geopf.fr/annexes/ressources/legendes/LEGEND.jpg\",\n     *             \"minScaleDenominator\" : \"200\"\n     *         }\n     *     ],\n     */\n    getMetaInformations (layer) {\n        // INFO\n        // condition pour être une couche issue du catalogue IGN\n        if (layer.hasOwnProperty(\"name\")) {\n            return {\n                id : layer.name,\n                title : layer.getTitle(),\n                legends : layer.getLegends(),\n                metadatas : layer.getMetadata(),\n                desc : layer.getDescription(),\n                url : layer.getQuicklookUrl(),\n                partners : layer.getOriginators()\n            };\n        }\n        return;\n    }\n\n    /**\n     * Add legends from layers \n     * @param {*} layers  - ...\n     * @public\n     */\n    adds (layers) {\n        if (layers) {\n            for (let index = 0; index < layers.length; index++) {\n                if (!this.add(layer)) {\n                    continue;\n                }\n            }\n        }\n    }\n\n    /**\n     * Add a legend from a layer\n     * @param {*} layer  - ...\n     * @returns {Boolean} - true|false\n     * @public\n     */\n    add (layer) {\n        if (layer) {\n            var entry = this._createLegendEntry(this.getMetaInformations(layer));\n            if (entry) {\n                if (this.exist(entry)) {\n                    return false;\n                }\n                this.panelLegendsEntriesContainer.prepend(entry);\n                this.legends.push({\n                    obj : layer,\n                    dom : entry\n                });\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Remove a legend from a layer\n     * @param {*} layer - ...\n     * @returns  {Boolean} - true|false\n     * @public\n     */\n    remove (layer) {\n        var found = false;\n        if (layer) {\n            for (let i = 0; i < this.legends.length; i++) {\n                const legend = this.legends[i];\n                if (layer.name === legend.obj.name &&\n                    layer.service === legend.obj.service\n                ) {\n                    if (legend.dom) {\n                        this.legends[i].dom.remove();\n                    }\n                    this.legends.splice(i, 1);\n                    found = true;\n                    break;\n                }\n            }\n        }\n        return found;\n    }\n\n    /**\n     * Has already a DOM legend\n     * @param {*} dom  - ...\n     * @returns {Boolean} - true|false\n     * @public\n     */\n    exist (dom) {\n        var found = false;\n        for (let i = 0; i < this.legends.length; i++) {\n            const legend = this.legends[i];\n            if (legend.dom.id === dom.id) {\n                found = true;\n                break;\n            }\n        }\n        return found;\n    }\n\n    // ################################################################### //\n    // #################### privates methods ############################# //\n    // ################################################################### //\n    \n    /**\n     * Initialize Legends control (called by Legends constructor)\n     *\n     * @param {Object} options - constructor options\n     * @private\n     */\n    initialize (options) {\n        this.uid = SelectorID.generate();\n\n        // set default options\n        this.options = {\n            collapsed : true,\n            draggable : false,\n            auto : true,\n            panel : false\n        };\n\n        // merge with user options\n        Utils.assign(this.options, options);\n\n        /** {Boolean} specify if control is collapsed (true) or not (false) */\n        this.collapsed = this.options.collapsed;\n\n        /** {Boolean} specify if control is draggable (true) or not (false) */\n        this.draggable = this.options.draggable;\n\n        /** {Boolean} specify if control add layers auto */\n        this.auto = this.options.auto;\n\n        this.buttonLegendsShow = null;\n        this.panelLegendsContainer = null;\n        this.panelLegendsEntriesContainer = null; // c'est là où on ajoute nos entrées legendes !\n        this.panelLegendsHeaderContainer = null; // c'est pour le dragNdrop\n        this.buttonLegendsClose = null; // utile ?\n\n        this.eventsListeners = [];\n\n        // tableau des entrées des legendes\n        // ex. \n        // { \n        //   obj: layer openlayers,\n        //   dom: DOMElement\n        // }\n        this.legends = [];\n    }\n\n    /**\n     * Create control main container (DOM initialize)\n     *\n     * @returns {DOMElement} DOM element\n     * @private\n     */\n    initContainer () {\n        // create main container\n        var container = this._createMainContainerElement();\n\n        var picto = this.buttonLegendsShow = this._createShowLegendsPictoElement();\n        container.appendChild(picto);\n\n        // panel\n        var legendsPanel = this.panelLegendsContainer = this._createLegendsPanelElement();\n        var legendsPanelDiv = this._createLegendsPanelDivElement();\n        legendsPanel.appendChild(legendsPanelDiv);\n\n        var legendsEntriesDiv = this.panelLegendsEntriesContainer = this._createLegendElement();\n        legendsPanel.appendChild(legendsEntriesDiv);\n\n\n        // header ?\n        if (this.options.panel) {\n            var legendsPanelHeader = this.panelLegendsHeaderContainer = this._createLegendsPanelHeaderElement();\n            // icone\n            var legendsPanelIcon = this._createLegendsPanelIconElement();\n            legendsPanelHeader.appendChild(legendsPanelIcon);\n            // title\n            var legendsPanelTitle = this._createLegendsPanelTitleElement();\n            legendsPanelHeader.appendChild(legendsPanelTitle);\n            // close picto\n            var legendsCloseBtn = this.buttonLegendsClose = this._createLegendsPanelCloseElement();\n            legendsPanelHeader.appendChild(legendsCloseBtn);\n            legendsPanelDiv.appendChild(legendsPanelHeader);\n        }\n\n        container.appendChild(legendsPanel);\n\n        logger.log(container);\n\n        return container;\n    }\n\n    /**\n     * Add events listeners on map (called by setMap)\n     * \n     * @param {*} map - map\n     * @private\n     * @todo listener on change:position\n     */\n    addEventsListeners (map) {\n        var self = this;\n        this.eventsListeners[\"layer:add\"] = function (e) {\n            logger.trace(e);\n            // INFO\n            // à l'ajout d'une couche, on ajoute l'entrée\n            // * dans le DOM\n            // * dans la liste des entrées\n            // un test est à realiser pour savoir si cette couche possède\n            // des meta informations, sinon, on placera une legende par defaut :\n            // > pas de légende disponible (au format texte)\n            if (!self.add(e.element)) {\n                logger.error(\"Layer already added...\");\n                return;\n            }\n        };\n        this.eventsListeners[\"layer:remove\"] = function (e) {\n            logger.trace(e);\n            // INFO\n            // à la suppression de la couche, on supprime l'entrée \n            // * du DOM\n            // * de la liste des entrées\n            if (!self.remove(e.element)) {\n                logger.error(\"Layer already removed...\");\n                return;\n            }\n        };\n        this.eventsListeners[\"layer:change:position\"] = function (e) {\n            logger.trace(e);\n            // TODO\n            // à la modification de l'ordre de la couche, on modifie l'entrée \n            // * du DOM\n            // * de la liste des entrées\n        };\n        this.eventsListeners[\"view:change:resolution\"] = function (e) {\n            logger.trace(e);\n            // à la modification de l'echelle de la carte, on modifie les entrées \n            // * du DOM si necessaire\n            // * de la liste des entrées si necessaire\n            var map = self.getMap();\n            for (let j = 0; j < self.legends.length; j++) {\n                const legend = self.legends[j];\n                \n                var infos = self.getMetaInformations(legend.obj);\n                if (!infos) {\n                    continue;\n                }\n                // conversion resolution vers échelle\n                var resolution = map.getView().getResolution() || map.getView().getResolutionForZoom(map.getZoom());\n                var scaleDenominator = resolution*3570;\n                \n                // recherche de la legende en fonction de l'échelle\n                var cloneInfoLegends = infos.legends.slice(); //clone\n                var bestInfoLegend = cloneInfoLegends[0];\n                for (let i = 0; i < cloneInfoLegends.length; ++i) {\n                    const InfoLegend = cloneInfoLegends[i];\n                    \n                    if (!InfoLegend.minScaleDenominator) {\n                        InfoLegend.minScaleDenominator = 0;\n                    }\n    \n                    if ( ( scaleDenominator > bestInfoLegend.minScaleDenominator && InfoLegend.minScaleDenominator > bestInfoLegend.minScaleDenominator && InfoLegend.minScaleDenominator < scaleDenominator ) ||\n                         ( scaleDenominator < bestInfoLegend.minScaleDenominator && InfoLegend.minScaleDenominator < bestInfoLegend.minScaleDenominator ) ) {\n                        bestInfoLegend = InfoLegend;\n                    }\n                }\n                // si pas de changement, on ne met pas à jour de DOM\n                if (infos.legends[0] === bestInfoLegend) {\n                    continue;\n                }\n                infos.legends = [];\n                infos.legends.push(bestInfoLegend);\n    \n                // mise à jour du DOM\n                var newEntry = self._createLegendEntry(infos);\n                var oldEntry = legend.dom;\n                oldEntry.replaceWith(newEntry);\n\n                // mise à jour de l'entrée\n                legend.dom = newEntry;\n            }\n        };\n\n        map.getLayers().on(\"add\", this.eventsListeners[\"layer:add\"]);\n        map.getLayers().on(\"remove\", this.eventsListeners[\"layer:remove\"]);\n        map.getLayers().on(\"change:zIndex\", this.eventsListeners[\"layer:change:position\"]);\n        map.getView().on(\"change:resolution\", this.eventsListeners[\"view:change:resolution\"]);\n    }\n\n    /**\n     * Remove events listeners on map (called by setMap)\n     * @private\n     */\n    removeEventsListeners () {\n        var map = this.getMap();\n        map.getLayers().un(\"add\", this.eventsListeners[\"layer:add\"]);\n        map.getLayers().un(\"remove\", this.eventsListeners[\"layer:remove\"]);\n        map.getLayers().un(\"change:zIndex\", this.eventsListeners[\"layer:change:position\"]);\n        map.getView().un(\"change:resolution\", this.eventsListeners[\"view:change:resolution\"]);\n        delete this.eventsListeners[\"layer:add\"];\n        delete this.eventsListeners[\"layer:remove\"];\n        delete this.eventsListeners[\"layer:change:position\"];\n        delete this.eventsListeners[\"view:change:resolution\"];\n    }\n\n    // ################################################################### //\n    // ######################## event dom ################################ //\n    // ################################################################### //\n    /**\n     * ...\n     * @param {*} e - ...\n     */\n    onShowLegendsClick (e) {\n        logger.trace(e);\n    }\n\n};\n\n// on récupère les méthodes de la classe DOM\nObject.assign(Legends.prototype, LegendsDOM);\n\nexport default Legends;\n\n// Expose Export as ol.control.Legends (for a build bundle)\nif (window.ol && window.ol.control) {\n    window.ol.control.Legends = Legends;\n}\n"],"names":["noop","undefinedType","isIE","window","navigator","test","userAgent","logMethods","_loggersByName","defaultLogger","bindMethod","obj","methodName","method","bind","Function","prototype","call","e","apply","arguments","traceForIE","console","log","trace","realMethod","undefined","replaceLoggingMethods","level","this","getLevel","i","length","methodFactory","name","debug","levels","SILENT","enableLoggingWhenConsoleArrives","defaultMethodFactory","_level","_loggerName","Logger","factory","inheritedLevel","defaultLevel","userLevel","self","storageKey","persistLevelIfPossible","levelNum","levelName","toUpperCase","localStorage","ignore","document","cookie","encodeURIComponent","getPersistedLevel","storedLevel","cookieName","location","indexOf","exec","slice","clearPersistedLevel","removeItem","normalizeLevel","input","TypeError","setLevel","persist","setDefaultLevel","resetLevel","enableAll","TRACE","disableAll","rebuild","childName","initialLevel","getLogger","logger","_log","noConflict","getLoggers","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","prop","hasOwnProperty","ol","control","Control","_Control","ControlExtended","options","_classCallCheck","_callSuper","_inherits","_createClass","value","pos","getMap","PositionFactory","set","ANCHORS","_PositionFactory_brand","WeakSet","caller","_classPrivateMethodInitSpec","container","_assertClassBrand","_createContainer","includes","toLowerCase","_setAnchor","children","prepend","element","appendChild","_existContainer","getOverlayContainerStopEvent","div","createElement","id","className","position","sizeW","offsetWidth","sizeH","offsetHeight","clear","style","top","bottom","left","right","panels","Array","from","getElementsByClassName","forEach","panel","nodeName","detectSupport","isDesktop","assign","dest","source","mergeParams","replace","param","_typeof","timestamp","generate","Math","floor","Date","now","lastIndexOf","substring","index","uuid","parseInt","process","VERBOSE","env","Log","logname","loggers","dragElement","header","offsetX","offsetY","isDragReady","dragoffset","x","y","dragMouseDown","event","preventDefault","_pageX","clientX","documentElement","scrollLeft","body","_pageY","clientY","scrollTop","offsetLeft","offsetTop","addEventListener","closeDragElement","elementDrag","removeEventListener","parentLeft","parentElement","parentTop","clientWidth","clientHeight","_addUID","uid","_createMainContainerElement","_createShowLegendsPictoElement","button","title","setAttribute","status","target","ariaPressed","onShowLegendsClick","attachEvent","_createLegendsPanelElement","dialog","_createLegendsPanelDivElement","_createLegendsPanelHeaderElement","_createLegendsPanelIconElement","label","_createLegendsPanelTitleElement","innerHTML","_createLegendsPanelCloseElement","btnClose","getElementById","click","_createLegendElement","_createLegendEntry","legends","url","entry","str","DOMParser","parser","parseFromString","err","support","dom","stringToHTML","concat","desc","firstChild","querySelector","classList","Legends","_this","render","initialize","initContainer","_possibleConstructorReturn","map","draggable","Draggable","panelLegendsContainer","panelLegendsHeaderContainer","getTargetElement","collapsed","buttonLegendsShow","auto","getLayers","layer","add","addEventsListeners","removeEventsListeners","_get","_getPrototypeOf","setPosition","getTitle","getLegends","metadatas","getMetadata","getDescription","getQuicklookUrl","partners","getOriginators","layers","getMetaInformations","exist","panelLegendsEntriesContainer","push","found","legend","service","remove","splice","SelectorID","Utils","buttonLegendsClose","eventsListeners","picto","legendsPanel","legendsPanelDiv","legendsEntriesDiv","legendsPanelHeader","legendsPanelIcon","legendsPanelTitle","legendsCloseBtn","error","j","infos","scaleDenominator","getView","getResolution","getResolutionForZoom","getZoom","cloneInfoLegends","bestInfoLegend","InfoLegend","minScaleDenominator","newEntry","replaceWith","on","un","LegendsDOM"],"sourceRoot":""}