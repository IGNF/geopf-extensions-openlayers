{"version":3,"file":"GeoportalAttribution.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAIA,UAAU,GAAG;EAEb;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,gCAAgC,EAAG,SAAAA,iCAAUC,gBAAgB,EAAEC,GAAG,EAAE;IAChE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACA;IACA,IAAIC,kBAAkB,GAAG,CAAC,CAAC;IAC3B,QAAQD,GAAG;MACP,KAAK,WAAW;QACZC,kBAAkB,GAAG;UACjB,CAAC,EAAG,gBAAgB;UACpB,CAAC,EAAG,gBAAgB;UACpB,CAAC,EAAG,gBAAgB;UACpB,CAAC,EAAG,aAAa;UACjB,CAAC,EAAG,eAAe;UACnB,CAAC,EAAG,eAAe;UACnB,CAAC,EAAG,eAAe;UACnB,CAAC,EAAG,aAAa;UACjB,CAAC,EAAG,cAAc;UAClB,CAAC,EAAG,cAAc;UAClB,EAAE,EAAG,cAAc;UACnB,EAAE,EAAG,aAAa;UAClB,EAAE,EAAG,aAAa;UAClB,EAAE,EAAG,aAAa;UAClB,EAAE,EAAG,WAAW;UAChB,EAAE,EAAG,YAAY;UACjB,EAAE,EAAG,YAAY;UACjB,EAAE,EAAG,YAAY;UACjB,EAAE,EAAG,YAAY;UACjB,EAAE,EAAG,YAAY;UACjB,EAAE,EAAG,YAAY;UACjB,EAAE,EAAG;QACT,CA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E,IAAI,CAACJ,OAAO,EAAEE,GAAG,CAAC,EAAE;QAC1C,IAAMG,MAAM,GAAGL,OAAO,CAACE,GAAG,CAAC;QAC3BG,MAAM,CAACP,UAAU,CAAC,CAAC;MACvB;IACJ;EACJ,CAAC;EACD;AACJ;AACA;AACA;EACID,SAAS,EAAG,SAAAA,UAAA,EAAY;IACpB,IAAIG,OAAO,GAAGT,gDAAc,CAAC,CAAC;IAC9B,KAAK,IAAMW,GAAG,IAAIF,OAAO,EAAE;MACvB,IAAIG,MAAM,CAACrE,cAAc,CAACsE,IAAI,CAACJ,OAAO,EAAEE,GAAG,CAAC,EAAE;QAC1C,IAAMG,MAAM,GAAGL,OAAO,CAACE,GAAG,CAAC;QAC3BG,MAAM,CAACR,SAAS,CAAC,CAAC;MACtB;IACJ;EACJ;AACJ,CAAC;AAED,iEAAeL,eAAe;;;;;;;;;;ACjE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,IAA0C;AAClD,QAAQ,oCAAO,UAAU;AAAA;AAAA;AAAA;AAAA,kGAAC;AAC1B,MAAM,KAAK,EAIN;AACL,CAAC;AACD;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA,UAAU;AACV;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA,wBAAwB,uBAAuB;AAC/C;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA,qEAAqE;AACrE,YAAY;AACZ;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C;AACA;AACA;AACA,gBAAgB;AAChB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY;;AAEZ;AACA;AACA;AACA,qDAAqD;AACrD,YAAY;AACZ;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,sBAAsB;AACtB;;AAEA;;AAEA;AACA;AACA;AACA,YAAY;AACZ;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,oCAAoC;AACpC;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA,CAAC;;;;;;;;;;;;;ACpWD;;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UA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","sources":["webpack://geoportal-extensions-openlayers/./src/packages/Utils/LayerUtils.js","webpack://geoportal-extensions-openlayers/./src/packages/Utils/LoggerByDefault.js","webpack://geoportal-extensions-openlayers/./node_modules/loglevel/lib/loglevel.js","webpack://geoportal-extensions-openlayers/./src/packages/CSS/Controls/Attribution/GPFattribution.css","webpack://geoportal-extensions-openlayers/external var \"ol.control.Attribution\"","webpack://geoportal-extensions-openlayers/external var \"ol.proj\"","webpack://geoportal-extensions-openlayers/webpack/bootstrap","webpack://geoportal-extensions-openlayers/webpack/runtime/compat get default export","webpack://geoportal-extensions-openlayers/webpack/runtime/define property getters","webpack://geoportal-extensions-openlayers/webpack/runtime/hasOwnProperty shorthand","webpack://geoportal-extensions-openlayers/webpack/runtime/make namespace object","webpack://geoportal-extensions-openlayers/./src/packages/Controls/Attribution/GeoportalAttribution.js"],"sourcesContent":["/**\n* @module LayerUtils\n* @alias module:~utils/LayerUtils\n* @description\n* ...\n*\n* @example\n* import LayerUtils from \"gpf-ext-ol/utils/LayerUtils\"\n* ou \n* import {LayerUtils} from \"gpf-ext-ol\n\n* LayerUtils.getZoomLevelFromScaleDenominator();\n* LayerUtils.getAttributions();\n* LayerUtils.intersects();\n*/\nvar LayerUtils = {\n\n    /**\n     * Obtenir le ZoomLevel à partir du ScaleDenominator\n     * @function getZoomLevelFromScaleDenominator\n     * @param {Number} scaleDenominator - the scale denominator\n     * @param {String} crs - the crs\n     *\n     * @returns {Integer} zoom level\n     */\n    getZoomLevelFromScaleDenominator : function (scaleDenominator, crs) {\n        // ------------------------------------------------- //\n        // Code issu de l'API Geoportal/Catalogue/Config.js  //\n        // ------------------------------------------------- //\n        //     var configuration = Gp.Config;\n        //     var general = configuration.generalOptions;\n        //     var layers  = configuration.layersContext;\n        //\n        //     for (var tms in general.tileMatrixSets) {\n        //         var tileMatrixSet = general.tileMatrixSets[tms];\n        //         // IGN's WMTS bug : epsg:nnnn instead of EPSG:nnnn\n        //         var crs = tileMatrixSet.supportedCRS = tileMatrixSet.supportedCRS.replace(/epsg/,\"EPSG\");\n        //\n        //         if (!Geoportal.Catalogue.CRSRESOLUTIONS.hasOwnProperty(crs)) {\n        //             var p= new OpenLayers.Projection(crs);\n        //             Geoportal.Catalogue.CRSRESOLUTIONS[crs]= [];\n        //             var matrixIds= tileMatrixSet.matrixIds;\n        //             for (var i= 0, li= matrixIds.length; i<li; ++i) {\n        //                 var mid= matrixIds[i];\n        //                 Geoportal.Catalogue.CRSRESOLUTIONS[crs].push(\n        //                     0.00028*mid.scaleDenominator\n        //                     /(OpenLayers.METERS_PER_INCH*OpenLayers.INCHES_PER_UNIT[p.getUnits()]));\n        //                     mid.supportedCRS= mid.supportedCRS.replace(/epsg/,\"EPSG\");\n        //                 }\n        //                 Geoportal.Catalogue.CRSRESOLUTIONS[crs].sort(function (a,b){ return b-a; });\n        //             }\n        //         }\n        //         var llR= Geoportal.Catalogue.CRSRESOLUTIONS['CRS:84'];\n        //         if (!llR) {\n        //             llR= Geoportal.Catalogue.CRSRESOLUTIONS['CRS:84']= general.resolutions.slice();\n        //         }\n        //         var wmR= Geoportal.Catalogue.CRSRESOLUTIONS['EPSG:3857'];\n        //         if (!wmR) {//FIXME : should never happened !!\n        //             // reproject resolutions from CRS84 to WebMercator (transform resolutions from degree/px to meter/px)\n        //             wmR= Geoportal.Catalogue.CRSRESOLUTIONS['EPSG:3857']= new Array(llR.length);\n        //             for (var i= 0, len= llR.length; i<len; i++) {\n        //                 var pt= new OpenLayers.LonLat(llR[i], 0);\n        //                 pt.transform(OpenLayers.Projection.CRS84, OpenLayers.Projection.WebMercator);\n        //                 wmR[i]= pt.lon;\n        //             }\n        //         }\n        //         Geoportal.Catalogue.RESOLUTIONS= wmR;\n        //\n        //         var getResolutionsFromCRS= function(crs) {\n        //             if (OpenLayers.Projection.WebMercator.isAliasOf(crs)) {\n        //                 return wmR;\n        //             }\n        //             if (OpenLayers.Projection.CRS84.isAliasOf(crs)) {\n        //                 return llR;\n        //             }\n        //             return Geoportal.Catalogue.CRSRESOLUTIONS[crs]?Geoportal.Catalogue.CRSRESOLUTIONS[crs]:null ;\n        //         };\n        //\n        //         var retrieveZoomFromResolution= function(resolutions, resolution) {\n        //             for (var i= 0, li= resolutions.length; i<li; i++) {\n        //                 if (resolutions[i]-resolution <= resolutions[li-1]) {\n        //                     return i;\n        //                 }\n        //             }\n        //             return -1;\n        //         };\n        //\n        //         var getZoomLevelFromScaleDenominator= function(scaleDenominator,crs) {\n        //             var resolution= scaleDenominator * 0.00028;\n        //             var R= getResolutionsFromCRS(crs);\n        //             if (R) {\n        //                 return retrieveZoomFromResolution(R,resolution);\n        //             }\n        //             resolution= resolution/(OpenLayers.METERS_PER_INCH * OpenLayers.INCHES_PER_UNIT[\"degrees\"]);\n        //             return retrieveZoomFromResolution(llR,resolution);\n        //         };\n        //\n        //         var getZoomLevelFromResolution= function(resolution,crs){\n        //             var R= getResolutionsFromCRS(crs);\n        //             if (R) {\n        //                 return retrieveZoomFromResolution(R,resolution);\n        //             }\n        //             var pt0= new OpenLayers.LonLat(0, 0);\n        //             var pt1= new OpenLayers.LonLat(1, 0);\n        //             pt0.transform(new OpenLayers.Projection(crs),OpenLayers.Projection.CRS84);\n        //             pt1.transform(new OpenLayers.Projection(crs),OpenLayers.Projection.CRS84);\n        //             resolution= resolution*(Math.abs(pt1.lon-pt0.lon));\n        //             return retrieveZoomFromResolution(llR,resolution);\n        //         };\n\n        // par defaut, on utilise la projection WebMercator (EPSG:3857 = PM)\n        // soit la liste des resolutions natives\n        var resolutionsNatives = {};\n        switch (crs) {\n            case \"EPSG:2154\":\n                resolutionsNatives = {\n                    0 : 104579.224549894,\n                    1 : 52277.5323537905,\n                    2 : 26135.4870785954,\n                    3 : 13066.8913818,\n                    4 : 6533.2286041135,\n                    5 : 3266.5595244627,\n                    6 : 1633.2660045974,\n                    7 : 816.629554986,\n                    8 : 408.3139146768,\n                    9 : 204.1567415109,\n                    10 : 102.0783167832,\n                    11 : 51.0391448966,\n                    12 : 25.5195690743,\n                    13 : 12.7597836936,\n                    14 : 6.379891636,\n                    15 : 3.1899457653,\n                    16 : 1.5949728695,\n                    17 : 0.7974864315,\n                    18 : 0.3987432149,\n                    19 : 0.1993716073,\n                    20 : 0.0996858037,\n                    21 : 0.0498429018\n                };\n                break;\n            default:\n                resolutionsNatives = {\n                    0 : 156543.033928041,\n                    1 : 78271.51696402048,\n                    2 : 39135.758482010235,\n                    3 : 19567.87924100512,\n                    4 : 9783.93962050256,\n                    5 : 4891.96981025128,\n                    6 : 2445.98490512564,\n                    7 : 1222.99245256282,\n                    8 : 611.49622628141,\n                    9 : 305.7481131407048,\n                    10 : 152.8740565703525,\n                    11 : 76.43702828517624,\n                    12 : 38.21851414258813,\n                    13 : 19.10925707129406,\n                    14 : 9.554628535647032,\n                    15 : 4.777314267823516,\n                    16 : 2.388657133911758,\n                    17 : 1.194328566955879,\n                    18 : 0.5971642834779395,\n                    19 : 0.2985821417389697,\n                    20 : 0.1492910708694849,\n                    21 : 0.0746455354347424\n                };\n                break;\n        }\n\n        // gestion des autres SRS\n        // TODO\n        // if (crs) {\n        // }\n\n        var resolution = scaleDenominator * 0.00028;\n\n        for (var index in resolutionsNatives) {\n            if (resolutionsNatives.hasOwnProperty(index)) {\n                if (resolutionsNatives[index] <= resolution) {\n                    index = parseInt(index, 10);\n                    return index;\n                }\n            }\n        }\n\n        return 0; // -1 ?\n    },\n\n    /**\n     * Get attributions list for a layer, based on current zoom and extent\n     *\n     * @function getAttributions\n     * @param {Object} params - function params\n     * @param {Array.<Float>} params.extent - map current geographical extent (EPSG:4326) : [top, left, bottom, right] = [maxy, minx, miny, maxx]\n     * @param {Number} params.zoom - map current zoom\n     * @param {String} params.crs - map current projection code (ex \"EPSG:2154\")\n     * @param {Boolean} params.visibility - layer visibility\n     * @param {Gp.Services.Config.Originator} params.originators - resource originators (from Gp.Config.layers[].originators)\n     * @returns {Object} attributions - associative array, mapping originators url (keys) with their properties : html attributions elements\n     */\n    getAttributions : function (params) {\n        var zoom = params.zoom;\n\n        var attributions = [];\n\n        if (params.originators != null && params.visibility) {\n            // drawLogo = boolean, true if attribution should be displayed (zoom, extent), false otherwise\n            var drawLogo;\n            for (var j = 0, jl = params.originators.length; j < jl; j++) {\n                drawLogo = true;\n                var originator = params.originators[j];\n\n                var constraints = params.originators[j].constraints || [];\n                for (var k = 0, kl = constraints.length; k < kl; k++) {\n                    var constraint = constraints[k];\n                    drawLogo = true;\n\n                    var minZoomLevel = this.getZoomLevelFromScaleDenominator(constraint.maxScaleDenominator, params.crs);\n                    var maxZoomLevel = this.getZoomLevelFromScaleDenominator(constraint.minScaleDenominator, params.crs) || 21;\n\n                    // min zoom constraints\n                    if (minZoomLevel && (minZoomLevel > zoom)) {\n                        drawLogo = false;\n                    }\n\n                    // max zoom constraints\n                    if (drawLogo && maxZoomLevel && (maxZoomLevel < zoom)) {\n                        drawLogo = false;\n                    }\n\n                    // bbox constraints\n                    var bbox = constraint.bbox;\n                    if (drawLogo && bbox) {\n                        drawLogo = false;\n                        var viewExtent = params.extent;\n                        if (viewExtent) {\n                            var bounds = [bbox.top, bbox.left, bbox.bottom, bbox.right];\n                            if (this.intersects(viewExtent, bounds)) {\n                                // at least one constraint matches the map ones\n                                drawLogo = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (drawLogo) {\n                    // on a un originator qui correspond au zoom et à l'étendue.\n\n                    var logo = originator.logo;\n                    var url = originator.url;\n                    var name = originator.name ? originator.name : \"\";\n                    var text = originator.attribution;\n\n                    var container = document.createElement(\"div\");\n                    container.className = \"gp-control-attribution\";\n\n                    // on crée un lien dans tous les cas (même s'il ne pointe pas vers une référence), pour avoir accès à la class CSS (pour surcharge)\n                    var link = null;\n                    link = document.createElement(\"a\");\n                    link.className = \"gp-control-attribution-link\";\n                    link.target = \"_blank\";\n                    container.appendChild(link);\n                    if (url) {\n                        link.href = url;\n                    }\n\n                    var bImage = !!(logo);\n                    var image = null;\n                    // si on a un logo, on l'affiche à l'interieur du lien\n                    if (bImage) {\n                        image = document.createElement(\"img\");\n                        if (link) {\n                            image.className = \"gp-control-attribution-image\";\n                            link.appendChild(image);\n                        } else {\n                            image.className = \"\";\n                            container.appendChild(image);\n                        }\n                        image.src = logo;\n                        image.title = text || name;\n                        image.style.height = \"30px\";\n                        image.style.width = \"30px\";\n                    } else {\n                        // sinon, on affiche le nom de l'originator, ou sa description ou l'url.\n                        if (name) {\n                            link.textContent = name;\n                        } else if (text) {\n                            link.textContent = text;\n                        } else if (url) {\n                            link.textContent = url;\n                        } else {\n                            link.textContent = \"\";\n                        }\n                    }\n\n                    attributions.push(container.innerHTML + \" \");\n                }\n            }\n        }\n\n        return attributions;\n    },\n\n    /**\n     * Determines if one extent (extent1) intersects another (extent2)\n     *\n     * @function intersects\n     * @param {Array.<Float>} extent1 - First extent : [top, left, bottom, right] = [maxy, minx, miny, maxx]\n     * @param {Array.<Float>} extent2 - Second extent : [top, left, bottom, right] = [maxy, minx, miny, maxx]\n     * @return {Boolean} intersects - True if the two extents intersect, false otherwise.\n     */\n    intersects : function (extent1, extent2) {\n        var intersectsX = (extent1[1] <= extent2[3]) && (extent2[1] <= extent1[3]);\n        var intersectsY = (extent1[2] <= extent2[0]) && (extent2[2] <= extent1[0]);\n        return intersectsX && intersectsY;\n    }\n};\n\nexport default LayerUtils;\n","import * as Log from \"loglevel\";\n\n/**\n * @module LoggerByDefault\n * @alias module:~utils/Logger\n * @description\n * ...\n *\n * @example\n * import Logger from \"gpf-ext-ol/utils/LoggerByDefault\"\n * ou \n * import {Logger} from \"gpf-ext-ol\n * \n * Logger.getLogger();\n * Logger.disableAll();\n * Logger.enableAll();\n */\nvar LoggerByDefault = {\n    /**\n     * creation d'un logger statique\n     *\n     * @function getLogger\n     * @param {String} [name=\"default\"] - the logger name\n     * @returns {Object} logger\n     */\n    getLogger : function (name) {\n        // on définit process si non défini dans l'environnement\n        if (typeof process === \"undefined\") {\n            var process = {};\n            process.env = {\n                VERBOSE : false\n            };\n        }\n        (process.env.VERBOSE) ? Log.enableAll() : Log.disableAll();\n        var logname = name || \"default\";\n        return Log.getLogger(logname);\n    },\n    /**\n     * desactive tous les loggers\n     * @function disableAll\n     */\n    disableAll : function () {\n        var loggers = Log.getLoggers();\n        for (const key in loggers) {\n            if (Object.hasOwnProperty.call(loggers, key)) {\n                const logger = loggers[key];\n                logger.disableAll();\n            }\n        }\n    },\n    /**\n     * active tous les loggers\n     * @function enableAll\n     */\n    enableAll : function () {\n        var loggers = Log.getLoggers();\n        for (const key in loggers) {\n            if (Object.hasOwnProperty.call(loggers, key)) {\n                const logger = loggers[key];\n                logger.enableAll();\n            }\n        }\n    }\n};\n\nexport default LoggerByDefault;\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n    var isIE = (typeof window !== undefinedType) && (typeof window.navigator !== undefinedType) && (\n        /Trident\\/|MSIE /.test(window.navigator.userAgent)\n    );\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    var _loggersByName = {};\n    var defaultLogger = null;\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Trace() doesn't print the message in IE, so for that case we need to wrap it\n    function traceForIE() {\n        if (console.log) {\n            if (console.log.apply) {\n                console.log.apply(console, arguments);\n            } else {\n                // In old IE, native console methods themselves don't have apply().\n                Function.prototype.apply.apply(console.log, [console, arguments]);\n            }\n        }\n        if (console.trace) console.trace();\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (methodName === 'trace' && isIE) {\n            return traceForIE;\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods() {\n        /*jshint validthis:true */\n        var level = this.getLevel();\n\n        // Replace the actual methods.\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, this.name);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n\n        // Return any important warnings.\n        if (typeof console === undefinedType && level < this.levels.SILENT) {\n            return \"No console available for logging\";\n        }\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, _level, _loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, factory) {\n      // Private instance variables.\n      var self = this;\n      /**\n       * The level inherited from a parent logger (or a global default). We\n       * cache this here rather than delegating to the parent so that it stays\n       * in sync with the actual logging methods that we have installed (the\n       * parent could change levels but we might not have rebuilt the loggers\n       * in this child yet).\n       * @type {number}\n       */\n      var inheritedLevel;\n      /**\n       * The default level for this logger, if any. If set, this overrides\n       * `inheritedLevel`.\n       * @type {number|null}\n       */\n      var defaultLevel;\n      /**\n       * A user-specific level for this logger. If set, this overrides\n       * `defaultLevel`.\n       * @type {number|null}\n       */\n      var userLevel;\n\n      var storageKey = \"loglevel\";\n      if (typeof name === \"string\") {\n        storageKey += \":\" + name;\n      } else if (typeof name === \"symbol\") {\n        storageKey = undefined;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType || !storageKey) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var cookieName = encodeURIComponent(storageKey);\n                  var location = cookie.indexOf(cookieName + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(\n                          cookie.slice(location + cookieName.length + 1)\n                      )[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      function clearPersistedLevel() {\n          if (typeof window === undefinedType || !storageKey) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage.removeItem(storageKey);\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 UTC\";\n          } catch (ignore) {}\n      }\n\n      function normalizeLevel(input) {\n          var level = input;\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              return level;\n          } else {\n              throw new TypeError(\"log.setLevel() called with invalid level: \" + input);\n          }\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          if (userLevel != null) {\n            return userLevel;\n          } else if (defaultLevel != null) {\n            return defaultLevel;\n          } else {\n            return inheritedLevel;\n          }\n      };\n\n      self.setLevel = function (level, persist) {\n          userLevel = normalizeLevel(level);\n          if (persist !== false) {  // defaults to true\n              persistLevelIfPossible(userLevel);\n          }\n\n          // NOTE: in v2, this should call rebuild(), which updates children.\n          return replaceLoggingMethods.call(self);\n      };\n\n      self.setDefaultLevel = function (level) {\n          defaultLevel = normalizeLevel(level);\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.resetLevel = function () {\n          userLevel = null;\n          clearPersistedLevel();\n          replaceLoggingMethods.call(self);\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      self.rebuild = function () {\n          if (defaultLogger !== self) {\n              inheritedLevel = normalizeLevel(defaultLogger.getLevel());\n          }\n          replaceLoggingMethods.call(self);\n\n          if (defaultLogger === self) {\n              for (var childName in _loggersByName) {\n                _loggersByName[childName].rebuild();\n              }\n          }\n      };\n\n      // Initialize all the internal levels.\n      inheritedLevel = normalizeLevel(\n          defaultLogger ? defaultLogger.getLevel() : \"WARN\"\n      );\n      var initialLevel = getPersistedLevel();\n      if (initialLevel != null) {\n          userLevel = normalizeLevel(initialLevel);\n      }\n      replaceLoggingMethods.call(self);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    defaultLogger = new Logger();\n\n    defaultLogger.getLogger = function getLogger(name) {\n        if ((typeof name !== \"symbol\" && typeof name !== \"string\") || name === \"\") {\n            throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n            logger = _loggersByName[name] = new Logger(\n                name,\n                defaultLogger.methodFactory\n            );\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    // ES6 default export, for compatibility\n    defaultLogger['default'] = defaultLogger;\n\n    return defaultLogger;\n}));\n","// extracted by mini-css-extract-plugin\nexport {};","module.exports = ol.control.Attribution;","module.exports = ol.proj;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// import CSS\nimport \"../../CSS/Controls/Attribution/GPFattribution.css\";\n// import \"../../CSS/Controls/Attribution/GPFattributionStyle.css\";\n// import OpenLayers\nimport Attribution from \"ol/control/Attribution\";\nimport { transformExtent as olTransformExtentProj } from \"ol/proj\";\n// import local\nimport LayerUtils from \"../../Utils/LayerUtils\";\nimport Logger from \"../../Utils/LoggerByDefault\";\n\nvar logger = Logger.getLogger(\"geoportalattribution\");\n\n/**\n * @classdesc\n * OpenLayers Control to manage Originators for layer resources\n *\n * @constructor\n * @extends {ol.control.Attribution}\n * @alias ol.control.GeoportalAttribution\n * @type {ol.control.GeoportalAttribution}\n * @param {Object} options - ol.control.Attribution options (see {@link http://openlayers.org/en/latest/apidoc/ol.control.Attribution.html ol.Control.Attribution})\n * @fires attributions:update\n * @example\n * var attribution = new ol.control.GeoportalAttribution({\n *   collapsed : false\n * });\n * map.addControl(attribution);\n * // listeners for attributions update :\n * attribution.on(\"attributions:update\", function (e) {});\n */\nvar GeoportalAttribution = class GeoportalAttribution extends Attribution {\n\n    /**\n     * See {@link ol.control.GeoportalAttribution}\n     * @module GeoportalAttribution\n     * @alias module:~controls/GeoportalAttribution\n     * @param {*} options - options\n     * @example\n     * import GeoportalAttribution from \"gpf-ext-ol/controls/GeoportalAttribution\"\n     * ou \n     * import { GeoportalAttribution } from \"gpf-ext-ol\"\n     */\n    constructor (options) {\n        options = options || {};\n\n        // Attributions are not collapsible for ol/source/OSM except if ...\n        options.collapsible = true;\n        options.collapsed = true;\n\n        super(options);\n\n        if (!(this instanceof GeoportalAttribution)) {\n            throw new TypeError(\"ERROR CLASS_CONSTRUCTOR\");\n        }\n\n\n        return this;\n    }\n\n    /**\n     * Overload setMap function, that enables to catch map events, such as movend events.\n     *\n     * @param {ol.Map} map - Map.\n     */\n    setMap (map) {\n        if (map != null) {\n            // Remove default ol.control.Attribution\n            var ctrls = map.getControls();\n            ctrls.forEach(\n                (ctrl) => {\n                    if (ctrl instanceof GeoportalAttribution) {\n                        return;\n                    }\n                    if (ctrl) {\n                        var classList = ctrl.element.classList;\n                        for (var i = 0; i < classList.length; i++) {\n                            if (classList[i] === \"ol-attribution\") {\n                                ctrls.remove(ctrl);\n                                break;\n                            }\n                        }\n                    }\n                }\n            );\n\n            // on récupère les attributions des couches déjà ajoutées à la carte.\n            this._updateAttributions(map);\n\n            // At every map movement, layers attributions have to be updated,\n            // according to map and originators zoom and extent.\n            map.on(\n                \"moveend\",\n                () => {\n                    this._updateAttributions(map);\n                }\n            );\n            map.getLayers().on(\n                \"add\",\n                () => {\n                    this._updateAttributions(map);\n                }\n            );\n            map.getLayers().on(\n                \"remove\",\n                () => {\n                    this._updateAttributions(map);\n                }\n            );\n        }\n\n        super.setMap(map);\n    }\n\n    /**\n     * Update map layers attributions\n     *\n     * @param {ol.Map} map - Map.\n     * @private\n     */\n    _updateAttributions (map) {\n        // get map parameters\n        var mapAttributions = {};\n\n        var view = map.getView();\n        // extent, then convert to geographical coordinates\n        var extent = view.calculateExtent(map.getSize());\n        var mapProjection = view.getProjection().getCode();\n        var geoExtent = olTransformExtentProj(extent, mapProjection, \"EPSG:4326\");\n        // transform extent from [minx, miny, maxx, maxy] to [maxy, minx, miny, maxx]\n        var standardExtent = [geoExtent[3], geoExtent[0], geoExtent[1], geoExtent[2]];\n        // zoom\n        var zoom = view.getZoom();\n        // layers\n        var layers = map.getLayers().getArray();\n\n        // info : This option suppresses warnings about functions inside of loops.\n        /* jshint loopfunc: true */\n\n        // loop on layers to get their originators, if there is at least one originator, and if layer is visible.\n        for (var i = 0; i < layers.length; i++) {\n            // distinguish case of ol.layer.Group (which is made up of layers with their own source)\n            // and other ol.layer (with their own source)\n            if (layers[i].getSource) {\n                // single ol.layer\n                this._updateLayerAttributions(layers[i], mapAttributions, standardExtent, mapProjection, zoom);\n            } else if (layers[i].getLayers) {\n                // ol.layer.Group\n                var lyrs = layers[i].getLayers();\n                lyrs.forEach(\n                    (lyr) => {\n                        if (lyr.getSource) {\n                            this._updateLayerAttributions(lyr, mapAttributions, standardExtent, mapProjection, zoom);\n                        } else {\n                            logger.log(\"cannot find layer source in layergroup \", layers[i]);\n                        }\n                    }\n                );\n            }\n        }\n    }\n\n    /**\n     * Update a layer attributions\n     *\n     * @param {ol.layer} layer - layer\n     * @param {Object} mapAttributions - object recensing attributions already added, to prevent displaying twice the same producer\n     * @param {Array} mapExtent - map current extent\n     * @param {String} mapCrs - map current crs\n     * @param {Number} mapZoom - map current zoom\n     * @private\n     */\n    _updateLayerAttributions (layer, mapAttributions, mapExtent, mapCrs, mapZoom) {\n        if (!layer) {\n            logger.trace(\"layer is null !?\");\n            return;\n        }\n\n        var src = layer.getSource();\n        if (!src) {\n            logger.trace(\"source is not yet loaded !\");\n            return;\n        }\n\n        if (!mapAttributions) {\n            mapAttributions = {};\n        }\n\n        var attributions = [];\n\n        var visibility = layer.getVisible();\n        var originators = src._originators;\n\n        // info : clean previous attributions ONLY for Geoportal Layers (when src._originators is defined)\n        if (typeof originators !== \"undefined\") {\n            src.setAttributions(); // clean\n        }\n\n        if (originators && visibility) {\n            // get layer's attributions array\n            var layerAttributions = LayerUtils.getAttributions({\n                extent : mapExtent,\n                crs : mapCrs,\n                zoom : mapZoom,\n                visibility : visibility,\n                originators : originators\n            });\n\n            for (var j = 0; j < layerAttributions.length; j++) {\n                var attributionj = layerAttributions[j];\n                // check that this attribution hasn't been added yet for another layer\n                if (!mapAttributions.hasOwnProperty(attributionj)) {\n                    // add attribution html\n                    attributions.push(attributionj);\n\n                    // add attribution to mapAttributions, to manage all layers attributions\n                    mapAttributions[attributionj] = true;\n                }\n            };\n\n            // update source attribution\n            if (attributions.length !== 0) {\n                src.setAttributions(attributions);\n                /**\n                * event triggered when the attributions are updated\n                *\n                * @event attributions:update\n                * @type Object\n                * @property {Array} attributions - list of attributions\n                */\n                this.dispatchEvent({\n                    type : \"attributions:update\",\n                    attributions : attributions\n                });\n            }\n        }\n    }\n\n};\n\nexport default GeoportalAttribution;\n\n// Expose GeoportalAttribution as ol.control.GeoportalAttribution (for a build bundle)\nif (window.ol && window.ol.control) {\n    window.ol.control.GeoportalAttribution = GeoportalAttribution;\n}\n"],"names":["LayerUtils","getZoomLevelFromScaleDenominator","scaleDenominator","crs","resolutionsNatives","resolution","index","hasOwnProperty","parseInt","getAttributions","params","zoom","attributions","originators","visibility","drawLogo","j","jl","length","originator","constraints","k","kl","constraint","minZoomLevel","maxScaleDenominator","maxZoomLevel","minScaleDenominator","bbox","viewExtent","extent","bounds","top","left","bottom","right","intersects","logo","url","name","text","attribution","container","document","createElement","className","link","target","appendChild","href","bImage","image","src","title","style","height","width","textContent","push","innerHTML","extent1","extent2","intersectsX","intersectsY","Log","LoggerByDefault","getLogger","process","env","VERBOSE","enableAll","disableAll","logname","loggers","getLoggers","key","Object","call","logger","Attribution","transformExtent","olTransformExtentProj","Logger","GeoportalAttribution","_Attribution","options","_this","_classCallCheck","collapsible","collapsed","_callSuper","TypeError","_possibleConstructorReturn","_inherits","_createClass","value","setMap","map","_this2","ctrls","getControls","forEach","ctrl","classList","element","i","remove","_updateAttributions","on","getLayers","_get","_getPrototypeOf","prototype","_this3","mapAttributions","view","getView","calculateExtent","getSize","mapProjection","getProjection","getCode","geoExtent","standardExtent","getZoom","layers","getArray","getSource","_updateLayerAttributions","lyrs","lyr","log","layer","mapExtent","mapCrs","mapZoom","trace","getVisible","_originators","setAttributions","layerAttributions","attributionj","dispatchEvent","type","window","ol","control"],"sourceRoot":""}